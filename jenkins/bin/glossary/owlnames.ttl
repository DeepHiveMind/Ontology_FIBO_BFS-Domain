# baseURI: http://spec.edmcouncil.org/owlnames
# imports: http://spinrdf.org/spin
# imports: http://topbraid.org/sparqlmotionlib
# imports: http://www.w3.org/2004/02/skos/core
# prefix: owlnames

@prefix arg: <http://spinrdf.org/arg#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix owlnames: <http://spec.edmcouncil.org/owlnames#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sm: <http://topbraid.org/sparqlmotion#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix spif: <http://spinrdf.org/spif#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix spl: <http://spinrdf.org/spl#> .
@prefix ui: <http://uispin.org/ui#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://spec.edmcouncil.org/owlnames>
  rdf:type owl:Ontology ;
  owl:imports <http://spinrdf.org/spin> ;
  owl:imports <http://topbraid.org/sparqlmotionlib> ;
  owl:imports <http://www.w3.org/2004/02/skos/core> ;
  owl:versionInfo "Created with TopBraid Composer"^^xsd:string ;
.
owlnames:Select_1
  rdf:type sp:Select ;
  rdfs:label "Select 1"^^xsd:string ;
.
owlnames:Select_2
  rdf:type sp:Select ;
  rdfs:label "Select 2"^^xsd:string ;
.
owlnames:clabel
  rdf:type rdf:Property ;
  rdfs:comment "template to use when followed by a blank node"^^xsd:string ;
  rdfs:domain rdf:Property ;
  rdfs:label "clabel"^^xsd:string ;
  rdfs:range xsd:string ;
.
owlnames:condition
  rdf:type rdf:Property ;
  rdfs:comment "output property for the conditions that a class (or property?) will satisfy."^^xsd:string ;
  rdfs:label "condition"^^xsd:string ;
.
owlnames:definition
  rdf:type rdf:Property ;
  rdfs:label "definition"^^xsd:string ;
.
owlnames:hasPostBlank
  rdf:type rdf:Property ;
  rdfs:domain rdf:Property ;
  rdfs:label "has post blank"^^xsd:string ;
  rdfs:range xsd:string ;
.
owlnames:hasPostIRI
  rdf:type rdf:Property ;
  rdfs:domain rdf:Property ;
  rdfs:label "has postfix"^^xsd:string ;
  rdfs:range xsd:string ;
.
owlnames:hasPrefix
  rdf:type rdf:Property ;
  rdfs:domain rdf:Property ;
  rdfs:label "has prefix"^^xsd:string ;
  rdfs:range xsd:string ;
.
owlnames:hasTemplate
  rdf:type rdf:Property ;
  rdfs:domain rdf:Property ;
  rdfs:label "has template"^^xsd:string ;
  rdfs:range xsd:string ;
.
owlnames:isPostBlank
  rdf:type rdf:Property ;
  rdfs:domain rdf:Property ;
  rdfs:label "is post blank"^^xsd:string ;
  rdfs:range xsd:string ;
.
owlnames:isPostIRI
  rdf:type rdf:Property ;
  rdfs:domain rdf:Property ;
  rdfs:label "is postfix"^^xsd:string ;
  rdfs:range xsd:string ;
.
owlnames:isPrefix
  rdf:type rdf:Property ;
  rdfs:domain rdf:Property ;
  rdfs:label "is prefix"^^xsd:string ;
  rdfs:range xsd:string ;
.
owlnames:isTemplate
  rdf:type rdf:Property ;
  rdfs:domain rdf:Property ;
  rdfs:label "is template"^^xsd:string ;
  rdfs:range xsd:string ;
.
owlnames:kindOf
  rdf:type rdf:Property ;
  rdfs:label "kinds"^^xsd:string ;
.
owlnames:kinds
  rdf:type rdf:Property ;
  rdfs:label "kinds"^^xsd:string ;
.
owlnames:label
  rdf:type rdf:Property ;
  rdfs:label "label"^^xsd:string ;
.
owlnames:logicalDefinition
  rdf:type rdf:Property ;
  rdfs:label "logical definition"^^xsd:string ;
.
owlnames:mdDefinition
  rdf:type rdf:Property ;
  rdfs:label "md definition"^^xsd:string ;
  rdfs:range xsd:string ;
.
owlnames:ntemplate
  rdf:type rdf:Property ;
  rdfs:comment "template to use when followed by a named node"^^xsd:string ;
  rdfs:domain rdf:Property ;
  rdfs:label "label"^^xsd:string ;
.
owlnames:plainPostBlank
  rdf:type rdf:Property ;
  rdfs:domain rdf:Property ;
  rdfs:label "plain post blank"^^xsd:string ;
  rdfs:range xsd:string ;
.
owlnames:plainPostIRI
  rdf:type rdf:Property ;
  rdfs:domain rdf:Property ;
  rdfs:label "plain postfix"^^xsd:string ;
  rdfs:range xsd:string ;
.
owlnames:plainPrefix
  rdf:type rdf:Property ;
  rdfs:domain rdf:Property ;
  rdfs:label "plain prefix"^^xsd:string ;
  rdfs:range xsd:string ;
.
owlnames:rlabel
  rdf:type spin:Function ;
  spin:body [
      rdf:type sp:Select ;
      sp:resultVariables (
          [
            sp:varName "result"^^xsd:string ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "l1"^^xsd:string ;
                    ] ;
                  sp:predicate rdfs:label ;
                  sp:subject [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Filter ;
                  sp:expression [
                      rdf:type sp:isIRI ;
                      sp:arg1 [
                          sp:varName "a1"^^xsd:string ;
                        ] ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object owl:Restriction ;
                  sp:predicate rdf:type ;
                  sp:subject [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "p"^^xsd:string ;
                    ] ;
                  sp:predicate owl:onProperty ;
                  sp:subject [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Filter ;
                  sp:expression [
                      rdf:type sp:notExists ;
                      sp:elements (
                          [
                            sp:object [
                                sp:varName "?0"^^xsd:string ;
                              ] ;
                            sp:predicate owl:onClass ;
                            sp:subject [
                                sp:varName "a1"^^xsd:string ;
                              ] ;
                          ]
                        ) ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "pl"^^xsd:string ;
                    ] ;
                  sp:predicate rdfs:label ;
                  sp:subject [
                      sp:varName "p"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:TriplePath ;
                  sp:object [
                      sp:varName "rc"^^xsd:string ;
                    ] ;
                  sp:path [
                      rdf:type sp:AltPath ;
                      sp:path1 [
                          rdf:type sp:AltPath ;
                          sp:path1 owl:someValuesFrom ;
                          sp:path2 owl:allValuesFrom ;
                        ] ;
                      sp:path2 owl:hasValue ;
                    ] ;
                  sp:subject [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "rc"^^xsd:string ;
                    ] ;
                  sp:predicate [
                      sp:varName "op"^^xsd:string ;
                    ] ;
                  sp:subject [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Bind ;
                  sp:expression [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:variable [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Filter ;
                  sp:expression [
                      rdf:type sp:in ;
                      sp:arg1 [
                          sp:varName "op"^^xsd:string ;
                        ] ;
                      sp:arg2 owl:someValuesFrom ;
                      sp:arg3 owl:allValuesFrom ;
                      sp:arg4 owl:hasValue ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "hpb"^^xsd:string ;
                    ] ;
                  sp:predicate owlnames:hasPostBlank ;
                  sp:subject [
                      sp:varName "op"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "hpi"^^xsd:string ;
                    ] ;
                  sp:predicate owlnames:hasPostIRI ;
                  sp:subject [
                      sp:varName "op"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "ipb"^^xsd:string ;
                    ] ;
                  sp:predicate owlnames:isPostBlank ;
                  sp:subject [
                      sp:varName "op"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "ipi"^^xsd:string ;
                    ] ;
                  sp:predicate owlnames:isPostIRI ;
                  sp:subject [
                      sp:varName "op"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "ppb"^^xsd:string ;
                    ] ;
                  sp:predicate owlnames:plainPostBlank ;
                  sp:subject [
                      sp:varName "op"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "ppi"^^xsd:string ;
                    ] ;
                  sp:predicate owlnames:plainPostIRI ;
                  sp:subject [
                      sp:varName "op"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "pp"^^xsd:string ;
                    ] ;
                  sp:predicate owlnames:plainPrefix ;
                  sp:subject [
                      sp:varName "op"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "hp"^^xsd:string ;
                    ] ;
                  sp:predicate owlnames:hasPrefix ;
                  sp:subject [
                      sp:varName "op"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "ip"^^xsd:string ;
                    ] ;
                  sp:predicate owlnames:isPrefix ;
                  sp:subject [
                      sp:varName "op"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Bind ;
                  sp:expression [
                      rdf:type sp:if ;
                      sp:arg1 [
                          rdf:type sp:regex ;
                          sp:arg1 [
                              sp:varName "pl"^^xsd:string ;
                            ] ;
                          sp:arg2 "^has +" ;
                        ] ;
                      sp:arg2 [
                          sp:varName "hp"^^xsd:string ;
                        ] ;
                      sp:arg3 [
                          rdf:type sp:if ;
                          sp:arg1 [
                              rdf:type sp:regex ;
                              sp:arg1 [
                                  sp:varName "pl"^^xsd:string ;
                                ] ;
                              sp:arg2 "^is +" ;
                            ] ;
                          sp:arg2 [
                              sp:varName "ip"^^xsd:string ;
                            ] ;
                          sp:arg3 [
                              sp:varName "pp"^^xsd:string ;
                            ] ;
                        ] ;
                    ] ;
                  sp:variable [
                      sp:varName "prefix"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Bind ;
                  sp:expression [
                      rdf:type sp:if ;
                      sp:arg1 [
                          rdf:type sp:regex ;
                          sp:arg1 [
                              sp:varName "pl"^^xsd:string ;
                            ] ;
                          sp:arg2 "^has +" ;
                        ] ;
                      sp:arg2 [
                          sp:varName "hpb"^^xsd:string ;
                        ] ;
                      sp:arg3 [
                          rdf:type sp:if ;
                          sp:arg1 [
                              rdf:type sp:regex ;
                              sp:arg1 [
                                  sp:varName "pl"^^xsd:string ;
                                ] ;
                              sp:arg2 "^is +" ;
                            ] ;
                          sp:arg2 [
                              sp:varName "ipb"^^xsd:string ;
                            ] ;
                          sp:arg3 [
                              sp:varName "ppb"^^xsd:string ;
                            ] ;
                        ] ;
                    ] ;
                  sp:variable [
                      sp:varName "postblank"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Bind ;
                  sp:expression [
                      rdf:type sp:if ;
                      sp:arg1 [
                          rdf:type sp:regex ;
                          sp:arg1 [
                              sp:varName "pl"^^xsd:string ;
                            ] ;
                          sp:arg2 "^has +" ;
                        ] ;
                      sp:arg2 [
                          sp:varName "hpi"^^xsd:string ;
                        ] ;
                      sp:arg3 [
                          rdf:type sp:if ;
                          sp:arg1 [
                              rdf:type sp:regex ;
                              sp:arg1 [
                                  sp:varName "pl"^^xsd:string ;
                                ] ;
                              sp:arg2 "^is +" ;
                            ] ;
                          sp:arg2 [
                              sp:varName "ipi"^^xsd:string ;
                            ] ;
                          sp:arg3 [
                              sp:varName "ppi"^^xsd:string ;
                            ] ;
                        ] ;
                    ] ;
                  sp:variable [
                      sp:varName "postIRI"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Bind ;
                  sp:expression [
                      rdf:type sp:if ;
                      sp:arg1 [
                          rdf:type sp:isBlank ;
                          sp:arg1 [
                              sp:varName "rc"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 [
                          sp:varName "postblank"^^xsd:string ;
                        ] ;
                      sp:arg3 [
                          sp:varName "postIRI"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:variable [
                      sp:varName "post"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Bind ;
                  sp:expression [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          sp:varName "pl"^^xsd:string ;
                        ] ;
                      sp:arg2 "(^has +)|(^is +)" ;
                      sp:arg3 "" ;
                    ] ;
                  sp:variable [
                      sp:varName "pln"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Bind ;
                  sp:expression [
                      rdf:type sp:if ;
                      sp:arg1 [
                          rdf:type sp:isBlank ;
                          sp:arg1 [
                              sp:varName "rc"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 [
                          sp:varName "oplc"^^xsd:string ;
                        ] ;
                      sp:arg3 [
                          sp:varName "oplp"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:variable [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Bind ;
                  sp:expression [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          rdf:type sp:replace ;
                          sp:arg1 [
                              rdf:type sp:concat ;
                              sp:arg1 [
                                  sp:varName "prefix"^^xsd:string ;
                                ] ;
                              sp:arg2 [
                                  sp:varName "post"^^xsd:string ;
                                ] ;
                            ] ;
                          sp:arg2 "\\{\\?1}" ;
                          sp:arg3 [
                              sp:varName "pln"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 "\\{\\?2}" ;
                      sp:arg3 [
                          sp:varName "rcl"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:variable [
                      sp:varName "l2"^^xsd:string ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object owl:Class ;
                  sp:predicate rdf:type ;
                  sp:subject [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "b"^^xsd:string ;
                    ] ;
                  sp:predicate [
                      sp:varName "oc"^^xsd:string ;
                    ] ;
                  sp:subject [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Filter ;
                  sp:expression [
                      rdf:type sp:in ;
                      sp:arg1 [
                          sp:varName "oc"^^xsd:string ;
                        ] ;
                      sp:arg2 owl:intersectionOf ;
                      sp:arg3 owl:unionOf ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "car"^^xsd:string ;
                    ] ;
                  sp:predicate rdf:first ;
                  sp:subject [
                      sp:varName "b"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "cdr"^^xsd:string ;
                    ] ;
                  sp:predicate rdf:rest ;
                  sp:subject [
                      sp:varName "b"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:predicate owlnames:ntemplate ;
                  sp:subject [
                      sp:varName "oc"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Bind ;
                  sp:expression [
                      rdf:type sp:concat ;
                      sp:arg1 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "cdr"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 [
                          sp:varName "opl"^^xsd:string ;
                        ] ;
                      sp:arg3 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "car"^^xsd:string ;
                            ] ;
                        ] ;
                    ] ;
                  sp:variable [
                      sp:varName "l3"^^xsd:string ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  rdf:type sp:Filter ;
                  sp:expression [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "a1"^^xsd:string ;
                        ] ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "car"^^xsd:string ;
                    ] ;
                  sp:predicate rdf:first ;
                  sp:subject [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "cdr"^^xsd:string ;
                    ] ;
                  sp:predicate rdf:rest ;
                  sp:subject [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Bind ;
                  sp:expression [
                      rdf:type sp:if ;
                      sp:arg1 [
                          rdf:type sp:eq ;
                          sp:arg1 [
                              sp:varName "cdr"^^xsd:string ;
                            ] ;
                          sp:arg2 () ;
                        ] ;
                      sp:arg2 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "car"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg3 [
                          rdf:type sp:concat ;
                          sp:arg1 [
                              rdf:type owlnames:rlabel ;
                              arg:a1 [
                                  sp:varName "car"^^xsd:string ;
                                ] ;
                            ] ;
                          sp:arg2 ", " ;
                          sp:arg3 [
                              rdf:type owlnames:rlabel ;
                              arg:a1 [
                                  sp:varName "cdr"^^xsd:string ;
                                ] ;
                            ] ;
                        ] ;
                    ] ;
                  sp:variable [
                      sp:varName "l4"^^xsd:string ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object owl:Restriction ;
                  sp:predicate rdf:type ;
                  sp:subject [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "p"^^xsd:string ;
                    ] ;
                  sp:predicate owl:onProperty ;
                  sp:subject [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "pl"^^xsd:string ;
                    ] ;
                  sp:predicate rdfs:label ;
                  sp:subject [
                      sp:varName "p"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Optional ;
                  sp:elements (
                      [
                        sp:object [
                            sp:varName "xx"^^xsd:string ;
                          ] ;
                        sp:predicate owl:onClass ;
                        sp:subject [
                            sp:varName "a1"^^xsd:string ;
                          ] ;
                      ]
                    ) ;
                ]
                [
                  rdf:type sp:Bind ;
                  sp:expression [
                      rdf:type sp:coalesce ;
                      sp:arg1 [
                          sp:varName "xx"^^xsd:string ;
                        ] ;
                      sp:arg2 owl:Thing ;
                    ] ;
                  sp:variable [
                      sp:varName "rc"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Bind ;
                  sp:expression [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:variable [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "card"^^xsd:string ;
                    ] ;
                  sp:predicate [
                      sp:varName "cop"^^xsd:string ;
                    ] ;
                  sp:subject [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Filter ;
                  sp:expression [
                      rdf:type sp:in ;
                      sp:arg1 [
                          sp:varName "cop"^^xsd:string ;
                        ] ;
                      sp:arg2 owl:minQualifiedCardinality ;
                      sp:arg3 owl:maxQualifiedCardinality ;
                      sp:arg4 owl:qualifiedCardinality ;
                      sp:arg5 owl:minCardinality ;
                      sp:arg6 owl:maxCardinality ;
                      sp:arg7 owl:cardinality ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "hpb"^^xsd:string ;
                    ] ;
                  sp:predicate owlnames:hasPostBlank ;
                  sp:subject [
                      sp:varName "cop"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "hpi"^^xsd:string ;
                    ] ;
                  sp:predicate owlnames:hasPostIRI ;
                  sp:subject [
                      sp:varName "cop"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "ipb"^^xsd:string ;
                    ] ;
                  sp:predicate owlnames:isPostBlank ;
                  sp:subject [
                      sp:varName "cop"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "ipi"^^xsd:string ;
                    ] ;
                  sp:predicate owlnames:isPostIRI ;
                  sp:subject [
                      sp:varName "cop"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "ppb"^^xsd:string ;
                    ] ;
                  sp:predicate owlnames:plainPostBlank ;
                  sp:subject [
                      sp:varName "cop"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "ppi"^^xsd:string ;
                    ] ;
                  sp:predicate owlnames:plainPostIRI ;
                  sp:subject [
                      sp:varName "cop"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "pp"^^xsd:string ;
                    ] ;
                  sp:predicate owlnames:plainPrefix ;
                  sp:subject [
                      sp:varName "cop"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "hp"^^xsd:string ;
                    ] ;
                  sp:predicate owlnames:hasPrefix ;
                  sp:subject [
                      sp:varName "cop"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "ip"^^xsd:string ;
                    ] ;
                  sp:predicate owlnames:isPrefix ;
                  sp:subject [
                      sp:varName "cop"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Bind ;
                  sp:expression [
                      rdf:type sp:if ;
                      sp:arg1 [
                          rdf:type sp:regex ;
                          sp:arg1 [
                              sp:varName "pl"^^xsd:string ;
                            ] ;
                          sp:arg2 "^has +" ;
                        ] ;
                      sp:arg2 [
                          sp:varName "hp"^^xsd:string ;
                        ] ;
                      sp:arg3 [
                          rdf:type sp:if ;
                          sp:arg1 [
                              rdf:type sp:regex ;
                              sp:arg1 [
                                  sp:varName "pl"^^xsd:string ;
                                ] ;
                              sp:arg2 "^is +" ;
                            ] ;
                          sp:arg2 [
                              sp:varName "ip"^^xsd:string ;
                            ] ;
                          sp:arg3 [
                              sp:varName "pp"^^xsd:string ;
                            ] ;
                        ] ;
                    ] ;
                  sp:variable [
                      sp:varName "prefix"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Bind ;
                  sp:expression [
                      rdf:type sp:if ;
                      sp:arg1 [
                          rdf:type sp:regex ;
                          sp:arg1 [
                              sp:varName "pl"^^xsd:string ;
                            ] ;
                          sp:arg2 "^has +" ;
                        ] ;
                      sp:arg2 [
                          sp:varName "hpb"^^xsd:string ;
                        ] ;
                      sp:arg3 [
                          rdf:type sp:if ;
                          sp:arg1 [
                              rdf:type sp:regex ;
                              sp:arg1 [
                                  sp:varName "pl"^^xsd:string ;
                                ] ;
                              sp:arg2 "^is +" ;
                            ] ;
                          sp:arg2 [
                              sp:varName "ipb"^^xsd:string ;
                            ] ;
                          sp:arg3 [
                              sp:varName "ppb"^^xsd:string ;
                            ] ;
                        ] ;
                    ] ;
                  sp:variable [
                      sp:varName "postblank"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Bind ;
                  sp:expression [
                      rdf:type sp:if ;
                      sp:arg1 [
                          rdf:type sp:regex ;
                          sp:arg1 [
                              sp:varName "pl"^^xsd:string ;
                            ] ;
                          sp:arg2 "^has +" ;
                        ] ;
                      sp:arg2 [
                          sp:varName "hpi"^^xsd:string ;
                        ] ;
                      sp:arg3 [
                          rdf:type sp:if ;
                          sp:arg1 [
                              rdf:type sp:regex ;
                              sp:arg1 [
                                  sp:varName "pl"^^xsd:string ;
                                ] ;
                              sp:arg2 "^is +" ;
                            ] ;
                          sp:arg2 [
                              sp:varName "ipi"^^xsd:string ;
                            ] ;
                          sp:arg3 [
                              sp:varName "ppi"^^xsd:string ;
                            ] ;
                        ] ;
                    ] ;
                  sp:variable [
                      sp:varName "postIRI"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Bind ;
                  sp:expression [
                      rdf:type sp:if ;
                      sp:arg1 [
                          rdf:type sp:isBlank ;
                          sp:arg1 [
                              sp:varName "rc"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 [
                          sp:varName "postblank"^^xsd:string ;
                        ] ;
                      sp:arg3 [
                          sp:varName "postIRI"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:variable [
                      sp:varName "post"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Bind ;
                  sp:expression [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          sp:varName "pl"^^xsd:string ;
                        ] ;
                      sp:arg2 "(^has +)|(^is +)" ;
                      sp:arg3 "" ;
                    ] ;
                  sp:variable [
                      sp:varName "pln"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Bind ;
                  sp:expression [
                      rdf:type sp:if ;
                      sp:arg1 [
                          rdf:type sp:isBlank ;
                          sp:arg1 [
                              sp:varName "rc"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 [
                          sp:varName "oplc"^^xsd:string ;
                        ] ;
                      sp:arg3 [
                          sp:varName "oplp"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:variable [
                      sp:varName "s"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Bind ;
                  sp:expression [
                      sp:varName "pln"^^xsd:string ;
                    ] ;
                  sp:variable [
                      sp:varName "fill1"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Bind ;
                  sp:expression [
                      rdf:type xsd:string ;
                      sp:arg1 [
                          sp:varName "card"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:variable [
                      sp:varName "fill2"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Bind ;
                  sp:expression [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                  sp:variable [
                      sp:varName "fill3"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Bind ;
                  sp:expression [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          rdf:type sp:replace ;
                          sp:arg1 [
                              rdf:type sp:replace ;
                              sp:arg1 [
                                  rdf:type sp:replace ;
                                  sp:arg1 [
                                      rdf:type sp:concat ;
                                      sp:arg1 [
                                          sp:varName "prefix"^^xsd:string ;
                                        ] ;
                                      sp:arg2 [
                                          sp:varName "post"^^xsd:string ;
                                        ] ;
                                    ] ;
                                  sp:arg2 "\\{\\?1}" ;
                                  sp:arg3 [
                                      sp:varName "fill1"^^xsd:string ;
                                    ] ;
                                ] ;
                              sp:arg2 "\\{\\?2}" ;
                              sp:arg3 [
                                  sp:varName "fill2"^^xsd:string ;
                                ] ;
                            ] ;
                          sp:arg2 "\\{\\?3}" ;
                          sp:arg3 [
                              sp:varName "fill3"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 "\\(s\\)" ;
                      sp:arg3 [
                          rdf:type sp:if ;
                          sp:arg1 [
                              rdf:type sp:eq ;
                              sp:arg1 [
                                  sp:varName "card"^^xsd:string ;
                                ] ;
                              sp:arg2 1 ;
                            ] ;
                          sp:arg2 "" ;
                          sp:arg3 "(s)" ;
                        ] ;
                    ] ;
                  sp:variable [
                      sp:varName "l5"^^xsd:string ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "?1"^^xsd:string ;
                    ] ;
                  sp:predicate rdf:type ;
                  sp:subject owlnames:rlabel ;
                ]
                [
                  rdf:type sp:Bind ;
                  sp:expression "No Option" ;
                  sp:variable [
                      sp:varName "lz"^^xsd:string ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:coalesce ;
                sp:arg1 [
                    sp:varName "l1"^^xsd:string ;
                  ] ;
                sp:arg2 [
                    sp:varName "l2"^^xsd:string ;
                  ] ;
                sp:arg3 [
                    sp:varName "l3"^^xsd:string ;
                  ] ;
                sp:arg4 [
                    sp:varName "l4"^^xsd:string ;
                  ] ;
                sp:arg5 [
                    sp:varName "l5"^^xsd:string ;
                  ] ;
                sp:arg6 [
                    sp:varName "lz"^^xsd:string ;
                  ] ;
                sp:arg7 [
                    rdf:type sp:concat ;
                    sp:arg1 "NONE" ;
                    sp:arg2 [
                        rdf:type sp:str ;
                        sp:arg1 [
                            sp:varName "cop"^^xsd:string ;
                          ] ;
                      ] ;
                  ] ;
                sp:arg8 "NO ARG" ;
              ] ;
            sp:variable [
                sp:varName "result"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:constraint [
      rdf:type spl:Argument ;
      spl:predicate arg:a1 ;
      spl:valueType xsd:string ;
    ] ;
  rdfs:comment "# Create human readable labels for restrictions"^^xsd:string ;
  rdfs:subClassOf sm:Functions ;
.
owlnames:rname
  rdf:type spin:Function ;
  spin:body [
      rdf:type sp:Select ;
      sp:resultVariables (
          [
            sp:varName "result"^^xsd:string ;
          ]
        ) ;
      sp:text """PREFIX  fibo-fnd-occ-proc: <https://spec.edmcouncil.org/fibo/ontology/FND/Occurrent/Processes/>
PREFIX  fibo-fnd-occ-prod: <https://spec.edmcouncil.org/fibo/ontology/FND/Occurrent/Production/>
PREFIX  fibo-fnd-plc-adr: <https://spec.edmcouncil.org/fibo/ontology/FND/Places/Addresses/>
PREFIX  fibo-sec-dbt-ab-syn: <https://spec.edmcouncil.org/fibo/ontology/SEC/Debt/AssetBacked/SyntheticCDOs/>
PREFIX  fibo-be-corx-dmp: <https://spec.edmcouncil.org/fibo/ontology/BE/CorporationsExt/DeemedParents/>
PREFIX  fibo-fnd-acc-cur: <https://spec.edmcouncil.org/fibo/ontology/FND/Accounting/CurrencyAmount/>
PREFIX  fibo-bp-reg-req: <https://spec.edmcouncil.org/fibo/ontology/BP/Regulatory/RegulatoryRequirements/>
PREFIX  fibo-fnd-acc-4217: <https://spec.edmcouncil.org/fibo/ontology/FND/Accounting/ISO4217-CurrencyCodes/>
PREFIX  fibo-fnd-agrx-ctrx: <https://spec.edmcouncil.org/fibo/ontology/FND/AgreementsExt/ContractsExtensions/>
PREFIX  fibo-fnd-agrx-ele: <https://spec.edmcouncil.org/fibo/ontology/FND/AgreementsExt/ContractElements/>
PREFIX  fibo-loan-tem-sta: <https://spec.edmcouncil.org/fibo/ontology/LOAN/LoansTemporal/LoansStatus/>
PREFIX  spif: <http://spinrdf.org/spif#>
PREFIX  fibo-loan-tem-app: <https://spec.edmcouncil.org/fibo/ontology/LOAN/LoansTemporal/LoanApplicationsTemporal/>
PREFIX  fibo-der-ass-eqs: <https://spec.edmcouncil.org/fibo/ontology/DER/AssetDerivatives/EquitySwaps/>
PREFIX  fibo-loan-tem-apr: <https://spec.edmcouncil.org/fibo/ontology/LOAN/LoansTemporal/LoansAppraisal/>
PREFIX  fibo-loan-typ-com: <https://spec.edmcouncil.org/fibo/ontology/LOAN/LoanTypes/CommercialLoans/>
PREFIX  fibo-fnd-ptyx-ptyx: <https://spec.edmcouncil.org/fibo/ontology/FND/PartiesExt/PartyExtensions/>
PREFIX  fibo-ind-ir-ir: <https://spec.edmcouncil.org/fibo/ontology/IND/InterestRates/InterestRates/>
PREFIX  fibo-fnd-plc-cr: <https://spec.edmcouncil.org/fibo/ontology/FND/Places/CountryRepresentation/>
PREFIX  fibo-der-rtd-irswp: <https://spec.edmcouncil.org/fibo/ontology/DER/RateDerivatives/IRSwaps/>
PREFIX  fibo-fnd-ptyx-prc: <https://spec.edmcouncil.org/fibo/ontology/FND/PartiesExt/PartyRoleContext/>
PREFIX  fibo-fnd-dt-oc: <https://spec.edmcouncil.org/fibo/ontology/FND/DatesAndTimes/Occurrences/>
PREFIX  fibo-fnd-plcx-usa: <https://spec.edmcouncil.org/fibo/ontology/FND/PlacesExt/GeopoliticalUSA/>
PREFIX  fibo-der-der-opt: <https://spec.edmcouncil.org/fibo/ontology/DER/DerivativesContracts/Options/>
PREFIX  fibo-fnd-arrxx-ins: <https://spec.edmcouncil.org/fibo/ontology/FND/ArrangementsExt/ToolsAndInstruments/>
PREFIX  fibo-uo-plh: <https://spec.edmcouncil.org/fibo/ontology/UO/PlatonicAndHomogeneity/>
PREFIX  fibo-sec-sec-sch: <https://spec.edmcouncil.org/fibo/ontology/SEC/Securities/ParametricSchedules/>
PREFIX  fibo-sec-secx-resx: <https://spec.edmcouncil.org/fibo/ontology/SEC/SecuritiesExt/SecuritiesRestrictionsExt/>
PREFIX  fibo-sec-dbt-mm-trd: <https://spec.edmcouncil.org/fibo/ontology/SEC/Debt/MoneyMarkets/TradedShortTermDebt/>
PREFIX  fibo-fnd-org-lg: <https://spec.edmcouncil.org/fibo/ontology/FND/Organizations/LegitimateOrganizations/>
PREFIX  search: <http://topbraid.org/search#>
PREFIX  fibo-sec-secx-idx: <https://spec.edmcouncil.org/fibo/ontology/SEC/SecuritiesExt/SecuritiesIdentificationExt/>
PREFIX  fibo-be-le-lp: <https://spec.edmcouncil.org/fibo/ontology/BE/LegalEntities/LegalPersons/>
PREFIX  fibo-fnd-accx-assx: <https://spec.edmcouncil.org/fibo/ontology/FND/AccountingExt/AssetExtensions/>
PREFIX  fibo-sec-dbt-bo-li: <https://spec.edmcouncil.org/fibo/ontology/SEC/Debt/Bonds/BondsListings/>
PREFIX  fibo-fnd-bus-bg: <https://spec.edmcouncil.org/fibo/ontology/FND/Business/BusinessGoals/>
PREFIX  fibo-fnd-inf-padr: <https://spec.edmcouncil.org/fibo/ontology/FND/Information/PostalAddress/>
PREFIX  uix:  <http://topbraidlive.org/uix#>
PREFIX  fibo-der-ass-eqf: <https://spec.edmcouncil.org/fibo/ontology/DER/AssetDerivatives/EquityForwards/>
PREFIX  fibo-fnd-arrx-pq: <https://spec.edmcouncil.org/fibo/ontology/FND/Arrangements/PlatonicQuantities/>
PREFIX  fibo-fnd-pub-con: <https://spec.edmcouncil.org/fibo/ontology/FND/Publications/Conventions/>
PREFIX  fibo-uo-lat: <https://spec.edmcouncil.org/fibo/ontology/UO/Lattice/>
PREFIX  fibo-fbc-fct-eufseind: <https://spec.edmcouncil.org/fibo/ontology/FBC/FunctionalEntities/EuropeanEntities/EuropeanFinancialServicesEntitiesIndividuals/>
PREFIX  fibo-der-ass-eqo: <https://spec.edmcouncil.org/fibo/ontology/DER/AssetDerivatives/EquityOptions/>
PREFIX  fibo-fbc-fct-usfse: <https://spec.edmcouncil.org/fibo/ontology/FBC/FunctionalEntities/NorthAmericanEntities/USFinancialServicesEntities/>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  fibo-fnd-txn-sup: <https://spec.edmcouncil.org/fibo/ontology/FND/Transactions/SupplyTransactions/>
PREFIX  fibo-loan-tem-bor: <https://spec.edmcouncil.org/fibo/ontology/LOAN/LoansTemporal/LoanBorrowersTemporal/>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  fibo-fnd-occ-occ: <https://spec.edmcouncil.org/fibo/ontology/FND/Occurrent/Occurrents/>
PREFIX  dc:   <http://purl.org/dc/elements/1.1/>
PREFIX  fibo-be-corp-corp: <https://spec.edmcouncil.org/fibo/ontology/BE/Corporations/Corporations/>
PREFIX  fibo-fnd-org-fm: <https://spec.edmcouncil.org/fibo/ontology/FND/Organizations/FormalOrganizations/>
PREFIX  fibo-sec-sec-iss: <https://spec.edmcouncil.org/fibo/ontology/SEC/Securities/SecuritiesIssuance/>
PREFIX  fibo-be-ptrx-ptrx: <https://spec.edmcouncil.org/fibo/ontology/BE/PartnershipsExt/PartnershipsExtras/>
PREFIX  fibo-ind-fx-fx: <https://spec.edmcouncil.org/fibo/ontology/IND/ForeignExchange/ForeignExchange/>
PREFIX  fibo-bp-iss-ambs: <https://spec.edmcouncil.org/fibo/ontology/BP/SecuritiesIssuance/AgencyMBSIssuance/>
PREFIX  fibo-loan-typ-uns: <https://spec.edmcouncil.org/fibo/ontology/LOAN/LoanTypes/UnsecuredLoans/>
PREFIX  fibo-fnd-utlx-val: <https://spec.edmcouncil.org/fibo/ontology/FND/UtilitiesExt/Values/>
PREFIX  fibo-der-rat-indo: <https://spec.edmcouncil.org/fibo/ontology/DER/RateDerivatives/OTCIndexOptions/>
PREFIX  fibo-be-trx-tfdr: <https://spec.edmcouncil.org/fibo/ontology/BE/TrustsExt/TrustFundDirectRelations/>
PREFIX  fibo-der-fx-sw: <https://spec.edmcouncil.org/fibo/ontology/DER/FxDerivatives/FxSwaps/>
PREFIX  fibo-be-corx-corx: <https://spec.edmcouncil.org/fibo/ontology/BE/CorporationsExt/CorporationsExtras/>
PREFIX  fibo-fnd-gao-obj: <https://spec.edmcouncil.org/fibo/ontology/FND/GoalsAndObjectives/Objectives/>
PREFIX  fibo-der-der-otc: <https://spec.edmcouncil.org/fibo/ontology/DER/DerivativesContracts/OTCDerivatives/>
PREFIX  fibo-be-corx-ceq: <https://spec.edmcouncil.org/fibo/ontology/BE/CorporationsExt/CorporationEquity/>
PREFIX  fibo-der-der-oti: <https://spec.edmcouncil.org/fibo/ontology/DER/DerivativesContracts/OTCInstruments/>
PREFIX  fibo-bp-iss-muni: <https://spec.edmcouncil.org/fibo/ontology/BP/SecuritiesIssuance/MuniIssuance/>
PREFIX  fibo-cae-ce-cae: <https://spec.edmcouncil.org/fibo/ontology/CAE/CorporateEvents/CorporateActionsEvents/>
PREFIX  fibo-fnd-rel-rel: <https://spec.edmcouncil.org/fibo/ontology/FND/Relations/Relations/>
PREFIX  fibo-der-rtd-rtd: <https://spec.edmcouncil.org/fibo/ontology/DER/RateDerivatives/RateDerivatives/>
PREFIX  fn:   <http://www.w3.org/2005/xpath-functions#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  fibo-fbc-fct-rga: <https://spec.edmcouncil.org/fibo/ontology/FBC/FunctionalEntities/RegulatoryAgencies/>
PREFIX  lcc-lr: <http://www.omg.org/spec/LCC/Languages/LanguageRepresentation/>
PREFIX  fibo-be-lex-lec: <https://spec.edmcouncil.org/fibo/ontology/BE/LegalEntitiesExt/LEICapacity/>
PREFIX  fibo-be-le-fbo: <https://spec.edmcouncil.org/fibo/ontology/BE/LegalEntities/FormalBusinessOrganizations/>
PREFIX  fibo-fnd-txn-mkt: <https://spec.edmcouncil.org/fibo/ontology/FND/Transactions/MarketTransactions/>
PREFIX  json: <http://topbraid.org/json#>
PREFIX  fibo-der-fx-sp: <https://spec.edmcouncil.org/fibo/ontology/DER/FxDerivatives/FxSpots/>
PREFIX  fibo-md-dbtx-red: <https://spec.edmcouncil.org/fibo/ontology/MD/DebtTemporal/DebtRedemptionAmounts/>
PREFIX  fibo-fnd-arrx-asp: <https://spec.edmcouncil.org/fibo/ontology/FND/Arrangements/Aspects/>
PREFIX  fibo-ind-ir-pub: <https://spec.edmcouncil.org/fibo/ontology/IND/InterestRates/InterestRatePublishers/>
PREFIX  fibo-fnd-inf-tem: <https://spec.edmcouncil.org/fibo/ontology/FND/Information/TemporalInfo/>
PREFIX  fibo-fnd-arrxx-meth: <https://spec.edmcouncil.org/fibo/ontology/FND/ArrangementsExt/MethodsAndRules/>
PREFIX  fibo-be-oacx-opx: <https://spec.edmcouncil.org/fibo/ontology/BE/OwnershipAndControlExt/OwnershipPartiesExtras/>
PREFIX  fibo-fnd-gao-gl: <https://spec.edmcouncil.org/fibo/ontology/FND/GoalsAndObjectives/Goals/>
PREFIX  afn:  <http://jena.hpl.hp.com/ARQ/function#>
PREFIX  fibo-ind-mkt-cri: <https://spec.edmcouncil.org/fibo/ontology/IND/MarketIndices/CreditIndices/>
PREFIX  fibo-fnd-utl-val: <https://spec.edmcouncil.org/fibo/ontology/FND/UtilitiesExt/Values/>
PREFIX  fibo-fnd-accx-dtt: <https://spec.edmcouncil.org/fibo/ontology/FND/AccountingExt/DebtTerms/>
PREFIX  fibo-der-der-sp: <https://spec.edmcouncil.org/fibo/ontology/DER/DerivativesContracts/Spots/>
PREFIX  fibo-der-com-del: <https://spec.edmcouncil.org/fibo/ontology/DER/CommoditiesDerivatives/CommoditiesDelivery/>
PREFIX  fibo-loan-typ-per: <https://spec.edmcouncil.org/fibo/ontology/LOAN/LoanTypes/PersonalLoans/>
PREFIX  evnui: <http://evn.topbraidlive.org/ui#>
PREFIX  fibo-fnd-law-cor: <https://spec.edmcouncil.org/fibo/ontology/FND/Law/LegalCore/>
PREFIX  fibo-fnd-accx-crf: <https://spec.edmcouncil.org/fibo/ontology/FBC/DebtAndEquity/CreditFacilities/>
PREFIX  fibo-md-temx-cur: <https://spec.edmcouncil.org/fibo/ontology/MD/TemporalCore/AnalysisCurves/>
PREFIX  fibo-bp-iss-prc: <https://spec.edmcouncil.org/fibo/ontology/BP/SecuritiesIssuance/IssuanceProcess/>
PREFIX  fibo-fnd-plcx-gpo: <https://spec.edmcouncil.org/fibo/ontology/FND/PlacesExt/Geopolitical/>
PREFIX  fibo-loan-tem-cl: <https://spec.edmcouncil.org/fibo/ontology/LOAN/LoansTemporal/ConstructionLoansTemporal/>
PREFIX  fibo-fnd-plcx-gph: <https://spec.edmcouncil.org/fibo/ontology/FND/PlacesExt/Geophysical/>
PREFIX  crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#>
PREFIX  tables: <http://topbraid.org/tables#>
PREFIX  fibo-be-plc-plc: <https://spec.edmcouncil.org/fibo/ontology/BE/PrivateLimitedCompanies/PrivateLimitedCompanies/>
PREFIX  fibo-der-der-cof: <https://spec.edmcouncil.org/fibo/ontology/DER/DerivativesContracts/OptionContractsOnFutures/>
PREFIX  fibo-fnd-pub-pub: <https://spec.edmcouncil.org/fibo/ontology/FND/Publications/Publications/>
PREFIX  sm2wsdl: <http://topbraid.org/sparqlmotion/sm2wsdl.sms#>
PREFIX  tasks: <http://topbraid.org/tasks#>
PREFIX  fibo-be-oac-cown: <https://spec.edmcouncil.org/fibo/ontology/BE/OwnershipAndControl/CorporateOwnership/>
PREFIX  fibo-fnd-oac-ctl: <https://spec.edmcouncil.org/fibo/ontology/FND/OwnershipAndControl/Control/>
PREFIX  fibo-loan-typ-sec: <https://spec.edmcouncil.org/fibo/ontology/LOAN/LoanTypes/SecuredLoans/>
PREFIX  fibo-be-ptr-ptr: <https://spec.edmcouncil.org/fibo/ontology/BE/Partnerships/Partnerships/>
PREFIX  fibo-fbc-fct-cafse: <https://spec.edmcouncil.org/fibo/ontology/FBC/FunctionalEntities/NorthAmericanEntities/CAFinancialServicesEntities/>
PREFIX  fibo-loan-typ-cr: <https://spec.edmcouncil.org/fibo/ontology/LOAN/LoanTypes/CreditProducts/>
PREFIX  fibo-der-etd-fxc: <https://spec.edmcouncil.org/fibo/ontology/DER/ExchangeTradedDerivatives/FuturesExchanges/>
PREFIX  fibo-fnd-agrx-con: <https://spec.edmcouncil.org/fibo/ontology/FND/AgreementsExt/ContractualConstructs/>
PREFIX  fibo-der-ass-ass: <https://spec.edmcouncil.org/fibo/ontology/DER/AssetDerivatives/AssetDerivatives/>
PREFIX  fibo-loan-typ-prod: <https://spec.edmcouncil.org/fibo/ontology/LOAN/LoanTypes/LoanProducts/>
PREFIX  fibo-der-der-spn: <https://spec.edmcouncil.org/fibo/ontology/DER/DerivativesContracts/Swaptions/>
PREFIX  fibo-der-der-fwd: <https://spec.edmcouncil.org/fibo/ontology/DER/DerivativesContracts/Forwards/>
PREFIX  lcc-3166-1: <http://www.omg.org/spec/LCC/Countries/ISO3166-1-CountryCodes/>
PREFIX  fibo-sec-secx-lisx: <https://spec.edmcouncil.org/fibo/ontology/SEC/SecuritiesExt/SecuritiesListingsExt/>
PREFIX  fibo-sec-dbt-ab-spv: <https://spec.edmcouncil.org/fibo/ontology/SEC/Debt/AssetBacked/AssetBackedSPVs/>
PREFIX  fibo-loan-typ-cl: <https://spec.edmcouncil.org/fibo/ontology/LOAN/LoanTypes/ConstructionLoans/>
PREFIX  taxonomies: <http://evn.topbraidlive.org/evnprojects#>
PREFIX  fibo-be-lex-gty: <https://spec.edmcouncil.org/fibo/ontology/BE/LegalEntitiesExt/CorporateBodiesGuarantees/>
PREFIX  lcc-3166-2: <http://www.omg.org/spec/LCC/Countries/ISO3166-2-SubdivisionCodes/>
PREFIX  fibo-der-ratx-irsx: <https://spec.edmcouncil.org/fibo/ontology/DER/RateDerivativesExt/IRSwapTransactions/>
PREFIX  fibo-fbc-dae-dbt: <https://spec.edmcouncil.org/fibo/ontology/FBC/DebtAndEquities/Debt/>
PREFIX  fibo-md-temx-ins: <https://spec.edmcouncil.org/fibo/ontology/MD/TemporalCore/InstrumentTemporalTerms/>
PREFIX  fibo-fnd-gaox-aag: <https://spec.edmcouncil.org/fibo/ontology/FND/GoalsAndObjectivesExt/AutonomousAgentGoals/>
PREFIX  fibo-sec-dbt-dbtx-dbtx: <https://spec.edmcouncil.org/fibo/ontology/SEC/Debt/DebtFoundationsExt/DebtInstrumentsExt/>
PREFIX  fibo-ind-ei-caei: <https://spec.edmcouncil.org/fibo/ontology/IND/EconomicIndicators/NorthAmericanIndicators/CAEconomicIndicators/>
PREFIX  fibo-fnd-lawx-jr: <https://spec.edmcouncil.org/fibo/ontology/FND/LawExt/JuridicalReach/>
PREFIX  connectset-templates: <http://tbi.topbraidlive.org/system/connectset-templates#>
PREFIX  fibo-der-etd-fstd: <https://spec.edmcouncil.org/fibo/ontology/DER/ExchangeTradedDerivatives/FuturesStandardizedTerms/>
PREFIX  fibo-fnd-accx-acc: <https://spec.edmcouncil.org/fibo/ontology/FND/AccountingExt/AccountsMain/>
PREFIX  smf:  <http://topbraid.org/sparqlmotionfunctions#>
PREFIX  fibo-fnd-plcx-sit: <https://spec.edmcouncil.org/fibo/ontology/FND/PlacesExt/AddressSites/>
PREFIX  fibo-der-ass-brs: <https://spec.edmcouncil.org/fibo/ontology/DER/AssetDerivatives/BondReturnSwaps/>
PREFIX  fibo-be-oac-exec: <https://spec.edmcouncil.org/fibo/ontology/BE/OwnershipAndControl/Executives/>
PREFIX  sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#>
PREFIX  fibo-der-ratx-ratx: <https://spec.edmcouncil.org/fibo/ontology/DER/RateDerivativesExt/RateDerivativesExt/>
PREFIX  tablesmap: <http://topbraid.org/spin/tablesmap#>
PREFIX  fibo-fnd-gaox-objx: <https://spec.edmcouncil.org/fibo/ontology/FND/GoalsAndObjectivesExt/ObjectivesDetail/>
PREFIX  sml:  <http://topbraid.org/sparqlmotionlib#>
PREFIX  crosswalk: <http://topbraid.org/crosswalk#>
PREFIX  fibo-ind-ir-cm: <https://spec.edmcouncil.org/fibo/ontology/IND/InterestRates/CommonInterestRates/>
PREFIX  fibo-sec-dbt-mm-repo: <https://spec.edmcouncil.org/fibo/ontology/SEC/Debt/MoneyMarkets/REPOs/>
PREFIX  lcc-639-2: <http://www.omg.org/spec/LCC/Languages/ISO639-2-LanguageCodes/>
PREFIX  fibo-der-com-fwd: <https://spec.edmcouncil.org/fibo/ontology/DER/CommoditiesDerivatives/CommodityForwards/>
PREFIX  fibo-sec-dbt-bo-str: <https://spec.edmcouncil.org/fibo/ontology/SEC/Debt/Bonds/STRIPs/>
PREFIX  spinmap: <http://spinrdf.org/spinmap#>
PREFIX  fibo-der-etd-fut: <https://spec.edmcouncil.org/fibo/ontology/DER/ExchangeTradedDerivatives/Futures/>
PREFIX  fibo-sec-dbt-dbti: <https://spec.edmcouncil.org/fibo/ontology/SEC/Debt/DebtInstruments/>
PREFIX  fibo-fnd-bus-pasx: <https://spec.edmcouncil.org/fibo/ontology/FND/Business/ProductsAndServicesExt/>
PREFIX  fibo-fnd-org-org: <https://spec.edmcouncil.org/fibo/ontology/FND/Organizations/Organizations/>
PREFIX  fibo-der-etd-eto: <https://spec.edmcouncil.org/fibo/ontology/DER/ExchangeTradedDerivatives/ExchangeTradedOptions/>
PREFIX  fibo-fbc-fct-fse: <https://spec.edmcouncil.org/fibo/ontology/FBC/FunctionalEntities/FinancialServicesEntities/>
PREFIX  fibo-loan-loan-col: <https://spec.edmcouncil.org/fibo/ontology/LOAN/Loans/LoansCollateral/>
PREFIX  fibo-ext-snap-par-fao: <https://spec.edmcouncil.org/fibo/ontology/EXT/snap/partial/UN-FAOCountry/>
PREFIX  fibo-fbc-pas-caa: <https://spec.edmcouncil.org/fibo/ontology/FBC/ProductsAndServices/ClientsAndAccounts/>
PREFIX  fibo-be-le-cb: <https://spec.edmcouncil.org/fibo/ontology/BE/LegalEntities/CorporateBodies/>
PREFIX  spra: <http://spinrdf.org/spra#>
PREFIX  fibo-md-dbtx-int: <https://spec.edmcouncil.org/fibo/ontology/MD/DebtTemporal/DebtInterestAmounts/>
PREFIX  fibo-fnd-pas-pas: <https://spec.edmcouncil.org/fibo/ontology/FND/ProductsAndServices/ProductsAndServices/>
PREFIX  fibo-loan-loan-gty: <https://spec.edmcouncil.org/fibo/ontology/LOAN/Loans/LoansGuaranties/>
PREFIX  fibo-fnd-math-math: <https://spec.edmcouncil.org/fibo/ontology/FND/Math/Math/>
PREFIX  tops: <http://www.topbraid.org/tops#>
PREFIX  fibo-der-com-com: <https://spec.edmcouncil.org/fibo/ontology/DER/CommoditiesDerivatives/Commodities/>
PREFIX  fibo-fbc-fct-cajrga: <https://spec.edmcouncil.org/fibo/ontology/FBC/FunctionalEntities/NorthAmericanEntities/CARegulatoryAgencies/>
PREFIX  fibo-der-fx-ctr: <https://spec.edmcouncil.org/fibo/ontology/DER/FxDerivatives/FxContracts/>
PREFIX  fibo-ind-mkt-pub: <https://spec.edmcouncil.org/fibo/ontology/IND/MarketIndices/BasketIndexPublishers/>
PREFIX  fibo-fbc-fct-eufsind: <https://spec.edmcouncil.org/fibo/ontology/FBC/FunctionalEntities/EuropeanEntities/EuropeanFinancialServicesEntitiesIndividuals/>
PREFIX  fibo-sec-dbt-mm-lpn: <https://spec.edmcouncil.org/fibo/ontology/SEC/Debt/MoneyMarkets/LoanParticipationNotes/>
PREFIX  fibo-be-lex-fox: <https://spec.edmcouncil.org/fibo/ontology/BE/LegalEntitiesExt/FormalOrganizationsExtended/>
PREFIX  fibo-fnd-arrx-qtux: <https://spec.edmcouncil.org/fibo/ontology/FND/QuantitiesExt/QuantitiesAndUnitsExt/>
PREFIX  fibo-fnd-plcx-vrtx: <https://spec.edmcouncil.org/fibo/ontology/FND/PlacesExt/VirtualPlaces/>
PREFIX  fibo-fnd-pty-pty: <https://spec.edmcouncil.org/fibo/ontology/FND/Parties/Parties/>
PREFIX  spinmapl: <http://topbraid.org/spin/spinmapl#>
PREFIX  fibo-fnd-inf-lan: <https://spec.edmcouncil.org/fibo/ontology/FND/Information/Languages/>
PREFIX  fibo-sec-dbt-dbt-gty: <https://spec.edmcouncil.org/fibo/ontology/SEC/Debt/DebtFoundations/DebtInstrumentGuaranties/>
PREFIX  fibo-sec-eq-lpe: <https://spec.edmcouncil.org/fibo/ontology/SEC/Equities/LimitedPartnershipEquities/>
PREFIX  fibo-loan-loan-loan: <https://spec.edmcouncil.org/fibo/ontology/LOAN/Loans/LoanBasicTerms/>
PREFIX  fibo-fnd-math-amt: <https://spec.edmcouncil.org/fibo/ontology/FND/Math/Amounts/>
PREFIX  lcc-639-1: <http://www.omg.org/spec/LCC/Languages/ISO639-1-LanguageCodes/>
PREFIX  tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#>
PREFIX  spl:  <http://spinrdf.org/spl#>
PREFIX  fibo-der-etd-ostd: <https://spec.edmcouncil.org/fibo/ontology/DER/ExchangeTradedDerivatives/OptionsStandardizedTerms/>
PREFIX  fibo-loan-tem-col: <https://spec.edmcouncil.org/fibo/ontology/LOAN/LoansTemporal/LoanCollateralTemporal/>
PREFIX  fibo-der-rgt-raw: <https://spec.edmcouncil.org/fibo/ontology/DER/RightsInstruments/RightsAndWarrants/>
PREFIX  spr:  <http://spinrdf.org/spr#>
PREFIX  fibo-der-ass-bo: <https://spec.edmcouncil.org/fibo/ontology/DER/AssetDerivatives/BondOptions/>
PREFIX  fibo-fnd-plc-loc: <https://spec.edmcouncil.org/fibo/ontology/FND/Places/Locations/>
PREFIX  fibo-sec-secx-tax: <https://spec.edmcouncil.org/fibo/ontology/SEC/SecuritiesExt/SecuritiesTaxTreatment/>
PREFIX  fibo-md-dbtx-py: <https://spec.edmcouncil.org/fibo/ontology/MD/DebtTemporal/DebtPricingYields/>
PREFIX  fibo-loan-tem-ev: <https://spec.edmcouncil.org/fibo/ontology/LOAN/LoansTemporal/LoansEvents/>
PREFIX  fibo-ln-ln-hmda: <https://spec.edmcouncil.org/fibo/ontology/LOAN/LoanContracts/LoanHMDA/>
PREFIX  fibo-sec-sec-lst: <https://spec.edmcouncil.org/fibo/ontology/SEC/Securities/SecuritiesListings/>
PREFIX  fibo-be-oacx-cox: <https://spec.edmcouncil.org/fibo/ontology/BE/OwnershipAndControlExt/CorporateOwnershipExtras/>
PREFIX  fibo-fnd-txn-ecr: <https://spec.edmcouncil.org/fibo/ontology/FND/Transactions/EconomicResources/>
PREFIX  fibo-sec-eq-dr: <https://spec.edmcouncil.org/fibo/ontology/SEC/Equities/DepositaryReceipts/>
PREFIX  fibo-fnd-pub-std: <https://spec.edmcouncil.org/fibo/ontology/FND/Publications/Standards/>
PREFIX  fibo-fnd-txn-qr: <https://spec.edmcouncil.org/fibo/ontology/FND/Transactions/QuantifiedResources/>
PREFIX  fibo-fnd-ptyx-inv: <https://spec.edmcouncil.org/fibo/ontology/FND/PartiesExt/PartyInverses/>
PREFIX  fibo-der-derx-ma: <https://spec.edmcouncil.org/fibo/ontology/DER/DerivativesContractsExt/OTCDerivativeMasterAgreements/>
PREFIX  fibo-be-lex-nam: <https://spec.edmcouncil.org/fibo/ontology/BE/LegalEntitiesExt/EntityNames/>
PREFIX  fibo-be-fctx-rep: <https://spec.edmcouncil.org/fibo/ontology/BE/FunctionalEntitiesExt/ReportingEntities/>
PREFIX  fibo-be-fctx-fne: <https://spec.edmcouncil.org/fibo/ontology/BE/FunctionalEntitiesExt/FundEntities/>
PREFIX  fibo-der-fx-fwd: <https://spec.edmcouncil.org/fibo/ontology/DER/FxDerivatives/FxForwards/>
PREFIX  fibo-be-oacx-cpx: <https://spec.edmcouncil.org/fibo/ontology/BE/OwnershipAndControlExt/ControlPartiesExtras/>
PREFIX  fibo-fnd-arr-arr: <https://spec.edmcouncil.org/fibo/ontology/FND/Arrangements/Arrangements/>
PREFIX  fibo-fbc-fi-fi: <https://spec.edmcouncil.org/fibo/ontology/FBC/FinancialInstruments/FinancialInstruments/>
PREFIX  fibo-fnd-aap-agt: <https://spec.edmcouncil.org/fibo/ontology/FND/AgentsAndPeople/Agents/>
PREFIX  fibo-sec-eq-eq: <https://spec.edmcouncil.org/fibo/ontology/SEC/Equities/EquityInstruments/>
PREFIX  fibo-der-der-rsw: <https://spec.edmcouncil.org/fibo/ontology/DER/DerivativesContracts/ReturnSwaps/>
PREFIX  fibo-be-ge-caj: <https://spec.edmcouncil.org/fibo/ontology/BE/GovernmentEntities/NorthAmericanJurisdiction/CAGovernmentEntitiesAndJurisdictions/>
PREFIX  fibo-der-derx-swx: <https://spec.edmcouncil.org/fibo/ontology/DER/DerivativesContractsExt/SwapsExt/>
PREFIX  fibo-fnd-inf-adrx: <https://spec.edmcouncil.org/fibo/ontology/FND/Information/AddressExtensions/>
PREFIX  fibo-fnd-quax-qua: <https://spec.edmcouncil.org/fibo/ontology/FND/QuantitiesExt/QuantitiesExt/>
PREFIX  pf:   <http://jena.hpl.hp.com/ARQ/property#>
PREFIX  fibo-fnd-occ-ev: <https://spec.edmcouncil.org/fibo/ontology/FND/Occurrent/Events/>
PREFIX  lcc-cr: <http://www.omg.org/spec/LCC/Countries/CountryRepresentation/>
PREFIX  fibo-fnd-inf-doc: <https://spec.edmcouncil.org/fibo/ontology/FND/Information/Documentation/>
PREFIX  fibo-fnd-occ-act: <https://spec.edmcouncil.org/fibo/ontology/FND/Occurrent/Activities/>
PREFIX  fibo-fnd-lawx-rst: <https://spec.edmcouncil.org/fibo/ontology/FND/LawExt/RegulatoryRestrictions/>
PREFIX  metadata: <http://topbraid.org/metadata#>
PREFIX  tagger: <http://evn.topbraidlive.org/tagger#>
PREFIX  fibo-bp-iss-pmbs: <https://spec.edmcouncil.org/fibo/ontology/BP/SecuritiesIssuance/PrivateLabelMBSIssuance/>
PREFIX  fibo-fbc-fct-mkt: <https://spec.edmcouncil.org/fibo/ontology/FBC/FunctionalEntities/Markets/>
PREFIX  fibo-fnd-txn-sec: <https://spec.edmcouncil.org/fibo/ontology/FND/Transactions/SecuritiesTransactions/>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  fibo-loan-tem-tem: <https://spec.edmcouncil.org/fibo/ontology/LOAN/LoansTemporal/LoansTemporal/>
PREFIX  fibo-sec-dbt-ab-pbs: <https://spec.edmcouncil.org/fibo/ontology/SEC/Debt/AssetBacked/PoolBackedSecurities/>
PREFIX  fibo-fnd-bus-pol: <https://spec.edmcouncil.org/fibo/ontology/FND/Business/Policy/>
PREFIX  composite: <http://www.topbraid.org/2007/05/composite.owl#>
PREFIX  fibo-fbc-fct-ra: <https://spec.edmcouncil.org/fibo/ontology/FBC/FunctionalEntities/RegistrationAuthorities/>
PREFIX  fibo-fnd-accx-tax: <https://spec.edmcouncil.org/fibo/ontology/FND/AccountingExt/Taxation/>
PREFIX  let:  <http://uispin.org/let#>
PREFIX  shaclify: <http://topbraid.org/shacl/shaclify#>
PREFIX  fibo-sec-sec-pls: <https://spec.edmcouncil.org/fibo/ontology/SEC/Securities/Pools/>
PREFIX  fibo-loan-typ-gen: <https://spec.edmcouncil.org/fibo/ontology/LOAN/LoanTypes/GeneralLoans/>
PREFIX  fibo-bp-iss-mbs: <https://spec.edmcouncil.org/fibo/ontology/BP/SecuritiesIssuance/MBSIssuance/>
PREFIX  fibo-ln-ln-ln: <https://spec.edmcouncil.org/fibo/ontology/LOAN/LoanContracts/LoanCore/>
PREFIX  skosspin: <http://topbraid.org/spin/skosspin#>
PREFIX  fibo-be-ge-ge: <https://spec.edmcouncil.org/fibo/ontology/BE/GovernmentEntities/GovernmentEntities/>
PREFIX  fibo-der-drc-bsc: <https://spec.edmcouncil.org/fibo/ontology/DER/DerivativesContracts/DerivativesBasics/>
PREFIX  fibo-md-der-fut: <https://spec.edmcouncil.org/fibo/ontology/MD/DerivativesTemporal/FuturesTemporal/>
PREFIX  fibo-der-rat-rat: <https://spec.edmcouncil.org/fibo/ontology/DER/RateDerivatives/RateDerivatives/>
PREFIX  fibo-fnd-txn-rea: <https://spec.edmcouncil.org/fibo/ontology/FND/Transactions/REATransactions/>
PREFIX  fibo-fnd-txn-acc: <https://spec.edmcouncil.org/fibo/ontology/FND/Transactions/TransactionAccounting/>
PREFIX  fibo-fnd-inf-idx: <https://spec.edmcouncil.org/fibo/ontology/FND/Information/Identifiers/>
PREFIX  fibo-ln-ln-lgn: <https://spec.edmcouncil.org/fibo/ontology/LOAN/LoanContracts/LoanGeneric/>
PREFIX  fibo-sec-dbt-dbt-fin: <https://spec.edmcouncil.org/fibo/ontology/SEC/Debt/DebtFoundations/DebtFinance/>
PREFIX  fibo-sec-sec-rst: <https://spec.edmcouncil.org/fibo/ontology/SEC/Securities/SecuritiesRestrictions/>
PREFIX  fibo-sec-secx-finx: <https://spec.edmcouncil.org/fibo/ontology/SEC/SecuritiesExt/FinancialInstrumentsExt/>
PREFIX  fibo-civ-fnd-clx: <https://spec.edmcouncil.org/fibo/ontology/CIV/FundsExt/CIVClassification/>
PREFIX  fibo-sec-sec-idind: <https://spec.edmcouncil.org/fibo/ontology/SEC/Securities/SecuritiesIdentificationIndividuals/>
PREFIX  fibo-be-oacx-ccx: <https://spec.edmcouncil.org/fibo/ontology/BE/OwnershipAndControlExt/CorporateControlExtras/>
PREFIX  fibo-fnd-lawx-jurx: <https://spec.edmcouncil.org/fibo/ontology/FND/LawExt/JurisdictionExtended/>
PREFIX  fibo-fnd-oac-oac: <https://spec.edmcouncil.org/fibo/ontology/FND/OwnershipAndControl/OwnershipAndControl/>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  fibo-sec-eq-shr: <https://spec.edmcouncil.org/fibo/ontology/SEC/Equities/ShareholderRights/>
PREFIX  fibo-sec-eq-she: <https://spec.edmcouncil.org/fibo/ontology/SEC/Equities/ShareholderEquity/>
PREFIX  default: <http://uispin.org/default#>
PREFIX  fibo-fnd-dt-bd: <https://spec.edmcouncil.org/fibo/ontology/FND/DatesAndTimes/BusinessDates/>
PREFIX  fibo-der-der-ex: <https://spec.edmcouncil.org/fibo/ontology/DER/DerivativesContracts/ExerciseConventions/>
PREFIX  arg:  <http://spinrdf.org/arg#>
PREFIX  sm:   <http://www.omg.org/techprocess/ab/SpecificationMetadata/>
PREFIX  fibo-der-com-opt: <https://spec.edmcouncil.org/fibo/ontology/DER/CommoditiesDerivatives/CommodityOptions/>
PREFIX  fibo-fnd-plcx-re: <https://spec.edmcouncil.org/fibo/ontology/FND/PlacesExt/RealEstate/>
PREFIX  fibo-sec-sec-bsk: <https://spec.edmcouncil.org/fibo/ontology/SEC/Securities/Baskets/>
PREFIX  fibo-loan-tem-ltv: <https://spec.edmcouncil.org/fibo/ontology/LOAN/LoansTemporal/LoansLTV/>
PREFIX  sp:   <http://spinrdf.org/sp#>
PREFIX  fibo-sec-eq-sha: <https://spec.edmcouncil.org/fibo/ontology/SEC/Equities/ShareTerms/>
PREFIX  email: <http://topbraid.org/email#>
PREFIX  fibo-be-fctx-sta: <https://spec.edmcouncil.org/fibo/ontology/BE/FunctionalEntitiesExt/StateEntities/>
PREFIX  fibo-be-fctx-brn: <https://spec.edmcouncil.org/fibo/ontology/BE/FunctionalEntitiesExt/Branding/>
PREFIX  fibo-fnd-soc-asp: <https://spec.edmcouncil.org/fibo/ontology/FND/SocialConstructs/ConstructAspects/>
PREFIX  fibo-be-oac-cpty: <https://spec.edmcouncil.org/fibo/ontology/BE/OwnershipAndControl/ControlParties/>
PREFIX  owlnames: <http://spec.edmcouncil.org/owlnames#>
PREFIX  fibo-bp-iss-doc: <https://spec.edmcouncil.org/fibo/ontology/BP/SecuritiesIssuance/IssuanceDocuments/>
PREFIX  fibo-ind-ei-pub: <https://spec.edmcouncil.org/fibo/ontology/IND/EconomicIndicators/EconomicIndicatorPublishers/>
PREFIX  fibo-fnd-plc-fac: <https://spec.edmcouncil.org/fibo/ontology/FND/Places/Facilities/>
PREFIX  fibo-fnd-arrx-agt: <https://spec.edmcouncil.org/fibo/ontology/FND/Arrangements/EnablingAgents/>
PREFIX  fibo-bp-prc-fcp: <https://spec.edmcouncil.org/fibo/ontology/BP/Process/FinancialContextAndProcess/>
PREFIX  fibo-der-com-sp: <https://spec.edmcouncil.org/fibo/ontology/DER/CommoditiesDerivatives/CommoditySpots/>
PREFIX  fibo-ind-ind-ind: <https://spec.edmcouncil.org/fibo/ontology/IND/Indicators/Indicators/>
PREFIX  fibo-loan-typ-mtg: <https://spec.edmcouncil.org/fibo/ontology/LOAN/LoanTypes/MortgageLoans/>
PREFIX  teamwork: <http://topbraid.org/teamwork#>
PREFIX  fibo-sec-eq-iss: <https://spec.edmcouncil.org/fibo/ontology/SEC/Equities/EquityIssuanceTerms/>
PREFIX  fibo-be-etx-fnd: <https://spec.edmcouncil.org/fibo/ontology/BE/EntitiesTypesExt/LegalFoundations/>
PREFIX  fibo-der-com-sw: <https://spec.edmcouncil.org/fibo/ontology/DER/CommoditiesDerivatives/CommoditySwaps/>
PREFIX  fibo-fnd-agrx-agrx: <https://spec.edmcouncil.org/fibo/ontology/FND/AgreementsExt/AgreementsInverses/>
PREFIX  fibo-fnd-inf-idn: <https://spec.edmcouncil.org/fibo/ontology/FND/Information/Identification/>
PREFIX  swa:  <http://topbraid.org/swa#>
PREFIX  fibo-loan-loan-reg: <https://spec.edmcouncil.org/fibo/ontology/LOAN/Loans/LoansRegulatory/>
PREFIX  skostemplate: <http://topbraid.org/spin/skostemplates#>
PREFIX  fibo-sec-dbt-bo-iss: <https://spec.edmcouncil.org/fibo/ontology/SEC/Debt/Bonds/BondsIssuerVariants/>
PREFIX  fibo-sec-secx-pf: <https://spec.edmcouncil.org/fibo/ontology/SEC/SecuritiesExt/Portfolios/>
PREFIX  fibo-fnd-arrx-rbe: <https://spec.edmcouncil.org/fibo/ontology/FND/Arrangements/RelativeBusinessEntities/>
PREFIX  fibo-sec-dbt-ab-cmo: <https://spec.edmcouncil.org/fibo/ontology/SEC/Debt/AssetBacked/CMOs/>
PREFIX  fibo-fnd-math-qty: <https://spec.edmcouncil.org/fibo/ontology/FND/Math/Quantities/>
PREFIX  fibo-fnd-plc-cty: <https://spec.edmcouncil.org/fibo/ontology/FND/Places/Countries/>
PREFIX  fibo-md-temx-tem: <https://spec.edmcouncil.org/fibo/ontology/MD/TemporalCore/TemporalConcepts/>
PREFIX  fibo-sec-sec-ast: <https://spec.edmcouncil.org/fibo/ontology/SEC/Securities/SecurityAssets/>
PREFIX  ui:   <http://uispin.org/ui#>
PREFIX  fibo-fnd-pty-rl: <https://spec.edmcouncil.org/fibo/ontology/FND/Parties/Roles/>
PREFIX  fibo-sec-dbt-bo-cfv: <https://spec.edmcouncil.org/fibo/ontology/SEC/Debt/Bonds/BondsCashflowVariants/>
PREFIX  fibo-sec-dbt-bo-cft: <https://spec.edmcouncil.org/fibo/ontology/SEC/Debt/Bonds/BondsCashflowTerms/>
PREFIX  fibo-fnd-arrxx-col: <https://spec.edmcouncil.org/fibo/ontology/FND/ArrangementsExt/Collections/>
PREFIX  fibo-ind-mkt-bas: <https://spec.edmcouncil.org/fibo/ontology/IND/MarketIndices/BasketIndices/>
PREFIX  fibo-sec-dbt-ab-clo: <https://spec.edmcouncil.org/fibo/ontology/SEC/Debt/AssetBacked/CLOs/>
PREFIX  fibo-bp-iss-dbti: <https://spec.edmcouncil.org/fibo/ontology/BP/SecuritiesIssuance/DebtIssuance/>
PREFIX  discoverytool: <http://www.epa.gov/discoverytool#>
PREFIX  fibo-be-ge-ukj: <https://spec.edmcouncil.org/fibo/ontology/BE/GovernmentEntities/EuropeanJurisdiction/UKGovernmentEntitiesAndJurisdictions/>
PREFIX  fibo-fnd-arrx-set: <https://spec.edmcouncil.org/fibo/ontology/FND/Arrangements/SetMembership/>
PREFIX  jfn:  <java:com.hp.hpl.jena.sparql.function.library.>
PREFIX  fibo-fnd-arr-doc: <https://spec.edmcouncil.org/fibo/ontology/FND/Arrangements/Documents/>
PREFIX  fibo-fbc-dae-gty: <https://spec.edmcouncil.org/fibo/ontology/FBC/DebtAndEquities/Guaranty/>
PREFIX  fibo-fnd-accx-bal: <https://spec.edmcouncil.org/fibo/ontology/FND/AccountingExt/BalanceSheetBalances/>
PREFIX  fibo-ind-ei-ei: <https://spec.edmcouncil.org/fibo/ontology/IND/EconomicIndicators/EconomicIndicators/>
PREFIX  fibo-der-misc-cfd: <https://spec.edmcouncil.org/fibo/ontology/DER/OTCMiscContracts/ContractsForDifference/>
PREFIX  fibo-md-eqx-pri: <https://spec.edmcouncil.org/fibo/ontology/MD/EquityTemporal/EquityPricing/>
PREFIX  fibo-fnd-arr-cls: <https://spec.edmcouncil.org/fibo/ontology/FND/Arrangements/ClassificationSchemes/>
PREFIX  fibo-sec-secx-assx: <https://spec.edmcouncil.org/fibo/ontology/SEC/SecuritiesExt/SecurityAssetsExt/>
PREFIX  grddl: <http://www.w3.org/2003/g/data-view#>
PREFIX  fibo-be-fctx-spv: <https://spec.edmcouncil.org/fibo/ontology/BE/FunctionalEntitiesExt/SPVs/>
PREFIX  fibo-fbc-fct-usind: <https://spec.edmcouncil.org/fibo/ontology/FBC/FunctionalEntities/NorthAmericanEntities/USExampleIndividuals/>
PREFIX  fibo-sec-dbt-dbt-iss: <https://spec.edmcouncil.org/fibo/ontology/SEC/Debt/DebtFoundations/DebtIssuanceTerms/>
PREFIX  fibo-sec-dbt-ab-mbs: <https://spec.edmcouncil.org/fibo/ontology/SEC/Debt/AssetBacked/MortgageBackedSecurities/>
PREFIX  fibo-be-oacx-ber: <https://spec.edmcouncil.org/fibo/ontology/BE/OwnershipAndControlExt/BERelations/>
PREFIX  fibo-sec-dbt-dbt-par: <https://spec.edmcouncil.org/fibo/ontology/SEC/Debt/DebtFoundations/ParityVariants/>
PREFIX  raci: <http://topbraid.org/raci#>
PREFIX  fibo-sec-dbt-mm-td: <https://spec.edmcouncil.org/fibo/ontology/SEC/Debt/MoneyMarkets/TermDeposits/>
PREFIX  fibo-civ-fnd-civ: <https://spec.edmcouncil.org/fibo/ontology/CIV/Funds/CIV/>
PREFIX  fibo-sec-secx-sec: <https://spec.edmcouncil.org/fibo/ontology/SEC/SecuritiesExt/SecuritiesExt/>
PREFIX  fibo-der-fx-opt: <https://spec.edmcouncil.org/fibo/ontology/DER/FxDerivatives/FxOptions/>
PREFIX  fibo-md-civx-fun: <https://spec.edmcouncil.org/fibo/ontology/MD/CIVTemporal/FundsTemporal/>
PREFIX  fibo-be-tr-tr: <https://spec.edmcouncil.org/fibo/ontology/BE/Trusts/Trusts/>
PREFIX  fibo-der-com-ctr: <https://spec.edmcouncil.org/fibo/ontology/DER/CommoditiesDerivatives/CommoditiesContracts/>
PREFIX  fibo-fnd-soc-pty: <https://spec.edmcouncil.org/fibo/ontology/FND/SocialConstructs/LegalConstructParties/>
PREFIX  owlrl: <http://topbraid.org/spin/owlrl#>
PREFIX  fibo-sec-dbt-dbt-cft: <https://spec.edmcouncil.org/fibo/ontology/SEC/Debt/DebtFoundations/DebtCashflowTerms/>
PREFIX  sxml: <http://topbraid.org/sxml#>
PREFIX  daml: <http://www.daml.org/2001/03/daml+oil#>
PREFIX  fibo-fnd-agr-agr: <https://spec.edmcouncil.org/fibo/ontology/FND/Agreements/Agreements/>
PREFIX  fibo-loan-tem-ph: <https://spec.edmcouncil.org/fibo/ontology/LOAN/LoansTemporal/LoanPhases/>
PREFIX  fibo-bp-iss-trm: <https://spec.edmcouncil.org/fibo/ontology/BP/SecuritiesIssuance/IssuanceProcessTerms/>
PREFIX  fibo-be-oac-opty: <https://spec.edmcouncil.org/fibo/ontology/BE/OwnershipAndControl/OwnershipParties/>
PREFIX  fibo-der-drc-swp: <https://spec.edmcouncil.org/fibo/ontology/DER/DerivativesContracts/Swaps/>
PREFIX  fibo-sec-secx-clax: <https://spec.edmcouncil.org/fibo/ontology/SEC/SecuritiesExt/SecuritiesClassificationExt/>
PREFIX  fibo-der-etd-std: <https://spec.edmcouncil.org/fibo/ontology/DER/ExchangeTradedDerivatives/DerivativesStandardizedTerms/>
PREFIX  fibo-fnd-accx-cap: <https://spec.edmcouncil.org/fibo/ontology/FND/AccountingExt/InvestmentCapital/>
PREFIX  fibo-fnd-phy-phy: <https://spec.edmcouncil.org/fibo/ontology/FND/Physical/Physical/>
PREFIX  fibo-sec-sec-id: <https://spec.edmcouncil.org/fibo/ontology/SEC/Securities/SecuritiesIdentification/>
PREFIX  fibo-be-fct-pub: <https://spec.edmcouncil.org/fibo/ontology/BE/FunctionalEntities/Publishers/>
PREFIX  fibo-md-temx-trs: <https://spec.edmcouncil.org/fibo/ontology/MD/TemporalCore/SecurityTradingStatuses/>
PREFIX  fibo-sec-secx-plx: <https://spec.edmcouncil.org/fibo/ontology/SEC/SecuritiesExt/PoolsExt/>
PREFIX  swaclasses: <http://topbraid.org/swaclasses#>
PREFIX  fibo-ind-ei-usei: <https://spec.edmcouncil.org/fibo/ontology/IND/EconomicIndicators/NorthAmericanIndicators/USEconomicIndicators/>
PREFIX  fibo-sec-dbt-bo-bo: <https://spec.edmcouncil.org/fibo/ontology/SEC/Debt/Bonds/BondsCommon/>
PREFIX  fibo-fnd-agrx-ill: <https://spec.edmcouncil.org/fibo/ontology/FND/AgreementsExt/ContractsIllustrative/>
PREFIX  fibo-fnd-arr-id: <https://spec.edmcouncil.org/fibo/ontology/FND/Arrangements/IdentifiersAndIndices/>
PREFIX  terms: <http://purl.org/dc/terms/>
PREFIX  fibo-fbc-pas-fpas: <https://spec.edmcouncil.org/fibo/ontology/FBC/ProductsAndServices/FinancialProductsAndServices/>
PREFIX  fibo-fnd-tim-tim: <https://spec.edmcouncil.org/fibo/ontology/FND/Time/Time/>
PREFIX  fibo-fbc-fct-usjrga: <https://spec.edmcouncil.org/fibo/ontology/FBC/FunctionalEntities/NorthAmericanEntities/USRegulatoryAgencies/>
PREFIX  fibo-fnd-inf-sch: <https://spec.edmcouncil.org/fibo/ontology/FND/Information/Schemes/>
PREFIX  fibo-der-derx-dbx: <https://spec.edmcouncil.org/fibo/ontology/DER/DerivativesContractsExt/DerivativesBasicsExt/>
PREFIX  fibo-fbc-dae-crf: <https://spec.edmcouncil.org/fibo/ontology/FBC/DebtAndEquities/CreditFacilities/>
PREFIX  fibo-fbc-fct-eufse: <https://spec.edmcouncil.org/fibo/ontology/FBC/FunctionalEntities/EuropeanEntities/EUFinancialServicesEntities/>
PREFIX  fibo-fnd-inf-inf: <https://spec.edmcouncil.org/fibo/ontology/FND/Information/InfoCore/>
PREFIX  fibo-sec-sec-cls: <https://spec.edmcouncil.org/fibo/ontology/SEC/Securities/SecuritiesClassification/>
PREFIX  fibo-der-cr-cds: <https://spec.edmcouncil.org/fibo/ontology/DER/CreditDerivatives/CreditDefaultSwaps/>
PREFIX  qudtspin: <http://qudt.org/spin/qudtspin#>
PREFIX  fibo-der-derx-facx: <https://spec.edmcouncil.org/fibo/ontology/DER/DerivativesContractsExt/DerivativesClassificationFacets/>
PREFIX  fibo-sec-secx-ctr: <https://spec.edmcouncil.org/fibo/ontology/SEC/SecuritiesExt/InstrumentContracts/>
PREFIX  fibo-fnd-arrx-mer: <https://spec.edmcouncil.org/fibo/ontology/FND/Arrangements/Mereological/>
PREFIX  fibo-fbc-fct-breg: <https://spec.edmcouncil.org/fibo/ontology/FBC/FunctionalEntities/BusinessRegistries/>
PREFIX  fibo-fnd-bus-agc: <https://spec.edmcouncil.org/fibo/ontology/FND/Business/AgentsContexts/>
PREFIX  fibo-ext-snap-par-wt: <https://spec.edmcouncil.org/fibo/ontology/EXT/snap/partial/W3CTime/>
PREFIX  fibo-fnd-txn-cle: <https://spec.edmcouncil.org/fibo/ontology/FND/Transactions/REAClaimsEvents/>
PREFIX  fibo-der-rat-fra: <https://spec.edmcouncil.org/fibo/ontology/DER/RateDerivatives/ForwardRateAgreements/>
PREFIX  fibo-fnd-pas-psch: <https://spec.edmcouncil.org/fibo/ontology/FND/ProductsAndServices/PaymentsAndSchedules/>
PREFIX  sharepoint: <http://topbraid.org/sharepoint#>
PREFIX  fibo-fnd-accx-dbpx: <https://spec.edmcouncil.org/fibo/ontology/FBC/DebtAndEquityExt/DebtPerspectives/>
PREFIX  fibo-fnd-risk-risk: <https://spec.edmcouncil.org/fibo/ontology/FND/Risk/Risk/>
PREFIX  fibo-fnd-aap-ppl: <https://spec.edmcouncil.org/fibo/ontology/FND/AgentsAndPeople/People/>
PREFIX  evnconstraints: <http://topbraid.org/spin/evnconstraints#>
PREFIX  fibo-md-temx-crs: <https://spec.edmcouncil.org/fibo/ontology/MD/TemporalCore/SecurityCreditStatuses/>
PREFIX  fibo-fnd-utl-av: <https://spec.edmcouncil.org/fibo/ontology/FND/Utilities/AnnotationVocabulary/>
PREFIX  fibo-fbc-fct-usfsind: <https://spec.edmcouncil.org/fibo/ontology/FBC/FunctionalEntities/NorthAmericanEntities/USFinancialServicesEntitiesIndividuals/>
PREFIX  fibo-be-sps-sps: <https://spec.edmcouncil.org/fibo/ontology/BE/SoleProprietorships/SoleProprietorships/>
PREFIX  fibo-der-ass-bas: <https://spec.edmcouncil.org/fibo/ontology/DER/AssetDerivatives/AssetBaskets/>
PREFIX  fibo-md-temx-crr: <https://spec.edmcouncil.org/fibo/ontology/MD/TemporalCore/CreditRatings/>
PREFIX  fibo-fnd-utl-alx: <https://spec.edmcouncil.org/fibo/ontology/FND/Utilities/Analytics/>
PREFIX  fibo-der-etd-oxc: <https://spec.edmcouncil.org/fibo/ontology/DER/ExchangeTradedDerivatives/OptionsExchanges/>
PREFIX  fibo-be-fct-fct: <https://spec.edmcouncil.org/fibo/ontology/BE/FunctionalEntities/FunctionalEntities/>
PREFIX  fibo-sec-secx-basx: <https://spec.edmcouncil.org/fibo/ontology/SEC/SecuritiesExt/BasketsExt/>
PREFIX  unnamed: <http://sc.workingontologist.com/unnamed#>
PREFIX  fibo-md-temx-cre: <https://spec.edmcouncil.org/fibo/ontology/MD/TemporalCore/CreditEvents/>
PREFIX  fibo-ind-indx-valx: <https://spec.edmcouncil.org/fibo/ontology/IND/IndicatorsExt/IndicatorsValues/>
PREFIX  swon: <http://uispin.org/swon#>
PREFIX  fibo-fnd-soc-soc: <https://spec.edmcouncil.org/fibo/ontology/FND/SocialConstructs/SocialConstructs/>
PREFIX  fibo-fnd-utl-bt: <https://spec.edmcouncil.org/fibo/ontology/FND/Utilities/BusinessFacingTypes/>
PREFIX  fibo-sec-dbt-ab-cbo: <https://spec.edmcouncil.org/fibo/ontology/SEC/Debt/AssetBacked/CBOs/>
PREFIX  fibo-be-lex-lpx: <https://spec.edmcouncil.org/fibo/ontology/BE/LegalEntitiesExt/LegalPersonsExtended/>
PREFIX  fibo-bp-iss-ipo: <https://spec.edmcouncil.org/fibo/ontology/BP/SecuritiesIssuance/EquitiesIPOIssuance/>
PREFIX  fibo-fnd-txn-ev: <https://spec.edmcouncil.org/fibo/ontology/FND/Transactions/TransactionEvents/>
PREFIX  fibo-sec-secx-risk: <https://spec.edmcouncil.org/fibo/ontology/SEC/SecuritiesExt/SecuritiesRisk/>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  fibo-fnd-inf-msg: <https://spec.edmcouncil.org/fibo/ontology/FND/Information/Messaging/>
PREFIX  fibo-fnd-acc-aeq: <https://spec.edmcouncil.org/fibo/ontology/FND/Accounting/AccountingEquity/>
PREFIX  fibo-sec-secx-con: <https://spec.edmcouncil.org/fibo/ontology/SEC/SecuritiesExt/SecuritiesConversionTerms/>
PREFIX  swaeditor: <http://topbraid.org/swaeditor#>
PREFIX  html: <http://uispin.org/html#>
PREFIX  fibo-fnd-plcx-apc: <https://spec.edmcouncil.org/fibo/ontology/FND/PlacesExt/AddressPropertyChain/>
PREFIX  fibo-sec-dbt-bo-tax: <https://spec.edmcouncil.org/fibo/ontology/SEC/Debt/Bonds/BondsTaxTreatment/>
PREFIX  fibo-sec-secx-neg: <https://spec.edmcouncil.org/fibo/ontology/SEC/SecuritiesExt/NegotiableSecurities/>
PREFIX  fibo-fnd-gaox-dr: <https://spec.edmcouncil.org/fibo/ontology/FND/GoalsAndObjectivesExt/DesiredResults/>
PREFIX  core: <http://www.w3.org/2004/02/skos/core/>
PREFIX  fibo-be-oac-cctl: <https://spec.edmcouncil.org/fibo/ontology/BE/OwnershipAndControl/CorporateControl/>
PREFIX  fibo-be-ge-usj: <https://spec.edmcouncil.org/fibo/ontology/BE/GovernmentEntities/NorthAmericanJurisdiction/USGovernmentEntitiesAndJurisdictions/>
PREFIX  fibo-fnd-oac-own: <https://spec.edmcouncil.org/fibo/ontology/FND/OwnershipAndControl/Ownership/>
PREFIX  fibo-loan-loan-gen: <https://spec.edmcouncil.org/fibo/ontology/LOAN/Loans/LoansGeneral/>
PREFIX  tbi:  <http://tbi.topbraid.org/tbi#>
PREFIX  fibo-fnd-bus-srv: <https://spec.edmcouncil.org/fibo/ontology/FND/Business/Services/>
PREFIX  fibo-sec-dbt-ab-cdo: <https://spec.edmcouncil.org/fibo/ontology/SEC/Debt/AssetBacked/CDOs/>
PREFIX  fibo-sec-dbt-dbtx-gtyx: <https://spec.edmcouncil.org/fibo/ontology/SEC/Debt/DebtFoundationsExt/GuarantyExt/>
PREFIX  letrs: <http://uispin.org/letrs#>
PREFIX  fibo-md-dbtx-aly: <https://spec.edmcouncil.org/fibo/ontology/MD/DebtTemporal/DebtAnalytics/>
PREFIX  fibo-fnd-plc-vrt: <https://spec.edmcouncil.org/fibo/ontology/FND/Places/VirtualPlaces/>
PREFIX  fibo-be-ge-euj: <https://spec.edmcouncil.org/fibo/ontology/BE/GovernmentEntities/EuropeanJurisdiction/EUGovernmentEntitiesAndJurisdictions/>
PREFIX  fibo-fnd-occ-lif: <https://spec.edmcouncil.org/fibo/ontology/FND/Occurrent/Lifecycles/>
PREFIX  fibo-fnd-dt-fd: <https://spec.edmcouncil.org/fibo/ontology/FND/DatesAndTimes/FinancialDates/>
PREFIX  fibo-fnd-inf-iid: <https://spec.edmcouncil.org/fibo/ontology/FND/Information/ISO3166Identifiers/>
PREFIX  fibo-sec-secx-schx: <https://spec.edmcouncil.org/fibo/ontology/SEC/SecuritiesExt/SchedulesExt/>
PREFIX  fibo-fbc-fct-eurga: <https://spec.edmcouncil.org/fibo/ontology/FBC/FunctionalEntities/EuropeanEntities/EURegulatoryAgencies/>
PREFIX  swauml: <http://topbraid.org/swauml#>
PREFIX  backspin: <http://topbraid.org/backspin#>
PREFIX  fibo-be-oacx-ubo: <https://spec.edmcouncil.org/fibo/ontology/BE/OwnershipAndControlExt/UltimateBeneficialOwners/>
PREFIX  fibo-loan-loan-pty: <https://spec.edmcouncil.org/fibo/ontology/LOAN/Loans/LoansParties/>
PREFIX  dct:  <http://purl.org/dc/terms/>
PREFIX  fibo-fnd-agr-ctr: <https://spec.edmcouncil.org/fibo/ontology/FND/Agreements/Contracts/>
PREFIX  fibo-fnd-arr-cd: <https://spec.edmcouncil.org/fibo/ontology/FND/Arrangements/Codes/>
PREFIX  fibo-der-rat-isw: <https://spec.edmcouncil.org/fibo/ontology/DER/RateDerivatives/InflationSwaps/>
PREFIX  fibo-be-fctx-prc: <https://spec.edmcouncil.org/fibo/ontology/BE/FunctionalEntitiesExt/ProcessEntities/>
PREFIX  fibo-fnd-qt-qtu: <https://spec.edmcouncil.org/fibo/ontology/FND/Quantities/QuantitiesAndUnits/>
PREFIX  fibo-loan-typ-stu: <https://spec.edmcouncil.org/fibo/ontology/LOAN/LoanTypes/StudentLoans/>
PREFIX  fibo-sec-dbt-dbt-pn: <https://spec.edmcouncil.org/fibo/ontology/SEC/Debt/DebtFoundations/ParticipationNotes/>
PREFIX  fibo-be-le-lei: <https://spec.edmcouncil.org/fibo/ontology/BE/LegalEntities/LEIEntities/>
PREFIX  fibo-fnd-txn-txnx: <https://spec.edmcouncil.org/fibo/ontology/FND/TransactionsExt/TransactionsExtended/>
PREFIX  fibo-fnd-law-lcap: <https://spec.edmcouncil.org/fibo/ontology/FND/Law/LegalCapacity/>
PREFIX  fibo-der-rat-iro: <https://spec.edmcouncil.org/fibo/ontology/DER/RateDerivatives/IROptions/>
PREFIX  fibo-fnd-law-jur: <https://spec.edmcouncil.org/fibo/ontology/FND/Law/Jurisdiction/>
PREFIX  fibo-sec-dbt-ab-abs: <https://spec.edmcouncil.org/fibo/ontology/SEC/Debt/AssetBacked/AssetBackedSecurities/>
PREFIX  fibo-md-derx-eto: <https://spec.edmcouncil.org/fibo/ontology/MD/DerivativesTemporal/ETOptionsTemporal/>
PREFIX  fibo-fnd-pub-stdi: <https://spec.edmcouncil.org/fibo/ontology/FND/Publications/StandardsIndividuals/>

SELECT  ?result
WHERE
  { OPTIONAL
      { BIND(concat(\"<\", str(?a1), \">\") AS ?l1)
        FILTER isIRI(?a1)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Restriction .
        ?a1 owl:onProperty ?p
        BIND(concat(\"<\", str(?p), \">\") AS ?pl)
        ?a1 ?op ?rc
        BIND(owlnames:rname(?rc) AS ?rcl)
        FILTER ( ?op IN (owl:someValuesFrom, owl:allValuesFrom, owl:hasValue) )
        ?op owlnames:ntemplate ?oplp .
        ?op owlnames:clabel ?oplc
        BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?opl)
        BIND(concat(?pl, \" \", ?opl, \" \", ?rcl) AS ?lx)
        BIND(replace(replace(?opl, \"\\\\{\\\\?1}\", ?pl), \"\\\\{\\\\?2}\", ?rcl) AS ?l2)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Class .
        ?a1 ?oc ?b
        FILTER ( ?oc IN (owl:intersectionOf, owl:unionOf) )
        ?b rdf:first ?car .
        ?b rdf:rest ?cdr .
        ?oc owlnames:ntemplate ?opl
        BIND(concat(owlnames:rname(?cdr), \" \", ?opl, \" \", owlnames:rname(?car)) AS ?l3)
      }
    OPTIONAL
      { FILTER isBlank(?a1)
        ?a1 rdf:first ?car .
        ?a1 rdf:rest ?cdr
        BIND(if(( ?cdr = rdf:nil ), owlnames:rname(?car), concat(owlnames:rname(?car), \", \", owlnames:rname(?cdr))) AS ?l4)
      }
    BIND(coalesce(?l1, ?l2, ?l3, ?l4) AS ?result)
  }
""" ;
      sp:where (
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  rdf:type sp:Bind ;
                  sp:expression [
                      rdf:type sp:concat ;
                      sp:arg1 "<" ;
                      sp:arg2 [
                          rdf:type sp:str ;
                          sp:arg1 [
                              sp:varName "a1"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg3 ">" ;
                    ] ;
                  sp:variable [
                      sp:varName "l1"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Filter ;
                  sp:expression [
                      rdf:type sp:isIRI ;
                      sp:arg1 [
                          sp:varName "a1"^^xsd:string ;
                        ] ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object owl:Restriction ;
                  sp:predicate rdf:type ;
                  sp:subject [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "p"^^xsd:string ;
                    ] ;
                  sp:predicate owl:onProperty ;
                  sp:subject [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Bind ;
                  sp:expression [
                      rdf:type sp:concat ;
                      sp:arg1 "<" ;
                      sp:arg2 [
                          rdf:type sp:str ;
                          sp:arg1 [
                              sp:varName "p"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg3 ">" ;
                    ] ;
                  sp:variable [
                      sp:varName "pl"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "rc"^^xsd:string ;
                    ] ;
                  sp:predicate [
                      sp:varName "op"^^xsd:string ;
                    ] ;
                  sp:subject [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Bind ;
                  sp:expression [
                      rdf:type owlnames:rname ;
                      arg:a1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:variable [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Filter ;
                  sp:expression [
                      rdf:type sp:in ;
                      sp:arg1 [
                          sp:varName "op"^^xsd:string ;
                        ] ;
                      sp:arg2 owl:someValuesFrom ;
                      sp:arg3 owl:allValuesFrom ;
                      sp:arg4 owl:hasValue ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "oplp"^^xsd:string ;
                    ] ;
                  sp:predicate owlnames:ntemplate ;
                  sp:subject [
                      sp:varName "op"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "oplc"^^xsd:string ;
                    ] ;
                  sp:predicate owlnames:clabel ;
                  sp:subject [
                      sp:varName "op"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Bind ;
                  sp:expression [
                      rdf:type sp:if ;
                      sp:arg1 [
                          rdf:type sp:isBlank ;
                          sp:arg1 [
                              sp:varName "rc"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 [
                          sp:varName "oplc"^^xsd:string ;
                        ] ;
                      sp:arg3 [
                          sp:varName "oplp"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:variable [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Bind ;
                  sp:expression [
                      rdf:type sp:concat ;
                      sp:arg1 [
                          sp:varName "pl"^^xsd:string ;
                        ] ;
                      sp:arg2 " " ;
                      sp:arg3 [
                          sp:varName "opl"^^xsd:string ;
                        ] ;
                      sp:arg4 " " ;
                      sp:arg5 [
                          sp:varName "rcl"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:variable [
                      sp:varName "lx"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Bind ;
                  sp:expression [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          rdf:type sp:replace ;
                          sp:arg1 [
                              sp:varName "opl"^^xsd:string ;
                            ] ;
                          sp:arg2 "\\{\\?1}" ;
                          sp:arg3 [
                              sp:varName "pl"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 "\\{\\?2}" ;
                      sp:arg3 [
                          sp:varName "rcl"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:variable [
                      sp:varName "l2"^^xsd:string ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object owl:Class ;
                  sp:predicate rdf:type ;
                  sp:subject [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "b"^^xsd:string ;
                    ] ;
                  sp:predicate [
                      sp:varName "oc"^^xsd:string ;
                    ] ;
                  sp:subject [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Filter ;
                  sp:expression [
                      rdf:type sp:in ;
                      sp:arg1 [
                          sp:varName "oc"^^xsd:string ;
                        ] ;
                      sp:arg2 owl:intersectionOf ;
                      sp:arg3 owl:unionOf ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "car"^^xsd:string ;
                    ] ;
                  sp:predicate rdf:first ;
                  sp:subject [
                      sp:varName "b"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "cdr"^^xsd:string ;
                    ] ;
                  sp:predicate rdf:rest ;
                  sp:subject [
                      sp:varName "b"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:predicate owlnames:ntemplate ;
                  sp:subject [
                      sp:varName "oc"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Bind ;
                  sp:expression [
                      rdf:type sp:concat ;
                      sp:arg1 [
                          rdf:type owlnames:rname ;
                          arg:a1 [
                              sp:varName "cdr"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 " " ;
                      sp:arg3 [
                          sp:varName "opl"^^xsd:string ;
                        ] ;
                      sp:arg4 " " ;
                      sp:arg5 [
                          rdf:type owlnames:rname ;
                          arg:a1 [
                              sp:varName "car"^^xsd:string ;
                            ] ;
                        ] ;
                    ] ;
                  sp:variable [
                      sp:varName "l3"^^xsd:string ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  rdf:type sp:Filter ;
                  sp:expression [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "a1"^^xsd:string ;
                        ] ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "car"^^xsd:string ;
                    ] ;
                  sp:predicate rdf:first ;
                  sp:subject [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "cdr"^^xsd:string ;
                    ] ;
                  sp:predicate rdf:rest ;
                  sp:subject [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ]
                [
                  rdf:type sp:Bind ;
                  sp:expression [
                      rdf:type sp:if ;
                      sp:arg1 [
                          rdf:type sp:eq ;
                          sp:arg1 [
                              sp:varName "cdr"^^xsd:string ;
                            ] ;
                          sp:arg2 () ;
                        ] ;
                      sp:arg2 [
                          rdf:type owlnames:rname ;
                          arg:a1 [
                              sp:varName "car"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg3 [
                          rdf:type sp:concat ;
                          sp:arg1 [
                              rdf:type owlnames:rname ;
                              arg:a1 [
                                  sp:varName "car"^^xsd:string ;
                                ] ;
                            ] ;
                          sp:arg2 ", " ;
                          sp:arg3 [
                              rdf:type owlnames:rname ;
                              arg:a1 [
                                  sp:varName "cdr"^^xsd:string ;
                                ] ;
                            ] ;
                        ] ;
                    ] ;
                  sp:variable [
                      sp:varName "l4"^^xsd:string ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:coalesce ;
                sp:arg1 [
                    sp:varName "l1"^^xsd:string ;
                  ] ;
                sp:arg2 [
                    sp:varName "l2"^^xsd:string ;
                  ] ;
                sp:arg3 [
                    sp:varName "l3"^^xsd:string ;
                  ] ;
                sp:arg4 [
                    sp:varName "l4"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "result"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:constraint [
      rdf:type spl:Argument ;
      spl:predicate arg:a1 ;
      spl:valueType xsd:string ;
    ] ;
  rdfs:comment "# Create human readable labels for restrictions"^^xsd:string ;
  rdfs:subClassOf sm:Functions ;
.
owlnames:synonym
  rdf:type rdf:Property ;
  rdfs:label "synonym"^^xsd:string ;
.
arg:a1
  rdf:type rdf:Property ;
  rdfs:subPropertyOf sp:arg ;
.
owl:Class
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object owlnames:Class ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "x"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:text """PREFIX  metadata: <http://topbraid.org/metadata#>
PREFIX  skostemplate: <http://topbraid.org/spin/skostemplates#>
PREFIX  tagger: <http://evn.topbraidlive.org/tagger#>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  tops: <http://www.topbraid.org/tops#>
PREFIX  swaclasses: <http://topbraid.org/swaclasses#>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  spif: <http://spinrdf.org/spif#>
PREFIX  crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#>
PREFIX  tables: <http://topbraid.org/tables#>
PREFIX  ui:   <http://uispin.org/ui#>
PREFIX  composite: <http://www.topbraid.org/2007/05/composite.owl#>
PREFIX  swaeditor: <http://topbraid.org/swaeditor#>
PREFIX  sm2wsdl: <http://topbraid.org/sparqlmotion/sm2wsdl.sms#>
PREFIX  html: <http://uispin.org/html#>
PREFIX  let:  <http://uispin.org/let#>
PREFIX  shaclify: <http://topbraid.org/shacl/shaclify#>
PREFIX  spinmapl: <http://topbraid.org/spin/spinmapl#>
PREFIX  tasks: <http://topbraid.org/tasks#>
PREFIX  skosspin: <http://topbraid.org/spin/skosspin#>
PREFIX  discoverytool: <http://www.epa.gov/discoverytool#>
PREFIX  tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#>
PREFIX  qudtspin: <http://qudt.org/spin/qudtspin#>
PREFIX  spl:  <http://spinrdf.org/spl#>
PREFIX  jfn:  <java:com.hp.hpl.jena.sparql.function.library.>
PREFIX  spr:  <http://spinrdf.org/spr#>
PREFIX  taxonomies: <http://evn.topbraidlive.org/evnprojects#>
PREFIX  tbi:  <http://tbi.topbraid.org/tbi#>
PREFIX  letrs: <http://uispin.org/letrs#>
PREFIX  connectset-templates: <http://tbi.topbraidlive.org/system/connectset-templates#>
PREFIX  fn:   <http://www.w3.org/2005/xpath-functions#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  sharepoint: <http://topbraid.org/sharepoint#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  smf:  <http://topbraid.org/sparqlmotionfunctions#>
PREFIX  swauml: <http://topbraid.org/swauml#>
PREFIX  evnconstraints: <http://topbraid.org/spin/evnconstraints#>
PREFIX  sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#>
PREFIX  backspin: <http://topbraid.org/backspin#>
PREFIX  tablesmap: <http://topbraid.org/spin/tablesmap#>
PREFIX  search: <http://topbraid.org/search#>
PREFIX  default: <http://uispin.org/default#>
PREFIX  sml:  <http://topbraid.org/sparqlmotionlib#>
PREFIX  crosswalk: <http://topbraid.org/crosswalk#>
PREFIX  dct:  <http://purl.org/dc/terms/>
PREFIX  arg:  <http://spinrdf.org/arg#>
PREFIX  json: <http://topbraid.org/json#>
PREFIX  sm:   <http://topbraid.org/sparqlmotion#>
PREFIX  spinmap: <http://spinrdf.org/spinmap#>
PREFIX  sp:   <http://spinrdf.org/sp#>
PREFIX  email: <http://topbraid.org/email#>
PREFIX  raci: <http://topbraid.org/raci#>
PREFIX  uix:  <http://topbraidlive.org/uix#>
PREFIX  afn:  <http://jena.hpl.hp.com/ARQ/function#>
PREFIX  unnamed: <http://sc.workingontologist.com/unnamed#>
PREFIX  owlnames: <http://spec.edmcouncil.org/owlnames#>
PREFIX  owlrl: <http://topbraid.org/spin/owlrl#>
PREFIX  daml: <http://www.daml.org/2001/03/daml+oil#>
PREFIX  sxml: <http://topbraid.org/sxml#>
PREFIX  teamwork: <http://topbraid.org/teamwork#>
PREFIX  swon: <http://uispin.org/swon#>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  pf:   <http://jena.hpl.hp.com/ARQ/property#>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  evnui: <http://evn.topbraidlive.org/ui#>
PREFIX  spra: <http://spinrdf.org/spra#>
PREFIX  swa:  <http://topbraid.org/swa#>

CONSTRUCT 
  { ?x rdf:type owlnames:Class .}
WHERE
  { ?x rdf:type owl:Class }
"""^^xsd:string ;
      sp:where (
          [
            sp:object owl:Class ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "x"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object owlnames:Property ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "x"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:text """PREFIX  metadata: <http://topbraid.org/metadata#>
PREFIX  skostemplate: <http://topbraid.org/spin/skostemplates#>
PREFIX  tagger: <http://evn.topbraidlive.org/tagger#>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  tops: <http://www.topbraid.org/tops#>
PREFIX  swaclasses: <http://topbraid.org/swaclasses#>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  spif: <http://spinrdf.org/spif#>
PREFIX  crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#>
PREFIX  tables: <http://topbraid.org/tables#>
PREFIX  ui:   <http://uispin.org/ui#>
PREFIX  composite: <http://www.topbraid.org/2007/05/composite.owl#>
PREFIX  swaeditor: <http://topbraid.org/swaeditor#>
PREFIX  sm2wsdl: <http://topbraid.org/sparqlmotion/sm2wsdl.sms#>
PREFIX  html: <http://uispin.org/html#>
PREFIX  let:  <http://uispin.org/let#>
PREFIX  shaclify: <http://topbraid.org/shacl/shaclify#>
PREFIX  spinmapl: <http://topbraid.org/spin/spinmapl#>
PREFIX  tasks: <http://topbraid.org/tasks#>
PREFIX  skosspin: <http://topbraid.org/spin/skosspin#>
PREFIX  discoverytool: <http://www.epa.gov/discoverytool#>
PREFIX  tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#>
PREFIX  qudtspin: <http://qudt.org/spin/qudtspin#>
PREFIX  spl:  <http://spinrdf.org/spl#>
PREFIX  jfn:  <java:com.hp.hpl.jena.sparql.function.library.>
PREFIX  spr:  <http://spinrdf.org/spr#>
PREFIX  taxonomies: <http://evn.topbraidlive.org/evnprojects#>
PREFIX  tbi:  <http://tbi.topbraid.org/tbi#>
PREFIX  letrs: <http://uispin.org/letrs#>
PREFIX  connectset-templates: <http://tbi.topbraidlive.org/system/connectset-templates#>
PREFIX  fn:   <http://www.w3.org/2005/xpath-functions#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  sharepoint: <http://topbraid.org/sharepoint#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  smf:  <http://topbraid.org/sparqlmotionfunctions#>
PREFIX  swauml: <http://topbraid.org/swauml#>
PREFIX  evnconstraints: <http://topbraid.org/spin/evnconstraints#>
PREFIX  sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#>
PREFIX  backspin: <http://topbraid.org/backspin#>
PREFIX  tablesmap: <http://topbraid.org/spin/tablesmap#>
PREFIX  search: <http://topbraid.org/search#>
PREFIX  default: <http://uispin.org/default#>
PREFIX  sml:  <http://topbraid.org/sparqlmotionlib#>
PREFIX  crosswalk: <http://topbraid.org/crosswalk#>
PREFIX  dct:  <http://purl.org/dc/terms/>
PREFIX  arg:  <http://spinrdf.org/arg#>
PREFIX  json: <http://topbraid.org/json#>
PREFIX  sm:   <http://topbraid.org/sparqlmotion#>
PREFIX  spinmap: <http://spinrdf.org/spinmap#>
PREFIX  sp:   <http://spinrdf.org/sp#>
PREFIX  email: <http://topbraid.org/email#>
PREFIX  raci: <http://topbraid.org/raci#>
PREFIX  uix:  <http://topbraidlive.org/uix#>
PREFIX  afn:  <http://jena.hpl.hp.com/ARQ/function#>
PREFIX  unnamed: <http://sc.workingontologist.com/unnamed#>
PREFIX  owlnames: <http://spec.edmcouncil.org/owlnames#>
PREFIX  owlrl: <http://topbraid.org/spin/owlrl#>
PREFIX  daml: <http://www.daml.org/2001/03/daml+oil#>
PREFIX  sxml: <http://topbraid.org/sxml#>
PREFIX  teamwork: <http://topbraid.org/teamwork#>
PREFIX  swon: <http://uispin.org/swon#>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  pf:   <http://jena.hpl.hp.com/ARQ/property#>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  evnui: <http://evn.topbraidlive.org/ui#>
PREFIX  spra: <http://spinrdf.org/spra#>
PREFIX  swa:  <http://topbraid.org/swa#>

CONSTRUCT 
  { ?x rdf:type owlnames:Property .}
WHERE
  { ?x rdf:type ?c
    FILTER ( ?c IN (owl:AnnotationProperty, owl:AsymmetricProperty, owl:DatatypeProperty, owl:DeprecatedProperty, owl:FunctionalProperty, owl:InverseFunctionalProperty, owl:IrreflexiveProperty, owl:ObjectProperty, owl:OntologyProperty, owl:ReflexiveProperty, owl:SymmetricProperty, owl:TransitiveProperty, rdf:Property, rdfs:ContainerMembershipProperty) )
  }
"""^^xsd:string ;
      sp:where (
          [
            sp:object [
                sp:varName "c"^^xsd:string ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "x"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:in ;
                sp:arg1 [
                    sp:varName "c"^^xsd:string ;
                  ] ;
                sp:arg10 owl:OntologyProperty ;
                sp:arg11 owl:ReflexiveProperty ;
                sp:arg12 owl:SymmetricProperty ;
                sp:arg13 owl:TransitiveProperty ;
                sp:arg14 rdf:Property ;
                sp:arg15 rdfs:ContainerMembershipProperty ;
                sp:arg2 owl:AnnotationProperty ;
                sp:arg3 owl:AsymmetricProperty ;
                sp:arg4 owl:DatatypeProperty ;
                sp:arg5 owl:DeprecatedProperty ;
                sp:arg6 owl:FunctionalProperty ;
                sp:arg7 owl:InverseFunctionalProperty ;
                sp:arg8 owl:IrreflexiveProperty ;
                sp:arg9 owl:ObjectProperty ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object _:b8900 ;
            sp:predicate rdfs:label ;
            sp:subject [
                sp:varName "a1"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "f1"^^xsd:string ;
              ] ;
            sp:predicate rdf:first ;
            sp:subject _:b8900 ;
          ]
          [
            sp:object _:b50723 ;
            sp:predicate rdf:rest ;
            sp:subject _:b8900 ;
          ]
          [
            sp:object [
                sp:varName "f2"^^xsd:string ;
              ] ;
            sp:predicate rdf:first ;
            sp:subject _:b50723 ;
          ]
          [
            sp:object _:b92603 ;
            sp:predicate rdf:rest ;
            sp:subject _:b50723 ;
          ]
          [
            sp:object [
                sp:varName "f3"^^xsd:string ;
              ] ;
            sp:predicate rdf:first ;
            sp:subject _:b92603 ;
          ]
          [
            sp:object _:b13728 ;
            sp:predicate rdf:rest ;
            sp:subject _:b92603 ;
          ]
          [
            sp:object [
                sp:varName "f4"^^xsd:string ;
              ] ;
            sp:predicate rdf:first ;
            sp:subject _:b13728 ;
          ]
          [
            sp:object _:b89107 ;
            sp:predicate rdf:rest ;
            sp:subject _:b13728 ;
          ]
          [
            sp:object [
                sp:varName "f5"^^xsd:string ;
              ] ;
            sp:predicate rdf:first ;
            sp:subject _:b89107 ;
          ]
          [
            sp:object () ;
            sp:predicate rdf:rest ;
            sp:subject _:b89107 ;
          ]
        ) ;
      sp:text """PREFIX  metadata: <http://topbraid.org/metadata#>
PREFIX  skostemplate: <http://topbraid.org/spin/skostemplates#>
PREFIX  tagger: <http://evn.topbraidlive.org/tagger#>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  tops: <http://www.topbraid.org/tops#>
PREFIX  swaclasses: <http://topbraid.org/swaclasses#>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  spif: <http://spinrdf.org/spif#>
PREFIX  crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#>
PREFIX  tables: <http://topbraid.org/tables#>
PREFIX  ui:   <http://uispin.org/ui#>
PREFIX  composite: <http://www.topbraid.org/2007/05/composite.owl#>
PREFIX  swaeditor: <http://topbraid.org/swaeditor#>
PREFIX  sm2wsdl: <http://topbraid.org/sparqlmotion/sm2wsdl.sms#>
PREFIX  html: <http://uispin.org/html#>
PREFIX  let:  <http://uispin.org/let#>
PREFIX  shaclify: <http://topbraid.org/shacl/shaclify#>
PREFIX  spinmapl: <http://topbraid.org/spin/spinmapl#>
PREFIX  tasks: <http://topbraid.org/tasks#>
PREFIX  skosspin: <http://topbraid.org/spin/skosspin#>
PREFIX  discoverytool: <http://www.epa.gov/discoverytool#>
PREFIX  tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#>
PREFIX  qudtspin: <http://qudt.org/spin/qudtspin#>
PREFIX  spl:  <http://spinrdf.org/spl#>
PREFIX  jfn:  <java:com.hp.hpl.jena.sparql.function.library.>
PREFIX  spr:  <http://spinrdf.org/spr#>
PREFIX  taxonomies: <http://evn.topbraidlive.org/evnprojects#>
PREFIX  tbi:  <http://tbi.topbraid.org/tbi#>
PREFIX  letrs: <http://uispin.org/letrs#>
PREFIX  connectset-templates: <http://tbi.topbraidlive.org/system/connectset-templates#>
PREFIX  fn:   <http://www.w3.org/2005/xpath-functions#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  sharepoint: <http://topbraid.org/sharepoint#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  smf:  <http://topbraid.org/sparqlmotionfunctions#>
PREFIX  swauml: <http://topbraid.org/swauml#>
PREFIX  evnconstraints: <http://topbraid.org/spin/evnconstraints#>
PREFIX  sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#>
PREFIX  backspin: <http://topbraid.org/backspin#>
PREFIX  tablesmap: <http://topbraid.org/spin/tablesmap#>
PREFIX  search: <http://topbraid.org/search#>
PREFIX  default: <http://uispin.org/default#>
PREFIX  sml:  <http://topbraid.org/sparqlmotionlib#>
PREFIX  crosswalk: <http://topbraid.org/crosswalk#>
PREFIX  dct:  <http://purl.org/dc/terms/>
PREFIX  arg:  <http://spinrdf.org/arg#>
PREFIX  json: <http://topbraid.org/json#>
PREFIX  sm:   <http://topbraid.org/sparqlmotion#>
PREFIX  spinmap: <http://spinrdf.org/spinmap#>
PREFIX  sp:   <http://spinrdf.org/sp#>
PREFIX  email: <http://topbraid.org/email#>
PREFIX  raci: <http://topbraid.org/raci#>
PREFIX  uix:  <http://topbraidlive.org/uix#>
PREFIX  afn:  <http://jena.hpl.hp.com/ARQ/function#>
PREFIX  unnamed: <http://sc.workingontologist.com/unnamed#>
PREFIX  owlnames: <http://spec.edmcouncil.org/owlnames#>
PREFIX  owlrl: <http://topbraid.org/spin/owlrl#>
PREFIX  daml: <http://www.daml.org/2001/03/daml+oil#>
PREFIX  sxml: <http://topbraid.org/sxml#>
PREFIX  teamwork: <http://topbraid.org/teamwork#>
PREFIX  swon: <http://uispin.org/swon#>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  pf:   <http://jena.hpl.hp.com/ARQ/property#>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  evnui: <http://evn.topbraidlive.org/ui#>
PREFIX  spra: <http://spinrdf.org/spra#>
PREFIX  swa:  <http://topbraid.org/swa#>

CONSTRUCT 
  { ?a1 rdfs:label _:c0 .
    _:c0 rdf:first ?f1 .
    _:c0 rdf:rest _:c1 .
    _:c1 rdf:first ?f2 .
    _:c1 rdf:rest _:c2 .
    _:c2 rdf:first ?f3 .
    _:c2 rdf:rest _:c3 .
    _:c3 rdf:first ?f4 .
    _:c3 rdf:rest _:c4 .
    _:c4 rdf:first ?f5 .
    _:c4 rdf:rest rdf:nil .}
WHERE
  { ?a1 rdf:type owl:Restriction
    FILTER isBlank(?a1)
    FILTER NOT EXISTS {?a1 rdfs:label _:b0 }
    ?a1 owl:onProperty ?p .
    ?p rdfs:label ?pl .
    ?a1 ?op ?rc .
    ?rc rdfs:label ?rcl
    FILTER ( ?op IN (owl:someValuesFrom, owl:allValuesFrom, owl:hasValue) )
    ?op owlnames:ntemplate ?oplp .
    ?op owlnames:clabel ?oplc
    BIND(if(EXISTS {?rc rdf:type owl:Restriction }, ?oplc, ?oplp) AS ?s)
    BIND(?pl AS ?fill1)
    BIND(?rcl AS ?fill2)
    BIND(replace(?s, \"[{].*$\", \"\") AS ?f1)
    BIND(replace(replace(?s, \"^[^{]*[{]\", \"\"), \"[}].*$\", \"\") AS ?f2x)
    BIND(replace(replace(?s, \"^[^}]*[}]\", \"\"), \"[{].*$\", \"\") AS ?f3)
    BIND(replace(replace(?s, \"^.*[{]\", \"\"), \"[}].*$\", \"\") AS ?f4x)
    BIND(replace(?s, \"^.*[}]\", \"\") AS ?f5)
    BIND(if(( ?f2x = \"?1\" ), ?fill1, ?fill2) AS ?f2)
    BIND(if(( ?f4x = \"?1\" ), ?fill1, ?fill2) AS ?f4)
  }
""" ;
      sp:where (
          [
            sp:object owl:Restriction ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "a1"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:isBlank ;
                sp:arg1 [
                    sp:varName "a1"^^xsd:string ;
                  ] ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:notExists ;
                sp:elements (
                    [
                      sp:object [
                          sp:varName "?0"^^xsd:string ;
                        ] ;
                      sp:predicate rdfs:label ;
                      sp:subject [
                          sp:varName "a1"^^xsd:string ;
                        ] ;
                    ]
                  ) ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "p"^^xsd:string ;
              ] ;
            sp:predicate owl:onProperty ;
            sp:subject [
                sp:varName "a1"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "pl"^^xsd:string ;
              ] ;
            sp:predicate rdfs:label ;
            sp:subject [
                sp:varName "p"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "rc"^^xsd:string ;
              ] ;
            sp:predicate [
                sp:varName "op"^^xsd:string ;
              ] ;
            sp:subject [
                sp:varName "a1"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "rcl"^^xsd:string ;
              ] ;
            sp:predicate rdfs:label ;
            sp:subject [
                sp:varName "rc"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:in ;
                sp:arg1 [
                    sp:varName "op"^^xsd:string ;
                  ] ;
                sp:arg2 owl:someValuesFrom ;
                sp:arg3 owl:allValuesFrom ;
                sp:arg4 owl:hasValue ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "oplp"^^xsd:string ;
              ] ;
            sp:predicate owlnames:ntemplate ;
            sp:subject [
                sp:varName "op"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "oplc"^^xsd:string ;
              ] ;
            sp:predicate owlnames:clabel ;
            sp:subject [
                sp:varName "op"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:if ;
                sp:arg1 [
                    rdf:type sp:exists ;
                    sp:elements (
                        [
                          sp:object owl:Restriction ;
                          sp:predicate rdf:type ;
                          sp:subject [
                              sp:varName "rc"^^xsd:string ;
                            ] ;
                        ]
                      ) ;
                  ] ;
                sp:arg2 [
                    sp:varName "oplc"^^xsd:string ;
                  ] ;
                sp:arg3 [
                    sp:varName "oplp"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "s"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                sp:varName "pl"^^xsd:string ;
              ] ;
            sp:variable [
                sp:varName "fill1"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                sp:varName "rcl"^^xsd:string ;
              ] ;
            sp:variable [
                sp:varName "fill2"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:replace ;
                sp:arg1 [
                    sp:varName "s"^^xsd:string ;
                  ] ;
                sp:arg2 "[{].*$" ;
                sp:arg3 "" ;
              ] ;
            sp:variable [
                sp:varName "f1"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:replace ;
                sp:arg1 [
                    rdf:type sp:replace ;
                    sp:arg1 [
                        sp:varName "s"^^xsd:string ;
                      ] ;
                    sp:arg2 "^[^{]*[{]" ;
                    sp:arg3 "" ;
                  ] ;
                sp:arg2 "[}].*$" ;
                sp:arg3 "" ;
              ] ;
            sp:variable [
                sp:varName "f2x"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:replace ;
                sp:arg1 [
                    rdf:type sp:replace ;
                    sp:arg1 [
                        sp:varName "s"^^xsd:string ;
                      ] ;
                    sp:arg2 "^[^}]*[}]" ;
                    sp:arg3 "" ;
                  ] ;
                sp:arg2 "[{].*$" ;
                sp:arg3 "" ;
              ] ;
            sp:variable [
                sp:varName "f3"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:replace ;
                sp:arg1 [
                    rdf:type sp:replace ;
                    sp:arg1 [
                        sp:varName "s"^^xsd:string ;
                      ] ;
                    sp:arg2 "^.*[{]" ;
                    sp:arg3 "" ;
                  ] ;
                sp:arg2 "[}].*$" ;
                sp:arg3 "" ;
              ] ;
            sp:variable [
                sp:varName "f4x"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:replace ;
                sp:arg1 [
                    sp:varName "s"^^xsd:string ;
                  ] ;
                sp:arg2 "^.*[}]" ;
                sp:arg3 "" ;
              ] ;
            sp:variable [
                sp:varName "f5"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:if ;
                sp:arg1 [
                    rdf:type sp:eq ;
                    sp:arg1 [
                        sp:varName "f2x"^^xsd:string ;
                      ] ;
                    sp:arg2 "?1" ;
                  ] ;
                sp:arg2 [
                    sp:varName "fill1"^^xsd:string ;
                  ] ;
                sp:arg3 [
                    sp:varName "fill2"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "f2"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:if ;
                sp:arg1 [
                    rdf:type sp:eq ;
                    sp:arg1 [
                        sp:varName "f4x"^^xsd:string ;
                      ] ;
                    sp:arg2 "?1" ;
                  ] ;
                sp:arg2 [
                    sp:varName "fill1"^^xsd:string ;
                  ] ;
                sp:arg3 [
                    sp:varName "fill2"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "f4"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object _:b50924 ;
            sp:predicate rdfs:label ;
            sp:subject [
                sp:varName "a1"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "label2"^^xsd:string ;
              ] ;
            sp:predicate rdf:first ;
            sp:subject _:b50924 ;
          ]
          [
            sp:object _:b76395 ;
            sp:predicate rdf:rest ;
            sp:subject _:b50924 ;
          ]
          [
            sp:object [
                sp:varName "opl"^^xsd:string ;
              ] ;
            sp:predicate rdf:first ;
            sp:subject _:b76395 ;
          ]
          [
            sp:object _:b34611 ;
            sp:predicate rdf:rest ;
            sp:subject _:b76395 ;
          ]
          [
            sp:object [
                sp:varName "label1"^^xsd:string ;
              ] ;
            sp:predicate rdf:first ;
            sp:subject _:b34611 ;
          ]
          [
            sp:object () ;
            sp:predicate rdf:rest ;
            sp:subject _:b34611 ;
          ]
        ) ;
      sp:text """PREFIX  metadata: <http://topbraid.org/metadata#>
PREFIX  skostemplate: <http://topbraid.org/spin/skostemplates#>
PREFIX  tagger: <http://evn.topbraidlive.org/tagger#>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  tops: <http://www.topbraid.org/tops#>
PREFIX  swaclasses: <http://topbraid.org/swaclasses#>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  spif: <http://spinrdf.org/spif#>
PREFIX  crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#>
PREFIX  tables: <http://topbraid.org/tables#>
PREFIX  ui:   <http://uispin.org/ui#>
PREFIX  composite: <http://www.topbraid.org/2007/05/composite.owl#>
PREFIX  swaeditor: <http://topbraid.org/swaeditor#>
PREFIX  sm2wsdl: <http://topbraid.org/sparqlmotion/sm2wsdl.sms#>
PREFIX  html: <http://uispin.org/html#>
PREFIX  let:  <http://uispin.org/let#>
PREFIX  shaclify: <http://topbraid.org/shacl/shaclify#>
PREFIX  spinmapl: <http://topbraid.org/spin/spinmapl#>
PREFIX  tasks: <http://topbraid.org/tasks#>
PREFIX  skosspin: <http://topbraid.org/spin/skosspin#>
PREFIX  discoverytool: <http://www.epa.gov/discoverytool#>
PREFIX  tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#>
PREFIX  qudtspin: <http://qudt.org/spin/qudtspin#>
PREFIX  spl:  <http://spinrdf.org/spl#>
PREFIX  jfn:  <java:com.hp.hpl.jena.sparql.function.library.>
PREFIX  spr:  <http://spinrdf.org/spr#>
PREFIX  taxonomies: <http://evn.topbraidlive.org/evnprojects#>
PREFIX  tbi:  <http://tbi.topbraid.org/tbi#>
PREFIX  letrs: <http://uispin.org/letrs#>
PREFIX  connectset-templates: <http://tbi.topbraidlive.org/system/connectset-templates#>
PREFIX  fn:   <http://www.w3.org/2005/xpath-functions#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  sharepoint: <http://topbraid.org/sharepoint#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  smf:  <http://topbraid.org/sparqlmotionfunctions#>
PREFIX  swauml: <http://topbraid.org/swauml#>
PREFIX  evnconstraints: <http://topbraid.org/spin/evnconstraints#>
PREFIX  sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#>
PREFIX  backspin: <http://topbraid.org/backspin#>
PREFIX  tablesmap: <http://topbraid.org/spin/tablesmap#>
PREFIX  search: <http://topbraid.org/search#>
PREFIX  default: <http://uispin.org/default#>
PREFIX  sml:  <http://topbraid.org/sparqlmotionlib#>
PREFIX  crosswalk: <http://topbraid.org/crosswalk#>
PREFIX  dct:  <http://purl.org/dc/terms/>
PREFIX  arg:  <http://spinrdf.org/arg#>
PREFIX  json: <http://topbraid.org/json#>
PREFIX  sm:   <http://topbraid.org/sparqlmotion#>
PREFIX  spinmap: <http://spinrdf.org/spinmap#>
PREFIX  sp:   <http://spinrdf.org/sp#>
PREFIX  email: <http://topbraid.org/email#>
PREFIX  raci: <http://topbraid.org/raci#>
PREFIX  uix:  <http://topbraidlive.org/uix#>
PREFIX  afn:  <http://jena.hpl.hp.com/ARQ/function#>
PREFIX  unnamed: <http://sc.workingontologist.com/unnamed#>
PREFIX  owlnames: <http://spec.edmcouncil.org/owlnames#>
PREFIX  owlrl: <http://topbraid.org/spin/owlrl#>
PREFIX  daml: <http://www.daml.org/2001/03/daml+oil#>
PREFIX  sxml: <http://topbraid.org/sxml#>
PREFIX  teamwork: <http://topbraid.org/teamwork#>
PREFIX  swon: <http://uispin.org/swon#>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  pf:   <http://jena.hpl.hp.com/ARQ/property#>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  evnui: <http://evn.topbraidlive.org/ui#>
PREFIX  spra: <http://spinrdf.org/spra#>
PREFIX  swa:  <http://topbraid.org/swa#>

CONSTRUCT 
  { ?a1 rdfs:label _:c0 .
    _:c0 rdf:first ?label2 .
    _:c0 rdf:rest _:c1 .
    _:c1 rdf:first ?opl .
    _:c1 rdf:rest _:c2 .
    _:c2 rdf:first ?label1 .
    _:c2 rdf:rest rdf:nil .}
WHERE
  { ?a1 rdf:type owl:Class
    FILTER isBlank(?a1)
    FILTER NOT EXISTS {?a1 rdfs:label _:b0 }
    ?a1 ?oc ?b
    FILTER ( ?oc IN (owl:intersectionOf, owl:unionOf) )
    ?b rdf:first ?car .
    ?b rdf:rest ?cdr .
    ?car rdfs:label ?label1 .
    ?cdr rdfs:label ?label2 .
    ?oc owlnames:ntemplate ?opl
  }
""" ;
      sp:where (
          [
            sp:object owl:Class ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "a1"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:isBlank ;
                sp:arg1 [
                    sp:varName "a1"^^xsd:string ;
                  ] ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:notExists ;
                sp:elements (
                    [
                      sp:object [
                          sp:varName "?0"^^xsd:string ;
                        ] ;
                      sp:predicate rdfs:label ;
                      sp:subject [
                          sp:varName "a1"^^xsd:string ;
                        ] ;
                    ]
                  ) ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "b"^^xsd:string ;
              ] ;
            sp:predicate [
                sp:varName "oc"^^xsd:string ;
              ] ;
            sp:subject [
                sp:varName "a1"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:in ;
                sp:arg1 [
                    sp:varName "oc"^^xsd:string ;
                  ] ;
                sp:arg2 owl:intersectionOf ;
                sp:arg3 owl:unionOf ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "car"^^xsd:string ;
              ] ;
            sp:predicate rdf:first ;
            sp:subject [
                sp:varName "b"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "cdr"^^xsd:string ;
              ] ;
            sp:predicate rdf:rest ;
            sp:subject [
                sp:varName "b"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "label1"^^xsd:string ;
              ] ;
            sp:predicate rdfs:label ;
            sp:subject [
                sp:varName "car"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "label2"^^xsd:string ;
              ] ;
            sp:predicate rdfs:label ;
            sp:subject [
                sp:varName "cdr"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "opl"^^xsd:string ;
              ] ;
            sp:predicate owlnames:ntemplate ;
            sp:subject [
                sp:varName "oc"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object _:b51320 ;
            sp:predicate rdfs:label ;
            sp:subject [
                sp:varName "a1"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "f1"^^xsd:string ;
              ] ;
            sp:predicate rdf:first ;
            sp:subject _:b51320 ;
          ]
          [
            sp:object _:b2542 ;
            sp:predicate rdf:rest ;
            sp:subject _:b51320 ;
          ]
          [
            sp:object [
                sp:varName "f2"^^xsd:string ;
              ] ;
            sp:predicate rdf:first ;
            sp:subject _:b2542 ;
          ]
          [
            sp:object _:b31618 ;
            sp:predicate rdf:rest ;
            sp:subject _:b2542 ;
          ]
          [
            sp:object [
                sp:varName "f3"^^xsd:string ;
              ] ;
            sp:predicate rdf:first ;
            sp:subject _:b31618 ;
          ]
          [
            sp:object _:b6149 ;
            sp:predicate rdf:rest ;
            sp:subject _:b31618 ;
          ]
          [
            sp:object [
                sp:varName "f4"^^xsd:string ;
              ] ;
            sp:predicate rdf:first ;
            sp:subject _:b6149 ;
          ]
          [
            sp:object _:b43764 ;
            sp:predicate rdf:rest ;
            sp:subject _:b6149 ;
          ]
          [
            sp:object [
                sp:varName "f5"^^xsd:string ;
              ] ;
            sp:predicate rdf:first ;
            sp:subject _:b43764 ;
          ]
          [
            sp:object _:b1297 ;
            sp:predicate rdf:rest ;
            sp:subject _:b43764 ;
          ]
          [
            sp:object [
                sp:varName "f6"^^xsd:string ;
              ] ;
            sp:predicate rdf:first ;
            sp:subject _:b1297 ;
          ]
          [
            sp:object _:b77740 ;
            sp:predicate rdf:rest ;
            sp:subject _:b1297 ;
          ]
          [
            sp:object [
                sp:varName "f7"^^xsd:string ;
              ] ;
            sp:predicate rdf:first ;
            sp:subject _:b77740 ;
          ]
          [
            sp:object () ;
            sp:predicate rdf:rest ;
            sp:subject _:b77740 ;
          ]
        ) ;
      sp:text """PREFIX  metadata: <http://topbraid.org/metadata#>
PREFIX  skostemplate: <http://topbraid.org/spin/skostemplates#>
PREFIX  tagger: <http://evn.topbraidlive.org/tagger#>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  tops: <http://www.topbraid.org/tops#>
PREFIX  swaclasses: <http://topbraid.org/swaclasses#>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  spif: <http://spinrdf.org/spif#>
PREFIX  crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#>
PREFIX  tables: <http://topbraid.org/tables#>
PREFIX  ui:   <http://uispin.org/ui#>
PREFIX  composite: <http://www.topbraid.org/2007/05/composite.owl#>
PREFIX  swaeditor: <http://topbraid.org/swaeditor#>
PREFIX  sm2wsdl: <http://topbraid.org/sparqlmotion/sm2wsdl.sms#>
PREFIX  html: <http://uispin.org/html#>
PREFIX  let:  <http://uispin.org/let#>
PREFIX  shaclify: <http://topbraid.org/shacl/shaclify#>
PREFIX  spinmapl: <http://topbraid.org/spin/spinmapl#>
PREFIX  tasks: <http://topbraid.org/tasks#>
PREFIX  skosspin: <http://topbraid.org/spin/skosspin#>
PREFIX  discoverytool: <http://www.epa.gov/discoverytool#>
PREFIX  tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#>
PREFIX  qudtspin: <http://qudt.org/spin/qudtspin#>
PREFIX  spl:  <http://spinrdf.org/spl#>
PREFIX  jfn:  <java:com.hp.hpl.jena.sparql.function.library.>
PREFIX  spr:  <http://spinrdf.org/spr#>
PREFIX  taxonomies: <http://evn.topbraidlive.org/evnprojects#>
PREFIX  tbi:  <http://tbi.topbraid.org/tbi#>
PREFIX  letrs: <http://uispin.org/letrs#>
PREFIX  connectset-templates: <http://tbi.topbraidlive.org/system/connectset-templates#>
PREFIX  fn:   <http://www.w3.org/2005/xpath-functions#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  sharepoint: <http://topbraid.org/sharepoint#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  smf:  <http://topbraid.org/sparqlmotionfunctions#>
PREFIX  swauml: <http://topbraid.org/swauml#>
PREFIX  evnconstraints: <http://topbraid.org/spin/evnconstraints#>
PREFIX  sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#>
PREFIX  backspin: <http://topbraid.org/backspin#>
PREFIX  tablesmap: <http://topbraid.org/spin/tablesmap#>
PREFIX  search: <http://topbraid.org/search#>
PREFIX  default: <http://uispin.org/default#>
PREFIX  sml:  <http://topbraid.org/sparqlmotionlib#>
PREFIX  crosswalk: <http://topbraid.org/crosswalk#>
PREFIX  dct:  <http://purl.org/dc/terms/>
PREFIX  arg:  <http://spinrdf.org/arg#>
PREFIX  json: <http://topbraid.org/json#>
PREFIX  sm:   <http://topbraid.org/sparqlmotion#>
PREFIX  spinmap: <http://spinrdf.org/spinmap#>
PREFIX  sp:   <http://spinrdf.org/sp#>
PREFIX  email: <http://topbraid.org/email#>
PREFIX  raci: <http://topbraid.org/raci#>
PREFIX  uix:  <http://topbraidlive.org/uix#>
PREFIX  afn:  <http://jena.hpl.hp.com/ARQ/function#>
PREFIX  unnamed: <http://sc.workingontologist.com/unnamed#>
PREFIX  owlnames: <http://spec.edmcouncil.org/owlnames#>
PREFIX  owlrl: <http://topbraid.org/spin/owlrl#>
PREFIX  daml: <http://www.daml.org/2001/03/daml+oil#>
PREFIX  sxml: <http://topbraid.org/sxml#>
PREFIX  teamwork: <http://topbraid.org/teamwork#>
PREFIX  swon: <http://uispin.org/swon#>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  pf:   <http://jena.hpl.hp.com/ARQ/property#>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  evnui: <http://evn.topbraidlive.org/ui#>
PREFIX  spra: <http://spinrdf.org/spra#>
PREFIX  swa:  <http://topbraid.org/swa#>

CONSTRUCT 
  { ?a1 rdfs:label _:c0 .
    _:c0 rdf:first ?f1 .
    _:c0 rdf:rest _:c1 .
    _:c1 rdf:first ?f2 .
    _:c1 rdf:rest _:c2 .
    _:c2 rdf:first ?f3 .
    _:c2 rdf:rest _:c3 .
    _:c3 rdf:first ?f4 .
    _:c3 rdf:rest _:c4 .
    _:c4 rdf:first ?f5 .
    _:c4 rdf:rest _:c5 .
    _:c5 rdf:first ?f6 .
    _:c5 rdf:rest _:c6 .
    _:c6 rdf:first ?f7 .
    _:c6 rdf:rest rdf:nil .}
WHERE
  { ?a1 rdf:type owl:Restriction
    FILTER isBlank(?a1)
    FILTER NOT EXISTS {?a1 rdfs:label _:b0 }
    ?a1 owl:onProperty ?p .
    ?p rdfs:label ?pl .
    ?a1 owl:onClass ?rc .
    ?rc rdfs:label ?rcl .
    ?a1 ?cop ?card
    FILTER ( ?cop IN (owl:minCardinality, owl:maxCardinality, owl:cardinality, owl:minQualifiedCardinality, owl:maxQualifiedCardinality, owl:qualifiedCardinality) )
    ?cop owlnames:ntemplate ?oplp .
    ?cop owlnames:clabel ?oplc
    BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?s)
    BIND(?pl AS ?fill1)
    BIND(?card AS ?fill2)
    BIND(?rcl AS ?fill3)
    BIND(replace(?s, \"[{].*$\", \"\") AS ?f1)
    BIND(replace(replace(?s, \"^[^{]*[{]\", \"\"), \"[}].*$\", \"\") AS ?f2x)
    BIND(replace(replace(?s, \"^[^}]*[}]\", \"\"), \"[{].*$\", \"\") AS ?f3)
    BIND(replace(replace(?s, \"^[^{]*[{][^{]*[{]\", \"\"), \"[}].*$\", \"\") AS ?f4x)
    BIND(replace(replace(?s, \"^[^}]*[}][^}]*[}]\", \"\"), \"[{].*$\", \"\") AS ?f5)
    BIND(replace(replace(?s, \"^.*[{]\", \"\"), \"[}].*$\", \"\") AS ?f6x)
    BIND(replace(?s, \"^.*[}]\", \"\") AS ?f7)
    BIND(if(( ?f2x = \"?1\" ), ?fill1, if(( ?f2x = \"?2\" ), ?fill2, ?fill3)) AS ?f2)
    BIND(if(( ?f4x = \"?1\" ), ?fill1, if(( ?f4x = \"?2\" ), ?fill2, ?fill3)) AS ?f4)
    BIND(if(( ?f6x = \"?1\" ), ?fill1, if(( ?f6x = \"?2\" ), ?fill2, ?fill3)) AS ?f6)
  }
""" ;
      sp:where (
          [
            sp:object owl:Restriction ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "a1"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:isBlank ;
                sp:arg1 [
                    sp:varName "a1"^^xsd:string ;
                  ] ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:notExists ;
                sp:elements (
                    [
                      sp:object [
                          sp:varName "?0"^^xsd:string ;
                        ] ;
                      sp:predicate rdfs:label ;
                      sp:subject [
                          sp:varName "a1"^^xsd:string ;
                        ] ;
                    ]
                  ) ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "p"^^xsd:string ;
              ] ;
            sp:predicate owl:onProperty ;
            sp:subject [
                sp:varName "a1"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "pl"^^xsd:string ;
              ] ;
            sp:predicate rdfs:label ;
            sp:subject [
                sp:varName "p"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "rc"^^xsd:string ;
              ] ;
            sp:predicate owl:onClass ;
            sp:subject [
                sp:varName "a1"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "rcl"^^xsd:string ;
              ] ;
            sp:predicate rdfs:label ;
            sp:subject [
                sp:varName "rc"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "card"^^xsd:string ;
              ] ;
            sp:predicate [
                sp:varName "cop"^^xsd:string ;
              ] ;
            sp:subject [
                sp:varName "a1"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:in ;
                sp:arg1 [
                    sp:varName "cop"^^xsd:string ;
                  ] ;
                sp:arg2 owl:minCardinality ;
                sp:arg3 owl:maxCardinality ;
                sp:arg4 owl:cardinality ;
                sp:arg5 owl:minQualifiedCardinality ;
                sp:arg6 owl:maxQualifiedCardinality ;
                sp:arg7 owl:qualifiedCardinality ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "oplp"^^xsd:string ;
              ] ;
            sp:predicate owlnames:ntemplate ;
            sp:subject [
                sp:varName "cop"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "oplc"^^xsd:string ;
              ] ;
            sp:predicate owlnames:clabel ;
            sp:subject [
                sp:varName "cop"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:if ;
                sp:arg1 [
                    rdf:type sp:isBlank ;
                    sp:arg1 [
                        sp:varName "rc"^^xsd:string ;
                      ] ;
                  ] ;
                sp:arg2 [
                    sp:varName "oplc"^^xsd:string ;
                  ] ;
                sp:arg3 [
                    sp:varName "oplp"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "s"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                sp:varName "pl"^^xsd:string ;
              ] ;
            sp:variable [
                sp:varName "fill1"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                sp:varName "card"^^xsd:string ;
              ] ;
            sp:variable [
                sp:varName "fill2"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                sp:varName "rcl"^^xsd:string ;
              ] ;
            sp:variable [
                sp:varName "fill3"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:replace ;
                sp:arg1 [
                    sp:varName "s"^^xsd:string ;
                  ] ;
                sp:arg2 "[{].*$" ;
                sp:arg3 "" ;
              ] ;
            sp:variable [
                sp:varName "f1"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:replace ;
                sp:arg1 [
                    rdf:type sp:replace ;
                    sp:arg1 [
                        sp:varName "s"^^xsd:string ;
                      ] ;
                    sp:arg2 "^[^{]*[{]" ;
                    sp:arg3 "" ;
                  ] ;
                sp:arg2 "[}].*$" ;
                sp:arg3 "" ;
              ] ;
            sp:variable [
                sp:varName "f2x"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:replace ;
                sp:arg1 [
                    rdf:type sp:replace ;
                    sp:arg1 [
                        sp:varName "s"^^xsd:string ;
                      ] ;
                    sp:arg2 "^[^}]*[}]" ;
                    sp:arg3 "" ;
                  ] ;
                sp:arg2 "[{].*$" ;
                sp:arg3 "" ;
              ] ;
            sp:variable [
                sp:varName "f3"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:replace ;
                sp:arg1 [
                    rdf:type sp:replace ;
                    sp:arg1 [
                        sp:varName "s"^^xsd:string ;
                      ] ;
                    sp:arg2 "^[^{]*[{][^{]*[{]" ;
                    sp:arg3 "" ;
                  ] ;
                sp:arg2 "[}].*$" ;
                sp:arg3 "" ;
              ] ;
            sp:variable [
                sp:varName "f4x"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:replace ;
                sp:arg1 [
                    rdf:type sp:replace ;
                    sp:arg1 [
                        sp:varName "s"^^xsd:string ;
                      ] ;
                    sp:arg2 "^[^}]*[}][^}]*[}]" ;
                    sp:arg3 "" ;
                  ] ;
                sp:arg2 "[{].*$" ;
                sp:arg3 "" ;
              ] ;
            sp:variable [
                sp:varName "f5"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:replace ;
                sp:arg1 [
                    rdf:type sp:replace ;
                    sp:arg1 [
                        sp:varName "s"^^xsd:string ;
                      ] ;
                    sp:arg2 "^.*[{]" ;
                    sp:arg3 "" ;
                  ] ;
                sp:arg2 "[}].*$" ;
                sp:arg3 "" ;
              ] ;
            sp:variable [
                sp:varName "f6x"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:replace ;
                sp:arg1 [
                    sp:varName "s"^^xsd:string ;
                  ] ;
                sp:arg2 "^.*[}]" ;
                sp:arg3 "" ;
              ] ;
            sp:variable [
                sp:varName "f7"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:if ;
                sp:arg1 [
                    rdf:type sp:eq ;
                    sp:arg1 [
                        sp:varName "f2x"^^xsd:string ;
                      ] ;
                    sp:arg2 "?1" ;
                  ] ;
                sp:arg2 [
                    sp:varName "fill1"^^xsd:string ;
                  ] ;
                sp:arg3 [
                    rdf:type sp:if ;
                    sp:arg1 [
                        rdf:type sp:eq ;
                        sp:arg1 [
                            sp:varName "f2x"^^xsd:string ;
                          ] ;
                        sp:arg2 "?2" ;
                      ] ;
                    sp:arg2 [
                        sp:varName "fill2"^^xsd:string ;
                      ] ;
                    sp:arg3 [
                        sp:varName "fill3"^^xsd:string ;
                      ] ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "f2"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:if ;
                sp:arg1 [
                    rdf:type sp:eq ;
                    sp:arg1 [
                        sp:varName "f4x"^^xsd:string ;
                      ] ;
                    sp:arg2 "?1" ;
                  ] ;
                sp:arg2 [
                    sp:varName "fill1"^^xsd:string ;
                  ] ;
                sp:arg3 [
                    rdf:type sp:if ;
                    sp:arg1 [
                        rdf:type sp:eq ;
                        sp:arg1 [
                            sp:varName "f4x"^^xsd:string ;
                          ] ;
                        sp:arg2 "?2" ;
                      ] ;
                    sp:arg2 [
                        sp:varName "fill2"^^xsd:string ;
                      ] ;
                    sp:arg3 [
                        sp:varName "fill3"^^xsd:string ;
                      ] ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "f4"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:if ;
                sp:arg1 [
                    rdf:type sp:eq ;
                    sp:arg1 [
                        sp:varName "f6x"^^xsd:string ;
                      ] ;
                    sp:arg2 "?1" ;
                  ] ;
                sp:arg2 [
                    sp:varName "fill1"^^xsd:string ;
                  ] ;
                sp:arg3 [
                    rdf:type sp:if ;
                    sp:arg1 [
                        rdf:type sp:eq ;
                        sp:arg1 [
                            sp:varName "f6x"^^xsd:string ;
                          ] ;
                        sp:arg2 "?2" ;
                      ] ;
                    sp:arg2 [
                        sp:varName "fill2"^^xsd:string ;
                      ] ;
                    sp:arg3 [
                        sp:varName "fill3"^^xsd:string ;
                      ] ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "f6"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object _:b65019 ;
            sp:predicate rdfs:label ;
            sp:subject [
                sp:varName "a1"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "label1"^^xsd:string ;
              ] ;
            sp:predicate rdf:first ;
            sp:subject _:b65019 ;
          ]
          [
            sp:object _:b70715 ;
            sp:predicate rdf:rest ;
            sp:subject _:b65019 ;
          ]
          [
            sp:object "," ;
            sp:predicate rdf:first ;
            sp:subject _:b70715 ;
          ]
          [
            sp:object _:b30398 ;
            sp:predicate rdf:rest ;
            sp:subject _:b70715 ;
          ]
          [
            sp:object [
                sp:varName "label2"^^xsd:string ;
              ] ;
            sp:predicate rdf:first ;
            sp:subject _:b30398 ;
          ]
          [
            sp:object () ;
            sp:predicate rdf:rest ;
            sp:subject _:b30398 ;
          ]
        ) ;
      sp:text """PREFIX  metadata: <http://topbraid.org/metadata#>
PREFIX  skostemplate: <http://topbraid.org/spin/skostemplates#>
PREFIX  tagger: <http://evn.topbraidlive.org/tagger#>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  tops: <http://www.topbraid.org/tops#>
PREFIX  swaclasses: <http://topbraid.org/swaclasses#>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  spif: <http://spinrdf.org/spif#>
PREFIX  crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#>
PREFIX  tables: <http://topbraid.org/tables#>
PREFIX  ui:   <http://uispin.org/ui#>
PREFIX  composite: <http://www.topbraid.org/2007/05/composite.owl#>
PREFIX  swaeditor: <http://topbraid.org/swaeditor#>
PREFIX  sm2wsdl: <http://topbraid.org/sparqlmotion/sm2wsdl.sms#>
PREFIX  html: <http://uispin.org/html#>
PREFIX  let:  <http://uispin.org/let#>
PREFIX  shaclify: <http://topbraid.org/shacl/shaclify#>
PREFIX  spinmapl: <http://topbraid.org/spin/spinmapl#>
PREFIX  tasks: <http://topbraid.org/tasks#>
PREFIX  skosspin: <http://topbraid.org/spin/skosspin#>
PREFIX  discoverytool: <http://www.epa.gov/discoverytool#>
PREFIX  tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#>
PREFIX  qudtspin: <http://qudt.org/spin/qudtspin#>
PREFIX  spl:  <http://spinrdf.org/spl#>
PREFIX  jfn:  <java:com.hp.hpl.jena.sparql.function.library.>
PREFIX  spr:  <http://spinrdf.org/spr#>
PREFIX  taxonomies: <http://evn.topbraidlive.org/evnprojects#>
PREFIX  tbi:  <http://tbi.topbraid.org/tbi#>
PREFIX  letrs: <http://uispin.org/letrs#>
PREFIX  connectset-templates: <http://tbi.topbraidlive.org/system/connectset-templates#>
PREFIX  fn:   <http://www.w3.org/2005/xpath-functions#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  sharepoint: <http://topbraid.org/sharepoint#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  smf:  <http://topbraid.org/sparqlmotionfunctions#>
PREFIX  swauml: <http://topbraid.org/swauml#>
PREFIX  evnconstraints: <http://topbraid.org/spin/evnconstraints#>
PREFIX  sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#>
PREFIX  backspin: <http://topbraid.org/backspin#>
PREFIX  tablesmap: <http://topbraid.org/spin/tablesmap#>
PREFIX  search: <http://topbraid.org/search#>
PREFIX  default: <http://uispin.org/default#>
PREFIX  sml:  <http://topbraid.org/sparqlmotionlib#>
PREFIX  crosswalk: <http://topbraid.org/crosswalk#>
PREFIX  dct:  <http://purl.org/dc/terms/>
PREFIX  arg:  <http://spinrdf.org/arg#>
PREFIX  json: <http://topbraid.org/json#>
PREFIX  sm:   <http://topbraid.org/sparqlmotion#>
PREFIX  spinmap: <http://spinrdf.org/spinmap#>
PREFIX  sp:   <http://spinrdf.org/sp#>
PREFIX  email: <http://topbraid.org/email#>
PREFIX  raci: <http://topbraid.org/raci#>
PREFIX  uix:  <http://topbraidlive.org/uix#>
PREFIX  afn:  <http://jena.hpl.hp.com/ARQ/function#>
PREFIX  unnamed: <http://sc.workingontologist.com/unnamed#>
PREFIX  owlnames: <http://spec.edmcouncil.org/owlnames#>
PREFIX  owlrl: <http://topbraid.org/spin/owlrl#>
PREFIX  daml: <http://www.daml.org/2001/03/daml+oil#>
PREFIX  sxml: <http://topbraid.org/sxml#>
PREFIX  teamwork: <http://topbraid.org/teamwork#>
PREFIX  swon: <http://uispin.org/swon#>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  pf:   <http://jena.hpl.hp.com/ARQ/property#>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  evnui: <http://evn.topbraidlive.org/ui#>
PREFIX  spra: <http://spinrdf.org/spra#>
PREFIX  swa:  <http://topbraid.org/swa#>

CONSTRUCT 
  { ?a1 rdfs:label _:c0 .
    _:c0 rdf:first ?label1 .
    _:c0 rdf:rest _:c1 .
    _:c1 rdf:first \",\" .
    _:c1 rdf:rest _:c2 .
    _:c2 rdf:first ?label2 .
    _:c2 rdf:rest rdf:nil .}
WHERE
  { FILTER isBlank(?a1)
    FILTER NOT EXISTS {?a1 rdfs:label _:b0 }
    ?a1 rdf:first ?car .
    ?a1 rdf:rest ?cdr
    FILTER ( ?cdr != rdf:nil )
    ?car rdfs:label ?label1 .
    ?cdr rdfs:label ?label2
  }
"""^^xsd:string ;
      sp:where (
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:isBlank ;
                sp:arg1 [
                    sp:varName "a1"^^xsd:string ;
                  ] ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:notExists ;
                sp:elements (
                    [
                      sp:object [
                          sp:varName "?0"^^xsd:string ;
                        ] ;
                      sp:predicate rdfs:label ;
                      sp:subject [
                          sp:varName "a1"^^xsd:string ;
                        ] ;
                    ]
                  ) ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "car"^^xsd:string ;
              ] ;
            sp:predicate rdf:first ;
            sp:subject [
                sp:varName "a1"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "cdr"^^xsd:string ;
              ] ;
            sp:predicate rdf:rest ;
            sp:subject [
                sp:varName "a1"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:ne ;
                sp:arg1 [
                    sp:varName "cdr"^^xsd:string ;
                  ] ;
                sp:arg2 () ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "label1"^^xsd:string ;
              ] ;
            sp:predicate rdfs:label ;
            sp:subject [
                sp:varName "car"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "label2"^^xsd:string ;
              ] ;
            sp:predicate rdfs:label ;
            sp:subject [
                sp:varName "cdr"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "def"^^xsd:string ;
              ] ;
            sp:predicate owlnames:mdDefinition ;
            sp:subject [
                sp:varName "c"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object owl:Class ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "c"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:SubQuery ;
            sp:query [
                rdf:type sp:Select ;
                sp:groupBy (
                    [
                      sp:varName "c"^^xsd:string ;
                    ]
                  ) ;
                sp:resultVariables (
                    [
                      sp:varName "c"^^xsd:string ;
                    ]
                    [
                      sp:expression [
                          rdf:type sp:GroupConcat ;
                          sp:expression [
                              sp:varName "k"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:varName "kinds"^^xsd:string ;
                    ]
                  ) ;
                sp:where (
                    [
                      sp:object owl:Class ;
                      sp:predicate rdf:type ;
                      sp:subject [
                          sp:varName "c"^^xsd:string ;
                        ] ;
                    ]
                    [
                      sp:object [
                          sp:varName "k"^^xsd:string ;
                        ] ;
                      sp:predicate owlnames:kinds ;
                      sp:subject [
                          sp:varName "c"^^xsd:string ;
                        ] ;
                    ]
                  ) ;
              ] ;
          ]
          [
            rdf:type sp:SubQuery ;
            sp:query [
                rdf:type sp:Select ;
                sp:groupBy (
                    [
                      sp:varName "c"^^xsd:string ;
                    ]
                  ) ;
                sp:resultVariables (
                    [
                      sp:varName "c"^^xsd:string ;
                    ]
                    [
                      sp:expression [
                          rdf:type sp:GroupConcat ;
                          sp:expression [
                              sp:varName "ld"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:varName "logdef"^^xsd:string ;
                    ]
                  ) ;
                sp:where (
                    [
                      sp:object owl:Class ;
                      sp:predicate rdf:type ;
                      sp:subject [
                          sp:varName "c"^^xsd:string ;
                        ] ;
                    ]
                    [
                      sp:object [
                          sp:varName "ld"^^xsd:string ;
                        ] ;
                      sp:predicate owlnames:logicalDefinition ;
                      sp:subject [
                          sp:varName "c"^^xsd:string ;
                        ] ;
                    ]
                  ) ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:ne ;
                sp:arg1 [
                    sp:varName "kinds"^^xsd:string ;
                  ] ;
                sp:arg2 "" ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:ne ;
                sp:arg1 [
                    sp:varName "logdef"^^xsd:string ;
                  ] ;
                sp:arg2 "" ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:concat ;
                sp:arg1 [
                    sp:varName "kinds"^^xsd:string ;
                  ] ;
                sp:arg2 [
                    sp:varName "logdef"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "def"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "kinds"^^xsd:string ;
              ] ;
            sp:predicate owlnames:kinds ;
            sp:subject [
                sp:varName "c"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:text """PREFIX  metadata: <http://topbraid.org/metadata#>
PREFIX  skostemplate: <http://topbraid.org/spin/skostemplates#>
PREFIX  tagger: <http://evn.topbraidlive.org/tagger#>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  tops: <http://www.topbraid.org/tops#>
PREFIX  swaclasses: <http://topbraid.org/swaclasses#>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  spif: <http://spinrdf.org/spif#>
PREFIX  crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#>
PREFIX  tables: <http://topbraid.org/tables#>
PREFIX  ui:   <http://uispin.org/ui#>
PREFIX  composite: <http://www.topbraid.org/2007/05/composite.owl#>
PREFIX  swaeditor: <http://topbraid.org/swaeditor#>
PREFIX  sm2wsdl: <http://topbraid.org/sparqlmotion/sm2wsdl.sms#>
PREFIX  html: <http://uispin.org/html#>
PREFIX  let:  <http://uispin.org/let#>
PREFIX  shaclify: <http://topbraid.org/shacl/shaclify#>
PREFIX  spinmapl: <http://topbraid.org/spin/spinmapl#>
PREFIX  tasks: <http://topbraid.org/tasks#>
PREFIX  skosspin: <http://topbraid.org/spin/skosspin#>
PREFIX  discoverytool: <http://www.epa.gov/discoverytool#>
PREFIX  tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#>
PREFIX  qudtspin: <http://qudt.org/spin/qudtspin#>
PREFIX  spl:  <http://spinrdf.org/spl#>
PREFIX  jfn:  <java:com.hp.hpl.jena.sparql.function.library.>
PREFIX  spr:  <http://spinrdf.org/spr#>
PREFIX  taxonomies: <http://evn.topbraidlive.org/evnprojects#>
PREFIX  tbi:  <http://tbi.topbraid.org/tbi#>
PREFIX  letrs: <http://uispin.org/letrs#>
PREFIX  connectset-templates: <http://tbi.topbraidlive.org/system/connectset-templates#>
PREFIX  fn:   <http://www.w3.org/2005/xpath-functions#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  sharepoint: <http://topbraid.org/sharepoint#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  smf:  <http://topbraid.org/sparqlmotionfunctions#>
PREFIX  swauml: <http://topbraid.org/swauml#>
PREFIX  evnconstraints: <http://topbraid.org/spin/evnconstraints#>
PREFIX  sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#>
PREFIX  backspin: <http://topbraid.org/backspin#>
PREFIX  tablesmap: <http://topbraid.org/spin/tablesmap#>
PREFIX  search: <http://topbraid.org/search#>
PREFIX  default: <http://uispin.org/default#>
PREFIX  sml:  <http://topbraid.org/sparqlmotionlib#>
PREFIX  crosswalk: <http://topbraid.org/crosswalk#>
PREFIX  dct:  <http://purl.org/dc/terms/>
PREFIX  arg:  <http://spinrdf.org/arg#>
PREFIX  json: <http://topbraid.org/json#>
PREFIX  sm:   <http://topbraid.org/sparqlmotion#>
PREFIX  spinmap: <http://spinrdf.org/spinmap#>
PREFIX  sp:   <http://spinrdf.org/sp#>
PREFIX  email: <http://topbraid.org/email#>
PREFIX  raci: <http://topbraid.org/raci#>
PREFIX  uix:  <http://topbraidlive.org/uix#>
PREFIX  afn:  <http://jena.hpl.hp.com/ARQ/function#>
PREFIX  unnamed: <http://sc.workingontologist.com/unnamed#>
PREFIX  owlnames: <http://spec.edmcouncil.org/owlnames#>
PREFIX  owlrl: <http://topbraid.org/spin/owlrl#>
PREFIX  daml: <http://www.daml.org/2001/03/daml+oil#>
PREFIX  sxml: <http://topbraid.org/sxml#>
PREFIX  teamwork: <http://topbraid.org/teamwork#>
PREFIX  swon: <http://uispin.org/swon#>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  pf:   <http://jena.hpl.hp.com/ARQ/property#>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  evnui: <http://evn.topbraidlive.org/ui#>
PREFIX  spra: <http://spinrdf.org/spra#>
PREFIX  swa:  <http://topbraid.org/swa#>

CONSTRUCT 
  { ?c owlnames:kinds ?kinds .}
WHERE
  { ?c rdf:type owl:Class
    { SELECT  ?c (GROUP_CONCAT(?kind) AS ?kinds)
      WHERE
        { ?c rdf:type owl:Class .
          ?c rdfs:subClassOf ?parent
          FILTER isIRI(?parent)
          LET (?k := owlnames:rlabel(?parent))
          BIND(concat(\"<kind>\", ?k, \"</kind>\") AS ?kind)
        }
      GROUP BY ?c
    }
  }
"""^^xsd:string ;
      sp:where (
          [
            sp:object owl:Class ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "c"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:SubQuery ;
            sp:query [
                rdf:type sp:Select ;
                sp:groupBy (
                    [
                      sp:varName "c"^^xsd:string ;
                    ]
                  ) ;
                sp:resultVariables (
                    [
                      sp:varName "c"^^xsd:string ;
                    ]
                    [
                      sp:expression [
                          rdf:type sp:GroupConcat ;
                          sp:expression [
                              sp:varName "kind"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:varName "kinds"^^xsd:string ;
                    ]
                  ) ;
                sp:where (
                    [
                      sp:object owl:Class ;
                      sp:predicate rdf:type ;
                      sp:subject [
                          sp:varName "c"^^xsd:string ;
                        ] ;
                    ]
                    [
                      sp:object [
                          sp:varName "parent"^^xsd:string ;
                        ] ;
                      sp:predicate rdfs:subClassOf ;
                      sp:subject [
                          sp:varName "c"^^xsd:string ;
                        ] ;
                    ]
                    [
                      rdf:type sp:Filter ;
                      sp:expression [
                          rdf:type sp:isIRI ;
                          sp:arg1 [
                              sp:varName "parent"^^xsd:string ;
                            ] ;
                        ] ;
                    ]
                    [
                      rdf:type sp:Bind ;
                      sp:expression [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "parent"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:variable [
                          sp:varName "k"^^xsd:string ;
                        ] ;
                    ]
                    [
                      rdf:type sp:Bind ;
                      sp:expression [
                          rdf:type sp:concat ;
                          sp:arg1 "<kind>" ;
                          sp:arg2 [
                              sp:varName "k"^^xsd:string ;
                            ] ;
                          sp:arg3 "</kind>" ;
                        ] ;
                      sp:variable [
                          sp:varName "kind"^^xsd:string ;
                        ] ;
                    ]
                  ) ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "l"^^xsd:string ;
              ] ;
            sp:predicate rdfs:label ;
            sp:subject [
                sp:varName "o"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:text """PREFIX  metadata: <http://topbraid.org/metadata#>
PREFIX  skostemplate: <http://topbraid.org/spin/skostemplates#>
PREFIX  tagger: <http://evn.topbraidlive.org/tagger#>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  tops: <http://www.topbraid.org/tops#>
PREFIX  swaclasses: <http://topbraid.org/swaclasses#>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  spif: <http://spinrdf.org/spif#>
PREFIX  crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#>
PREFIX  tables: <http://topbraid.org/tables#>
PREFIX  ui:   <http://uispin.org/ui#>
PREFIX  composite: <http://www.topbraid.org/2007/05/composite.owl#>
PREFIX  swaeditor: <http://topbraid.org/swaeditor#>
PREFIX  sm2wsdl: <http://topbraid.org/sparqlmotion/sm2wsdl.sms#>
PREFIX  html: <http://uispin.org/html#>
PREFIX  let:  <http://uispin.org/let#>
PREFIX  shaclify: <http://topbraid.org/shacl/shaclify#>
PREFIX  spinmapl: <http://topbraid.org/spin/spinmapl#>
PREFIX  tasks: <http://topbraid.org/tasks#>
PREFIX  skosspin: <http://topbraid.org/spin/skosspin#>
PREFIX  discoverytool: <http://www.epa.gov/discoverytool#>
PREFIX  tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#>
PREFIX  qudtspin: <http://qudt.org/spin/qudtspin#>
PREFIX  spl:  <http://spinrdf.org/spl#>
PREFIX  jfn:  <java:com.hp.hpl.jena.sparql.function.library.>
PREFIX  spr:  <http://spinrdf.org/spr#>
PREFIX  taxonomies: <http://evn.topbraidlive.org/evnprojects#>
PREFIX  tbi:  <http://tbi.topbraid.org/tbi#>
PREFIX  letrs: <http://uispin.org/letrs#>
PREFIX  connectset-templates: <http://tbi.topbraidlive.org/system/connectset-templates#>
PREFIX  fn:   <http://www.w3.org/2005/xpath-functions#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  sharepoint: <http://topbraid.org/sharepoint#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  smf:  <http://topbraid.org/sparqlmotionfunctions#>
PREFIX  swauml: <http://topbraid.org/swauml#>
PREFIX  evnconstraints: <http://topbraid.org/spin/evnconstraints#>
PREFIX  sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#>
PREFIX  backspin: <http://topbraid.org/backspin#>
PREFIX  tablesmap: <http://topbraid.org/spin/tablesmap#>
PREFIX  search: <http://topbraid.org/search#>
PREFIX  default: <http://uispin.org/default#>
PREFIX  sml:  <http://topbraid.org/sparqlmotionlib#>
PREFIX  crosswalk: <http://topbraid.org/crosswalk#>
PREFIX  dct:  <http://purl.org/dc/terms/>
PREFIX  arg:  <http://spinrdf.org/arg#>
PREFIX  json: <http://topbraid.org/json#>
PREFIX  sm:   <http://topbraid.org/sparqlmotion#>
PREFIX  spinmap: <http://spinrdf.org/spinmap#>
PREFIX  sp:   <http://spinrdf.org/sp#>
PREFIX  email: <http://topbraid.org/email#>
PREFIX  raci: <http://topbraid.org/raci#>
PREFIX  uix:  <http://topbraidlive.org/uix#>
PREFIX  afn:  <http://jena.hpl.hp.com/ARQ/function#>
PREFIX  unnamed: <http://sc.workingontologist.com/unnamed#>
PREFIX  owlnames: <http://spec.edmcouncil.org/owlnames#>
PREFIX  owlrl: <http://topbraid.org/spin/owlrl#>
PREFIX  daml: <http://www.daml.org/2001/03/daml+oil#>
PREFIX  sxml: <http://topbraid.org/sxml#>
PREFIX  teamwork: <http://topbraid.org/teamwork#>
PREFIX  swon: <http://uispin.org/swon#>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  pf:   <http://jena.hpl.hp.com/ARQ/property#>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  evnui: <http://evn.topbraidlive.org/ui#>
PREFIX  spra: <http://spinrdf.org/spra#>
PREFIX  swa:  <http://topbraid.org/swa#>

CONSTRUCT 
  { ?o rdfs:label ?l .}
WHERE
  { ?s ?p ?o
    FILTER isIRI(?o)
    FILTER regex(str(?o), \"edmcouncil.org\")
    FILTER NOT EXISTS {?o rdfs:label _:b0 }
    BIND(replace(str(?o), \"^.*[#/]\", \"\") AS ?l)
  }
"""^^xsd:string ;
      sp:where (
          [
            sp:object [
                sp:varName "o"^^xsd:string ;
              ] ;
            sp:predicate [
                sp:varName "p"^^xsd:string ;
              ] ;
            sp:subject [
                sp:varName "s"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:isIRI ;
                sp:arg1 [
                    sp:varName "o"^^xsd:string ;
                  ] ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:regex ;
                sp:arg1 [
                    rdf:type sp:str ;
                    sp:arg1 [
                        sp:varName "o"^^xsd:string ;
                      ] ;
                  ] ;
                sp:arg2 "edmcouncil.org" ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:notExists ;
                sp:elements (
                    [
                      sp:object [
                          sp:varName "?0"^^xsd:string ;
                        ] ;
                      sp:predicate rdfs:label ;
                      sp:subject [
                          sp:varName "o"^^xsd:string ;
                        ] ;
                    ]
                  ) ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:replace ;
                sp:arg1 [
                    rdf:type sp:str ;
                    sp:arg1 [
                        sp:varName "o"^^xsd:string ;
                      ] ;
                  ] ;
                sp:arg2 "^.*[#/]" ;
                sp:arg3 "" ;
              ] ;
            sp:variable [
                sp:varName "l"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "Stub to fill in when we don't have enough labels.  Once all of FIBO is here, this shouldn't fire."^^xsd:string ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "label"^^xsd:string ;
              ] ;
            sp:predicate owlnames:condition ;
            sp:subject [
                sp:varName "x"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:text """PREFIX  metadata: <http://topbraid.org/metadata#>
PREFIX  skostemplate: <http://topbraid.org/spin/skostemplates#>
PREFIX  tagger: <http://evn.topbraidlive.org/tagger#>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  tops: <http://www.topbraid.org/tops#>
PREFIX  swaclasses: <http://topbraid.org/swaclasses#>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  spif: <http://spinrdf.org/spif#>
PREFIX  crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#>
PREFIX  tables: <http://topbraid.org/tables#>
PREFIX  ui:   <http://uispin.org/ui#>
PREFIX  composite: <http://www.topbraid.org/2007/05/composite.owl#>
PREFIX  swaeditor: <http://topbraid.org/swaeditor#>
PREFIX  sm2wsdl: <http://topbraid.org/sparqlmotion/sm2wsdl.sms#>
PREFIX  html: <http://uispin.org/html#>
PREFIX  let:  <http://uispin.org/let#>
PREFIX  shaclify: <http://topbraid.org/shacl/shaclify#>
PREFIX  spinmapl: <http://topbraid.org/spin/spinmapl#>
PREFIX  tasks: <http://topbraid.org/tasks#>
PREFIX  skosspin: <http://topbraid.org/spin/skosspin#>
PREFIX  discoverytool: <http://www.epa.gov/discoverytool#>
PREFIX  tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#>
PREFIX  qudtspin: <http://qudt.org/spin/qudtspin#>
PREFIX  spl:  <http://spinrdf.org/spl#>
PREFIX  jfn:  <java:com.hp.hpl.jena.sparql.function.library.>
PREFIX  spr:  <http://spinrdf.org/spr#>
PREFIX  taxonomies: <http://evn.topbraidlive.org/evnprojects#>
PREFIX  tbi:  <http://tbi.topbraid.org/tbi#>
PREFIX  letrs: <http://uispin.org/letrs#>
PREFIX  connectset-templates: <http://tbi.topbraidlive.org/system/connectset-templates#>
PREFIX  fn:   <http://www.w3.org/2005/xpath-functions#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  sharepoint: <http://topbraid.org/sharepoint#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  smf:  <http://topbraid.org/sparqlmotionfunctions#>
PREFIX  swauml: <http://topbraid.org/swauml#>
PREFIX  evnconstraints: <http://topbraid.org/spin/evnconstraints#>
PREFIX  sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#>
PREFIX  backspin: <http://topbraid.org/backspin#>
PREFIX  tablesmap: <http://topbraid.org/spin/tablesmap#>
PREFIX  search: <http://topbraid.org/search#>
PREFIX  default: <http://uispin.org/default#>
PREFIX  sml:  <http://topbraid.org/sparqlmotionlib#>
PREFIX  crosswalk: <http://topbraid.org/crosswalk#>
PREFIX  dct:  <http://purl.org/dc/terms/>
PREFIX  arg:  <http://spinrdf.org/arg#>
PREFIX  json: <http://topbraid.org/json#>
PREFIX  sm:   <http://topbraid.org/sparqlmotion#>
PREFIX  spinmap: <http://spinrdf.org/spinmap#>
PREFIX  sp:   <http://spinrdf.org/sp#>
PREFIX  email: <http://topbraid.org/email#>
PREFIX  raci: <http://topbraid.org/raci#>
PREFIX  uix:  <http://topbraidlive.org/uix#>
PREFIX  afn:  <http://jena.hpl.hp.com/ARQ/function#>
PREFIX  unnamed: <http://sc.workingontologist.com/unnamed#>
PREFIX  owlnames: <http://spec.edmcouncil.org/owlnames#>
PREFIX  owlrl: <http://topbraid.org/spin/owlrl#>
PREFIX  daml: <http://www.daml.org/2001/03/daml+oil#>
PREFIX  sxml: <http://topbraid.org/sxml#>
PREFIX  teamwork: <http://topbraid.org/teamwork#>
PREFIX  swon: <http://uispin.org/swon#>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  pf:   <http://jena.hpl.hp.com/ARQ/property#>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  evnui: <http://evn.topbraidlive.org/ui#>
PREFIX  spra: <http://spinrdf.org/spra#>
PREFIX  swa:  <http://topbraid.org/swa#>

CONSTRUCT 
  { ?x owlnames:condition ?label .}
WHERE
  { ?x rdfs:subClassOf|owl:equivalentClass ?r
    FILTER ( ! isIRI(?r) )
    ?r rdfs:label ?label
  }
"""^^xsd:string ;
      sp:where (
          [
            rdf:type sp:TriplePath ;
            sp:object [
                sp:varName "r"^^xsd:string ;
              ] ;
            sp:path [
                rdf:type sp:AltPath ;
                sp:path1 rdfs:subClassOf ;
                sp:path2 owl:equivalentClass ;
              ] ;
            sp:subject [
                sp:varName "x"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:not ;
                sp:arg1 [
                    rdf:type sp:isIRI ;
                    sp:arg1 [
                        sp:varName "r"^^xsd:string ;
                      ] ;
                  ] ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "label"^^xsd:string ;
              ] ;
            sp:predicate rdfs:label ;
            sp:subject [
                sp:varName "r"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "label1"^^xsd:string ;
              ] ;
            sp:predicate rdfs:label ;
            sp:subject [
                sp:varName "a1"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:text """PREFIX  metadata: <http://topbraid.org/metadata#>
PREFIX  skostemplate: <http://topbraid.org/spin/skostemplates#>
PREFIX  tagger: <http://evn.topbraidlive.org/tagger#>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  tops: <http://www.topbraid.org/tops#>
PREFIX  swaclasses: <http://topbraid.org/swaclasses#>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  spif: <http://spinrdf.org/spif#>
PREFIX  crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#>
PREFIX  tables: <http://topbraid.org/tables#>
PREFIX  ui:   <http://uispin.org/ui#>
PREFIX  composite: <http://www.topbraid.org/2007/05/composite.owl#>
PREFIX  swaeditor: <http://topbraid.org/swaeditor#>
PREFIX  sm2wsdl: <http://topbraid.org/sparqlmotion/sm2wsdl.sms#>
PREFIX  html: <http://uispin.org/html#>
PREFIX  let:  <http://uispin.org/let#>
PREFIX  shaclify: <http://topbraid.org/shacl/shaclify#>
PREFIX  spinmapl: <http://topbraid.org/spin/spinmapl#>
PREFIX  tasks: <http://topbraid.org/tasks#>
PREFIX  skosspin: <http://topbraid.org/spin/skosspin#>
PREFIX  discoverytool: <http://www.epa.gov/discoverytool#>
PREFIX  tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#>
PREFIX  qudtspin: <http://qudt.org/spin/qudtspin#>
PREFIX  spl:  <http://spinrdf.org/spl#>
PREFIX  jfn:  <java:com.hp.hpl.jena.sparql.function.library.>
PREFIX  spr:  <http://spinrdf.org/spr#>
PREFIX  taxonomies: <http://evn.topbraidlive.org/evnprojects#>
PREFIX  tbi:  <http://tbi.topbraid.org/tbi#>
PREFIX  letrs: <http://uispin.org/letrs#>
PREFIX  connectset-templates: <http://tbi.topbraidlive.org/system/connectset-templates#>
PREFIX  fn:   <http://www.w3.org/2005/xpath-functions#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  sharepoint: <http://topbraid.org/sharepoint#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  smf:  <http://topbraid.org/sparqlmotionfunctions#>
PREFIX  swauml: <http://topbraid.org/swauml#>
PREFIX  evnconstraints: <http://topbraid.org/spin/evnconstraints#>
PREFIX  sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#>
PREFIX  backspin: <http://topbraid.org/backspin#>
PREFIX  tablesmap: <http://topbraid.org/spin/tablesmap#>
PREFIX  search: <http://topbraid.org/search#>
PREFIX  default: <http://uispin.org/default#>
PREFIX  sml:  <http://topbraid.org/sparqlmotionlib#>
PREFIX  crosswalk: <http://topbraid.org/crosswalk#>
PREFIX  dct:  <http://purl.org/dc/terms/>
PREFIX  arg:  <http://spinrdf.org/arg#>
PREFIX  json: <http://topbraid.org/json#>
PREFIX  sm:   <http://topbraid.org/sparqlmotion#>
PREFIX  spinmap: <http://spinrdf.org/spinmap#>
PREFIX  sp:   <http://spinrdf.org/sp#>
PREFIX  email: <http://topbraid.org/email#>
PREFIX  raci: <http://topbraid.org/raci#>
PREFIX  uix:  <http://topbraidlive.org/uix#>
PREFIX  afn:  <http://jena.hpl.hp.com/ARQ/function#>
PREFIX  unnamed: <http://sc.workingontologist.com/unnamed#>
PREFIX  owlnames: <http://spec.edmcouncil.org/owlnames#>
PREFIX  owlrl: <http://topbraid.org/spin/owlrl#>
PREFIX  daml: <http://www.daml.org/2001/03/daml+oil#>
PREFIX  sxml: <http://topbraid.org/sxml#>
PREFIX  teamwork: <http://topbraid.org/teamwork#>
PREFIX  swon: <http://uispin.org/swon#>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  pf:   <http://jena.hpl.hp.com/ARQ/property#>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  evnui: <http://evn.topbraidlive.org/ui#>
PREFIX  spra: <http://spinrdf.org/spra#>
PREFIX  swa:  <http://topbraid.org/swa#>

CONSTRUCT 
  { ?a1 rdfs:label ?label1 .}
WHERE
  { FILTER isBlank(?a1)
    FILTER NOT EXISTS {?a1 rdfs:label _:b0 }
    ?a1 rdf:first ?car .
    ?a1 rdf:rest rdf:nil .
    ?car rdfs:label ?label1
  }
"""^^xsd:string ;
      sp:where (
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:isBlank ;
                sp:arg1 [
                    sp:varName "a1"^^xsd:string ;
                  ] ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:notExists ;
                sp:elements (
                    [
                      sp:object [
                          sp:varName "?0"^^xsd:string ;
                        ] ;
                      sp:predicate rdfs:label ;
                      sp:subject [
                          sp:varName "a1"^^xsd:string ;
                        ] ;
                    ]
                  ) ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "car"^^xsd:string ;
              ] ;
            sp:predicate rdf:first ;
            sp:subject [
                sp:varName "a1"^^xsd:string ;
              ] ;
          ]
          [
            sp:object () ;
            sp:predicate rdf:rest ;
            sp:subject [
                sp:varName "a1"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "label1"^^xsd:string ;
              ] ;
            sp:predicate rdfs:label ;
            sp:subject [
                sp:varName "car"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "paragraph"^^xsd:string ;
              ] ;
            sp:predicate owlnames:logicalDefinition ;
            sp:subject [
                sp:varName "x"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object owl:Class ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "x"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:isIRI ;
                sp:arg1 [
                    sp:varName "x"^^xsd:string ;
                  ] ;
              ] ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  rdf:type sp:SubQuery ;
                  sp:query [
                      rdf:type sp:Select ;
                      sp:resultVariables (
                          [
                            sp:varName "x"^^xsd:string ;
                          ]
                          [
                            sp:expression [
                                rdf:type sp:concat ;
                                sp:arg1 [
                                    sp:varName "sllang"^^xsd:string ;
                                  ] ;
                              ] ;
                            sp:varName "para"^^xsd:string ;
                          ]
                        ) ;
                      sp:where (
                          [
                            rdf:type sp:TriplePath ;
                            sp:object [
                                sp:varName "r"^^xsd:string ;
                              ] ;
                            sp:path [
                                rdf:type sp:AltPath ;
                                sp:path1 rdfs:subClassOf ;
                                sp:path2 owl:equivalentClass ;
                              ] ;
                            sp:subject [
                                sp:varName "x"^^xsd:string ;
                              ] ;
                          ]
                          [
                            rdf:type sp:Filter ;
                            sp:expression [
                                rdf:type sp:not ;
                                sp:arg1 [
                                    rdf:type sp:isIRI ;
                                    sp:arg1 [
                                        sp:varName "r"^^xsd:string ;
                                      ] ;
                                  ] ;
                              ] ;
                          ]
                          [
                            rdf:type sp:Bind ;
                            sp:expression [
                                rdf:type sp:concat ;
                                sp:arg1 "<condition>" ;
                                sp:arg2 [
                                    rdf:type owlnames:rlabel ;
                                    arg:a1 [
                                        sp:varName "r"^^xsd:string ;
                                      ] ;
                                  ] ;
                                sp:arg3 "</condition>" ;
                              ] ;
                            sp:variable [
                                sp:varName "sl"^^xsd:string ;
                              ] ;
                          ]
                          [
                            rdf:type sp:Bind ;
                            sp:expression [
                                rdf:type sp:if ;
                                sp:arg1 [
                                    rdf:type sp:eq ;
                                    sp:arg1 [
                                        rdf:type sp:lang ;
                                        sp:arg1 [
                                            sp:varName "sl"^^xsd:string ;
                                          ] ;
                                      ] ;
                                    sp:arg2 "" ;
                                  ] ;
                                sp:arg2 [
                                    rdf:type sp:strlang ;
                                    sp:arg1 [
                                        sp:varName "sl"^^xsd:string ;
                                      ] ;
                                    sp:arg2 "en" ;
                                  ] ;
                                sp:arg3 [
                                    sp:varName "sl"^^xsd:string ;
                                  ] ;
                              ] ;
                            sp:variable [
                                sp:varName "sllang"^^xsd:string ;
                              ] ;
                          ]
                        ) ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:coalesce ;
                sp:arg1 [
                    sp:varName "para"^^xsd:string ;
                  ] ;
                sp:arg2 "</p>" ;
              ] ;
            sp:variable [
                sp:varName "paragraph"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "sllang"^^xsd:string ;
              ] ;
            sp:predicate owlnames:kindOf ;
            sp:subject [
                sp:varName "x"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:text """PREFIX  metadata: <http://topbraid.org/metadata#>
PREFIX  skostemplate: <http://topbraid.org/spin/skostemplates#>
PREFIX  tagger: <http://evn.topbraidlive.org/tagger#>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  tops: <http://www.topbraid.org/tops#>
PREFIX  swaclasses: <http://topbraid.org/swaclasses#>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  spif: <http://spinrdf.org/spif#>
PREFIX  crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#>
PREFIX  tables: <http://topbraid.org/tables#>
PREFIX  ui:   <http://uispin.org/ui#>
PREFIX  composite: <http://www.topbraid.org/2007/05/composite.owl#>
PREFIX  swaeditor: <http://topbraid.org/swaeditor#>
PREFIX  sm2wsdl: <http://topbraid.org/sparqlmotion/sm2wsdl.sms#>
PREFIX  html: <http://uispin.org/html#>
PREFIX  let:  <http://uispin.org/let#>
PREFIX  shaclify: <http://topbraid.org/shacl/shaclify#>
PREFIX  spinmapl: <http://topbraid.org/spin/spinmapl#>
PREFIX  tasks: <http://topbraid.org/tasks#>
PREFIX  skosspin: <http://topbraid.org/spin/skosspin#>
PREFIX  discoverytool: <http://www.epa.gov/discoverytool#>
PREFIX  tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#>
PREFIX  qudtspin: <http://qudt.org/spin/qudtspin#>
PREFIX  spl:  <http://spinrdf.org/spl#>
PREFIX  jfn:  <java:com.hp.hpl.jena.sparql.function.library.>
PREFIX  spr:  <http://spinrdf.org/spr#>
PREFIX  taxonomies: <http://evn.topbraidlive.org/evnprojects#>
PREFIX  tbi:  <http://tbi.topbraid.org/tbi#>
PREFIX  letrs: <http://uispin.org/letrs#>
PREFIX  connectset-templates: <http://tbi.topbraidlive.org/system/connectset-templates#>
PREFIX  fn:   <http://www.w3.org/2005/xpath-functions#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  sharepoint: <http://topbraid.org/sharepoint#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  smf:  <http://topbraid.org/sparqlmotionfunctions#>
PREFIX  swauml: <http://topbraid.org/swauml#>
PREFIX  evnconstraints: <http://topbraid.org/spin/evnconstraints#>
PREFIX  sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#>
PREFIX  backspin: <http://topbraid.org/backspin#>
PREFIX  tablesmap: <http://topbraid.org/spin/tablesmap#>
PREFIX  search: <http://topbraid.org/search#>
PREFIX  default: <http://uispin.org/default#>
PREFIX  sml:  <http://topbraid.org/sparqlmotionlib#>
PREFIX  crosswalk: <http://topbraid.org/crosswalk#>
PREFIX  dct:  <http://purl.org/dc/terms/>
PREFIX  arg:  <http://spinrdf.org/arg#>
PREFIX  json: <http://topbraid.org/json#>
PREFIX  sm:   <http://topbraid.org/sparqlmotion#>
PREFIX  spinmap: <http://spinrdf.org/spinmap#>
PREFIX  sp:   <http://spinrdf.org/sp#>
PREFIX  email: <http://topbraid.org/email#>
PREFIX  raci: <http://topbraid.org/raci#>
PREFIX  uix:  <http://topbraidlive.org/uix#>
PREFIX  afn:  <http://jena.hpl.hp.com/ARQ/function#>
PREFIX  unnamed: <http://sc.workingontologist.com/unnamed#>
PREFIX  owlnames: <http://spec.edmcouncil.org/owlnames#>
PREFIX  owlrl: <http://topbraid.org/spin/owlrl#>
PREFIX  sxml: <http://topbraid.org/sxml#>
PREFIX  daml: <http://www.daml.org/2001/03/daml+oil#>
PREFIX  teamwork: <http://topbraid.org/teamwork#>
PREFIX  swon: <http://uispin.org/swon#>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  pf:   <http://jena.hpl.hp.com/ARQ/property#>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  evnui: <http://evn.topbraidlive.org/ui#>
PREFIX  spra: <http://spinrdf.org/spra#>
PREFIX  swa:  <http://topbraid.org/swa#>

CONSTRUCT 
  { ?x owlnames:kindOf ?sllang .}
WHERE
  { ?x rdfs:subClassOf|owl:equivalentClass ?r
    FILTER isIRI(?r)
    BIND(owlnames:rlabel(?r) AS ?sl)
    BIND(if(( lang(?sl) = \"\" ), strlang(xsd:string(?sl), \"en\"), ?sl) AS ?sllang)
  }
"""^^xsd:string ;
      sp:where (
          [
            rdf:type sp:TriplePath ;
            sp:object [
                sp:varName "r"^^xsd:string ;
              ] ;
            sp:path [
                rdf:type sp:AltPath ;
                sp:path1 rdfs:subClassOf ;
                sp:path2 owl:equivalentClass ;
              ] ;
            sp:subject [
                sp:varName "x"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:isIRI ;
                sp:arg1 [
                    sp:varName "r"^^xsd:string ;
                  ] ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type owlnames:rlabel ;
                arg:a1 [
                    sp:varName "r"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "sl"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:if ;
                sp:arg1 [
                    rdf:type sp:eq ;
                    sp:arg1 [
                        rdf:type sp:lang ;
                        sp:arg1 [
                            sp:varName "sl"^^xsd:string ;
                          ] ;
                      ] ;
                    sp:arg2 "" ;
                  ] ;
                sp:arg2 [
                    rdf:type sp:strlang ;
                    sp:arg1 [
                        rdf:type xsd:string ;
                        sp:arg1 [
                            sp:varName "sl"^^xsd:string ;
                          ] ;
                      ] ;
                    sp:arg2 "en" ;
                  ] ;
                sp:arg3 [
                    sp:varName "sl"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "sllang"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "synlang"^^xsd:string ;
              ] ;
            sp:predicate owlnames:definition ;
            sp:subject [
                sp:varName "x"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:text """PREFIX  metadata: <http://topbraid.org/metadata#>
PREFIX  skostemplate: <http://topbraid.org/spin/skostemplates#>
PREFIX  tagger: <http://evn.topbraidlive.org/tagger#>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  tops: <http://www.topbraid.org/tops#>
PREFIX  swaclasses: <http://topbraid.org/swaclasses#>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  spif: <http://spinrdf.org/spif#>
PREFIX  crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#>
PREFIX  tables: <http://topbraid.org/tables#>
PREFIX  ui:   <http://uispin.org/ui#>
PREFIX  composite: <http://www.topbraid.org/2007/05/composite.owl#>
PREFIX  swaeditor: <http://topbraid.org/swaeditor#>
PREFIX  sm2wsdl: <http://topbraid.org/sparqlmotion/sm2wsdl.sms#>
PREFIX  html: <http://uispin.org/html#>
PREFIX  let:  <http://uispin.org/let#>
PREFIX  shaclify: <http://topbraid.org/shacl/shaclify#>
PREFIX  spinmapl: <http://topbraid.org/spin/spinmapl#>
PREFIX  tasks: <http://topbraid.org/tasks#>
PREFIX  skosspin: <http://topbraid.org/spin/skosspin#>
PREFIX  discoverytool: <http://www.epa.gov/discoverytool#>
PREFIX  tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#>
PREFIX  qudtspin: <http://qudt.org/spin/qudtspin#>
PREFIX  spl:  <http://spinrdf.org/spl#>
PREFIX  jfn:  <java:com.hp.hpl.jena.sparql.function.library.>
PREFIX  spr:  <http://spinrdf.org/spr#>
PREFIX  taxonomies: <http://evn.topbraidlive.org/evnprojects#>
PREFIX  tbi:  <http://tbi.topbraid.org/tbi#>
PREFIX  letrs: <http://uispin.org/letrs#>
PREFIX  connectset-templates: <http://tbi.topbraidlive.org/system/connectset-templates#>
PREFIX  fn:   <http://www.w3.org/2005/xpath-functions#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  sharepoint: <http://topbraid.org/sharepoint#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  smf:  <http://topbraid.org/sparqlmotionfunctions#>
PREFIX  swauml: <http://topbraid.org/swauml#>
PREFIX  evnconstraints: <http://topbraid.org/spin/evnconstraints#>
PREFIX  sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#>
PREFIX  backspin: <http://topbraid.org/backspin#>
PREFIX  tablesmap: <http://topbraid.org/spin/tablesmap#>
PREFIX  search: <http://topbraid.org/search#>
PREFIX  default: <http://uispin.org/default#>
PREFIX  sml:  <http://topbraid.org/sparqlmotionlib#>
PREFIX  crosswalk: <http://topbraid.org/crosswalk#>
PREFIX  dct:  <http://purl.org/dc/terms/>
PREFIX  arg:  <http://spinrdf.org/arg#>
PREFIX  json: <http://topbraid.org/json#>
PREFIX  sm:   <http://topbraid.org/sparqlmotion#>
PREFIX  spinmap: <http://spinrdf.org/spinmap#>
PREFIX  sp:   <http://spinrdf.org/sp#>
PREFIX  email: <http://topbraid.org/email#>
PREFIX  raci: <http://topbraid.org/raci#>
PREFIX  uix:  <http://topbraidlive.org/uix#>
PREFIX  afn:  <http://jena.hpl.hp.com/ARQ/function#>
PREFIX  unnamed: <http://sc.workingontologist.com/unnamed#>
PREFIX  owlnames: <http://spec.edmcouncil.org/owlnames#>
PREFIX  owlrl: <http://topbraid.org/spin/owlrl#>
PREFIX  daml: <http://www.daml.org/2001/03/daml+oil#>
PREFIX  sxml: <http://topbraid.org/sxml#>
PREFIX  teamwork: <http://topbraid.org/teamwork#>
PREFIX  swon: <http://uispin.org/swon#>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  pf:   <http://jena.hpl.hp.com/ARQ/property#>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  evnui: <http://evn.topbraidlive.org/ui#>
PREFIX  spra: <http://spinrdf.org/spra#>
PREFIX  swa:  <http://topbraid.org/swa#>

CONSTRUCT 
  { ?x owlnames:definition ?synlang .}
WHERE
  { ?x skos:definition ?syn
    BIND(if(( lang(?syn) = \"\" ), strlang(xsd:string(?syn), \"en\"), ?syn) AS ?synlang)
  }
"""^^xsd:string ;
      sp:where (
          [
            sp:object [
                sp:varName "syn"^^xsd:string ;
              ] ;
            sp:predicate <http://www.w3.org/2004/02/skos/core#definition> ;
            sp:subject [
                sp:varName "x"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:if ;
                sp:arg1 [
                    rdf:type sp:eq ;
                    sp:arg1 [
                        rdf:type sp:lang ;
                        sp:arg1 [
                            sp:varName "syn"^^xsd:string ;
                          ] ;
                      ] ;
                    sp:arg2 "" ;
                  ] ;
                sp:arg2 [
                    rdf:type sp:strlang ;
                    sp:arg1 [
                        rdf:type xsd:string ;
                        sp:arg1 [
                            sp:varName "syn"^^xsd:string ;
                          ] ;
                      ] ;
                    sp:arg2 "en" ;
                  ] ;
                sp:arg3 [
                    sp:varName "syn"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "synlang"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "synlang"^^xsd:string ;
              ] ;
            sp:predicate owlnames:label ;
            sp:subject [
                sp:varName "x"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:text """PREFIX  metadata: <http://topbraid.org/metadata#>
PREFIX  skostemplate: <http://topbraid.org/spin/skostemplates#>
PREFIX  tagger: <http://evn.topbraidlive.org/tagger#>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  tops: <http://www.topbraid.org/tops#>
PREFIX  swaclasses: <http://topbraid.org/swaclasses#>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  spif: <http://spinrdf.org/spif#>
PREFIX  crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#>
PREFIX  tables: <http://topbraid.org/tables#>
PREFIX  ui:   <http://uispin.org/ui#>
PREFIX  composite: <http://www.topbraid.org/2007/05/composite.owl#>
PREFIX  swaeditor: <http://topbraid.org/swaeditor#>
PREFIX  sm2wsdl: <http://topbraid.org/sparqlmotion/sm2wsdl.sms#>
PREFIX  html: <http://uispin.org/html#>
PREFIX  let:  <http://uispin.org/let#>
PREFIX  shaclify: <http://topbraid.org/shacl/shaclify#>
PREFIX  spinmapl: <http://topbraid.org/spin/spinmapl#>
PREFIX  tasks: <http://topbraid.org/tasks#>
PREFIX  skosspin: <http://topbraid.org/spin/skosspin#>
PREFIX  discoverytool: <http://www.epa.gov/discoverytool#>
PREFIX  tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#>
PREFIX  qudtspin: <http://qudt.org/spin/qudtspin#>
PREFIX  spl:  <http://spinrdf.org/spl#>
PREFIX  jfn:  <java:com.hp.hpl.jena.sparql.function.library.>
PREFIX  spr:  <http://spinrdf.org/spr#>
PREFIX  taxonomies: <http://evn.topbraidlive.org/evnprojects#>
PREFIX  tbi:  <http://tbi.topbraid.org/tbi#>
PREFIX  letrs: <http://uispin.org/letrs#>
PREFIX  connectset-templates: <http://tbi.topbraidlive.org/system/connectset-templates#>
PREFIX  fn:   <http://www.w3.org/2005/xpath-functions#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  sharepoint: <http://topbraid.org/sharepoint#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  smf:  <http://topbraid.org/sparqlmotionfunctions#>
PREFIX  swauml: <http://topbraid.org/swauml#>
PREFIX  evnconstraints: <http://topbraid.org/spin/evnconstraints#>
PREFIX  sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#>
PREFIX  backspin: <http://topbraid.org/backspin#>
PREFIX  tablesmap: <http://topbraid.org/spin/tablesmap#>
PREFIX  search: <http://topbraid.org/search#>
PREFIX  default: <http://uispin.org/default#>
PREFIX  sml:  <http://topbraid.org/sparqlmotionlib#>
PREFIX  crosswalk: <http://topbraid.org/crosswalk#>
PREFIX  dct:  <http://purl.org/dc/terms/>
PREFIX  arg:  <http://spinrdf.org/arg#>
PREFIX  json: <http://topbraid.org/json#>
PREFIX  sm:   <http://topbraid.org/sparqlmotion#>
PREFIX  spinmap: <http://spinrdf.org/spinmap#>
PREFIX  sp:   <http://spinrdf.org/sp#>
PREFIX  email: <http://topbraid.org/email#>
PREFIX  raci: <http://topbraid.org/raci#>
PREFIX  uix:  <http://topbraidlive.org/uix#>
PREFIX  afn:  <http://jena.hpl.hp.com/ARQ/function#>
PREFIX  unnamed: <http://sc.workingontologist.com/unnamed#>
PREFIX  owlnames: <http://spec.edmcouncil.org/owlnames#>
PREFIX  owlrl: <http://topbraid.org/spin/owlrl#>
PREFIX  sxml: <http://topbraid.org/sxml#>
PREFIX  daml: <http://www.daml.org/2001/03/daml+oil#>
PREFIX  teamwork: <http://topbraid.org/teamwork#>
PREFIX  swon: <http://uispin.org/swon#>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  pf:   <http://jena.hpl.hp.com/ARQ/property#>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  evnui: <http://evn.topbraidlive.org/ui#>
PREFIX  spra: <http://spinrdf.org/spra#>
PREFIX  swa:  <http://topbraid.org/swa#>

CONSTRUCT 
  { ?x owlnames:label ?synlang .}
WHERE
  { ?x rdfs:label ?syn
    BIND(if(( lang(?syn) = \"\" ), strlang(xsd:string(?syn), \"en\"), ?syn) AS ?synlang)
  }
"""^^xsd:string ;
      sp:where (
          [
            sp:object [
                sp:varName "syn"^^xsd:string ;
              ] ;
            sp:predicate rdfs:label ;
            sp:subject [
                sp:varName "x"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:if ;
                sp:arg1 [
                    rdf:type sp:eq ;
                    sp:arg1 [
                        rdf:type sp:lang ;
                        sp:arg1 [
                            sp:varName "syn"^^xsd:string ;
                          ] ;
                      ] ;
                    sp:arg2 "" ;
                  ] ;
                sp:arg2 [
                    rdf:type sp:strlang ;
                    sp:arg1 [
                        rdf:type xsd:string ;
                        sp:arg1 [
                            sp:varName "syn"^^xsd:string ;
                          ] ;
                      ] ;
                    sp:arg2 "en" ;
                  ] ;
                sp:arg3 [
                    sp:varName "syn"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "synlang"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "synlang"^^xsd:string ;
              ] ;
            sp:predicate owlnames:synonym ;
            sp:subject [
                sp:varName "x"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:text """PREFIX  metadata: <http://topbraid.org/metadata#>
PREFIX  skostemplate: <http://topbraid.org/spin/skostemplates#>
PREFIX  tagger: <http://evn.topbraidlive.org/tagger#>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  tops: <http://www.topbraid.org/tops#>
PREFIX  swaclasses: <http://topbraid.org/swaclasses#>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  spif: <http://spinrdf.org/spif#>
PREFIX  crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#>
PREFIX  tables: <http://topbraid.org/tables#>
PREFIX  ui:   <http://uispin.org/ui#>
PREFIX  composite: <http://www.topbraid.org/2007/05/composite.owl#>
PREFIX  swaeditor: <http://topbraid.org/swaeditor#>
PREFIX  sm2wsdl: <http://topbraid.org/sparqlmotion/sm2wsdl.sms#>
PREFIX  html: <http://uispin.org/html#>
PREFIX  let:  <http://uispin.org/let#>
PREFIX  shaclify: <http://topbraid.org/shacl/shaclify#>
PREFIX  spinmapl: <http://topbraid.org/spin/spinmapl#>
PREFIX  tasks: <http://topbraid.org/tasks#>
PREFIX  skosspin: <http://topbraid.org/spin/skosspin#>
PREFIX  discoverytool: <http://www.epa.gov/discoverytool#>
PREFIX  tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#>
PREFIX  qudtspin: <http://qudt.org/spin/qudtspin#>
PREFIX  spl:  <http://spinrdf.org/spl#>
PREFIX  jfn:  <java:com.hp.hpl.jena.sparql.function.library.>
PREFIX  spr:  <http://spinrdf.org/spr#>
PREFIX  taxonomies: <http://evn.topbraidlive.org/evnprojects#>
PREFIX  tbi:  <http://tbi.topbraid.org/tbi#>
PREFIX  letrs: <http://uispin.org/letrs#>
PREFIX  connectset-templates: <http://tbi.topbraidlive.org/system/connectset-templates#>
PREFIX  fn:   <http://www.w3.org/2005/xpath-functions#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  sharepoint: <http://topbraid.org/sharepoint#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  smf:  <http://topbraid.org/sparqlmotionfunctions#>
PREFIX  swauml: <http://topbraid.org/swauml#>
PREFIX  evnconstraints: <http://topbraid.org/spin/evnconstraints#>
PREFIX  sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#>
PREFIX  backspin: <http://topbraid.org/backspin#>
PREFIX  tablesmap: <http://topbraid.org/spin/tablesmap#>
PREFIX  search: <http://topbraid.org/search#>
PREFIX  default: <http://uispin.org/default#>
PREFIX  sml:  <http://topbraid.org/sparqlmotionlib#>
PREFIX  crosswalk: <http://topbraid.org/crosswalk#>
PREFIX  dct:  <http://purl.org/dc/terms/>
PREFIX  arg:  <http://spinrdf.org/arg#>
PREFIX  json: <http://topbraid.org/json#>
PREFIX  sm:   <http://topbraid.org/sparqlmotion#>
PREFIX  spinmap: <http://spinrdf.org/spinmap#>
PREFIX  sp:   <http://spinrdf.org/sp#>
PREFIX  email: <http://topbraid.org/email#>
PREFIX  raci: <http://topbraid.org/raci#>
PREFIX  uix:  <http://topbraidlive.org/uix#>
PREFIX  afn:  <http://jena.hpl.hp.com/ARQ/function#>
PREFIX  unnamed: <http://sc.workingontologist.com/unnamed#>
PREFIX  owlnames: <http://spec.edmcouncil.org/owlnames#>
PREFIX  owlrl: <http://topbraid.org/spin/owlrl#>
PREFIX  sxml: <http://topbraid.org/sxml#>
PREFIX  daml: <http://www.daml.org/2001/03/daml+oil#>
PREFIX  teamwork: <http://topbraid.org/teamwork#>
PREFIX  swon: <http://uispin.org/swon#>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  pf:   <http://jena.hpl.hp.com/ARQ/property#>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  evnui: <http://evn.topbraidlive.org/ui#>
PREFIX  spra: <http://spinrdf.org/spra#>
PREFIX  swa:  <http://topbraid.org/swa#>

CONSTRUCT 
  { ?x owlnames:synonym ?synlang .}
WHERE
  { ?x ?p ?syn
    FILTER ( replace(xsd:string(?p), \"^.*/\", \"\") = \"synonym\" )
    BIND(if(( lang(?syn) = \"\" ), strlang(xsd:string(?syn), \"en\"), ?syn) AS ?synlang)
  }
"""^^xsd:string ;
      sp:where (
          [
            sp:object [
                sp:varName "syn"^^xsd:string ;
              ] ;
            sp:predicate [
                sp:varName "p"^^xsd:string ;
              ] ;
            sp:subject [
                sp:varName "x"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:eq ;
                sp:arg1 [
                    rdf:type sp:replace ;
                    sp:arg1 [
                        rdf:type xsd:string ;
                        sp:arg1 [
                            sp:varName "p"^^xsd:string ;
                          ] ;
                      ] ;
                    sp:arg2 "^.*/" ;
                    sp:arg3 "" ;
                  ] ;
                sp:arg2 "synonym" ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:if ;
                sp:arg1 [
                    rdf:type sp:eq ;
                    sp:arg1 [
                        rdf:type sp:lang ;
                        sp:arg1 [
                            sp:varName "syn"^^xsd:string ;
                          ] ;
                      ] ;
                    sp:arg2 "" ;
                  ] ;
                sp:arg2 [
                    rdf:type sp:strlang ;
                    sp:arg1 [
                        rdf:type xsd:string ;
                        sp:arg1 [
                            sp:varName "syn"^^xsd:string ;
                          ] ;
                      ] ;
                    sp:arg2 "en" ;
                  ] ;
                sp:arg3 [
                    sp:varName "syn"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "synlang"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
.
owl:allValuesFrom
  owlnames:clabel "only {?1} values from {?2}"^^xsd:string ;
  owlnames:hasPostBlank "that is {?2}"^^xsd:string ;
  owlnames:hasPostIRI "that is a {?2}"^^xsd:string ;
  owlnames:hasPrefix "only has {?1} "^^xsd:string ;
  owlnames:isPostBlank "things that {?2}"^^xsd:string ;
  owlnames:isPostIRI "of a {?2}"^^xsd:string ;
  owlnames:isPrefix "is only {?1} "^^xsd:string ;
  owlnames:ntemplate "only {?1} values from {?2}"^^xsd:string ;
  owlnames:plainPostBlank "things that {?2}"^^xsd:string ;
  owlnames:plainPostIRI "{?2}"^^xsd:string ;
  owlnames:plainPrefix "only {?1}"^^xsd:string ;
.
owl:cardinality
  owlnames:clabel "{?1} has at most {?2} value(s)"^^xsd:string ;
  owlnames:hasPostBlank "that is {?3}"^^xsd:string ;
  owlnames:hasPostIRI "that is a {?3}"^^xsd:string ;
  owlnames:hasPrefix "has exactly {?2} {?1}"^^xsd:string ;
  owlnames:isPostBlank "exactly {?2} thing(s) that {?3}"^^xsd:string ;
  owlnames:isPostIRI "exactly {?2} {?3}"^^xsd:string ;
  owlnames:ntemplate "{?1} has exactly {?2} value(s) of type {?3}"^^xsd:string ;
  owlnames:ntemplate "{?1} has exactly {?2} value(s) of {?3}"^^xsd:string ;
  owlnames:plainPostBlank "exactly {?2} thing(s) that {?3}"^^xsd:string ;
  owlnames:plainPostIRI "exactly {?2} {?3}"^^xsd:string ;
  owlnames:plainPrefix "{?1} "^^xsd:string ;
.
owl:hasValue
  owlnames:clabel "{?1} has the value {?2}"^^xsd:string ;
  owlnames:ntemplate "{?1} has the value {?2}"^^xsd:string ;
.
owl:intersectionOf
  owlnames:ntemplate " AND "^^xsd:string ;
.
owl:maxCardinality
  owlnames:clabel "{?1} has at most {?2} value(s)"^^xsd:string ;
  owlnames:hasPostBlank "that is {?3}"^^xsd:string ;
  owlnames:hasPostIRI "that is a {?3}"^^xsd:string ;
  owlnames:hasPrefix "has at most {?2} {?1}"^^xsd:string ;
  owlnames:isPostBlank "at most {?2} thing that {?3}"^^xsd:string ;
  owlnames:isPostIRI "at most {?2} {?3}"^^xsd:string ;
  owlnames:isPrefix "is {?1} "^^xsd:string ;
  owlnames:ntemplate "{?1} has at most {?2} value(s) of type {?3}"^^xsd:string ;
  owlnames:plainPostBlank "at most {?2} thing that {?3}"^^xsd:string ;
  owlnames:plainPostIRI "at most {?2} {?3}"^^xsd:string ;
  owlnames:plainPrefix "{?1} "^^xsd:string ;
.
owl:maxQualifiedCardinality
  owlnames:clabel "{?1} has at most {?2} value(s) that {?3}"^^xsd:string ;
  owlnames:hasPostBlank "that is {?3}"^^xsd:string ;
  owlnames:hasPostIRI "that is a {?3}"^^xsd:string ;
  owlnames:hasPrefix "has at most {?2} {?1} "^^xsd:string ;
  owlnames:isPostBlank "at most {?2} thing(s) that {?3}"^^xsd:string ;
  owlnames:isPostIRI "at most {?2} {?3}(s)"^^xsd:string ;
  owlnames:isPrefix "is {?1} "^^xsd:string ;
  owlnames:ntemplate "{?1} has at most {?2} value(s) of type {?3}"^^xsd:string ;
  owlnames:ntemplate "{?1} has most  {?2} value(s) of type {?3}"^^xsd:string ;
  owlnames:plainPostBlank "at most {?2} thing(s) that {?3}"^^xsd:string ;
  owlnames:plainPostIRI "at most {?2} {?3}(s)"^^xsd:string ;
  owlnames:plainPrefix "{?1} "^^xsd:string ;
.
owl:minCardinality
  owlnames:clabel "{?1} has at most {?2} value(s)"^^xsd:string ;
  owlnames:hasPostBlank "that is {?3}"^^xsd:string ;
  owlnames:hasPostIRI "that is a {?3}"^^xsd:string ;
  owlnames:hasPrefix "has at least {?2} {?1}"^^xsd:string ;
  owlnames:isPostBlank "at least {?2} thing that {?3}"^^xsd:string ;
  owlnames:isPostIRI "at least {?2} {?3}"^^xsd:string ;
  owlnames:isPrefix "is {?1} "^^xsd:string ;
  owlnames:ntemplate "{?1} has at most {?2} value(s) of type {?3}"^^xsd:string ;
  owlnames:plainPostBlank "at least {?2} thing that {?3}"^^xsd:string ;
  owlnames:plainPostIRI "at least {?2} {?3}"^^xsd:string ;
  owlnames:plainPrefix "{?1} "^^xsd:string ;
.
owl:minQualifiedCardinality
  owlnames:clabel "{?1} has at least {?2} value(s) that {?3}"^^xsd:string ;
  owlnames:hasPostBlank "that is {?3}"^^xsd:string ;
  owlnames:hasPostIRI "that is a {?3}"^^xsd:string ;
  owlnames:hasPrefix "has at least {?2} {?1}(s)"^^xsd:string ;
  owlnames:isPostBlank "at least {?2} thing(s) that {?3}"^^xsd:string ;
  owlnames:isPostIRI "at least {?2} {?3}(s)"^^xsd:string ;
  owlnames:isPrefix "is {?1} "^^xsd:string ;
  owlnames:ntemplate "{?1} has at least  {?2} value(s) of type {?3}"^^xsd:string ;
  owlnames:ntemplate "{?1} has at least {?2} value(s) of type {?3}"^^xsd:string ;
  owlnames:plainPostBlank "at least {?2} thing(s) that {?3}"^^xsd:string ;
  owlnames:plainPostIRI "at least {?2} {?3}(s)"^^xsd:string ;
  owlnames:plainPrefix "{?1} "^^xsd:string ;
.
owl:qualifiedCardinality
  owlnames:clabel "{?1} has exacty {?2} value(s) that {?3}"^^xsd:string ;
  owlnames:hasPostBlank "that is {?3}"^^xsd:string ;
  owlnames:hasPostIRI "that is a {?3}"^^xsd:string ;
  owlnames:hasPrefix "has exactly {?2} {?1}(s) "^^xsd:string ;
  owlnames:isPostBlank "exactly {?2} thing(s) that {?3}"^^xsd:string ;
  owlnames:isPostIRI "exactly {?2} {?3}"^^xsd:string ;
  owlnames:isPrefix "is {?1} "^^xsd:string ;
  owlnames:ntemplate "{?1} has exactly {?2} value(s) of type {?3}"^^xsd:string ;
  owlnames:ntemplate "{?1} has exacty {?2} value(s) of type {?3}"^^xsd:string ;
  owlnames:plainPostBlank "exactly {?2} thing(s) that {?3}"^^xsd:string ;
  owlnames:plainPostIRI "exactly {?2} {?3}(s)"^^xsd:string ;
  owlnames:plainPrefix "{?1} "^^xsd:string ;
.
owl:someValuesFrom
  owlnames:clabel "thing that  {?2}"^^xsd:string ;
  owlnames:hasPostBlank "that is {?2}"^^xsd:string ;
  owlnames:hasPostIRI "that is a {?2}"^^xsd:string ;
  owlnames:hasPrefix "has some {?1} "^^xsd:string ;
  owlnames:hasTemplate "has some {?1} "^^xsd:string ;
  owlnames:isPostBlank "something that {?2}"^^xsd:string ;
  owlnames:isPostIRI "some {?2}"^^xsd:string ;
  owlnames:isPrefix "is {?1} "^^xsd:string ;
  owlnames:isTemplate "is {?1} some"^^xsd:string ;
  owlnames:ntemplate "{?1} some value of {?2}"^^xsd:string ;
  owlnames:plainPostBlank "something that {?2}"^^xsd:string ;
  owlnames:plainPostIRI "{?2}"^^xsd:string ;
  owlnames:plainPrefix "{?1} some "^^xsd:string ;
.
owl:unionOf
  owlnames:ntemplate " OR "^^xsd:string ;
.
[
  rdf:type sp:Select ;
  sp:resultVariables (
      [
        sp:varName "result"^^xsd:string ;
      ]
    ) ;
  sp:text """PREFIX  metadata: <http://topbraid.org/metadata#>
PREFIX  skostemplate: <http://topbraid.org/spin/skostemplates#>
PREFIX  tagger: <http://evn.topbraidlive.org/tagger#>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  tops: <http://www.topbraid.org/tops#>
PREFIX  swaclasses: <http://topbraid.org/swaclasses#>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  spif: <http://spinrdf.org/spif#>
PREFIX  crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#>
PREFIX  tables: <http://topbraid.org/tables#>
PREFIX  ui:   <http://uispin.org/ui#>
PREFIX  composite: <http://www.topbraid.org/2007/05/composite.owl#>
PREFIX  swaeditor: <http://topbraid.org/swaeditor#>
PREFIX  sm2wsdl: <http://topbraid.org/sparqlmotion/sm2wsdl.sms#>
PREFIX  html: <http://uispin.org/html#>
PREFIX  let:  <http://uispin.org/let#>
PREFIX  shaclify: <http://topbraid.org/shacl/shaclify#>
PREFIX  spinmapl: <http://topbraid.org/spin/spinmapl#>
PREFIX  tasks: <http://topbraid.org/tasks#>
PREFIX  skosspin: <http://topbraid.org/spin/skosspin#>
PREFIX  discoverytool: <http://www.epa.gov/discoverytool#>
PREFIX  tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#>
PREFIX  qudtspin: <http://qudt.org/spin/qudtspin#>
PREFIX  spl:  <http://spinrdf.org/spl#>
PREFIX  jfn:  <java:com.hp.hpl.jena.sparql.function.library.>
PREFIX  spr:  <http://spinrdf.org/spr#>
PREFIX  taxonomies: <http://evn.topbraidlive.org/evnprojects#>
PREFIX  tbi:  <http://tbi.topbraid.org/tbi#>
PREFIX  letrs: <http://uispin.org/letrs#>
PREFIX  connectset-templates: <http://tbi.topbraidlive.org/system/connectset-templates#>
PREFIX  fn:   <http://www.w3.org/2005/xpath-functions#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  sharepoint: <http://topbraid.org/sharepoint#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  smf:  <http://topbraid.org/sparqlmotionfunctions#>
PREFIX  swauml: <http://topbraid.org/swauml#>
PREFIX  evnconstraints: <http://topbraid.org/spin/evnconstraints#>
PREFIX  sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#>
PREFIX  backspin: <http://topbraid.org/backspin#>
PREFIX  tablesmap: <http://topbraid.org/spin/tablesmap#>
PREFIX  search: <http://topbraid.org/search#>
PREFIX  default: <http://uispin.org/default#>
PREFIX  sml:  <http://topbraid.org/sparqlmotionlib#>
PREFIX  crosswalk: <http://topbraid.org/crosswalk#>
PREFIX  dct:  <http://purl.org/dc/terms/>
PREFIX  arg:  <http://spinrdf.org/arg#>
PREFIX  json: <http://topbraid.org/json#>
PREFIX  sm:   <http://topbraid.org/sparqlmotion#>
PREFIX  spinmap: <http://spinrdf.org/spinmap#>
PREFIX  sp:   <http://spinrdf.org/sp#>
PREFIX  email: <http://topbraid.org/email#>
PREFIX  raci: <http://topbraid.org/raci#>
PREFIX  uix:  <http://topbraidlive.org/uix#>
PREFIX  afn:  <http://jena.hpl.hp.com/ARQ/function#>
PREFIX  unnamed: <http://sc.workingontologist.com/unnamed#>
PREFIX  owlnames: <http://spec.edmcouncil.org/owlnames#>
PREFIX  owlrl: <http://topbraid.org/spin/owlrl#>
PREFIX  daml: <http://www.daml.org/2001/03/daml+oil#>
PREFIX  sxml: <http://topbraid.org/sxml#>
PREFIX  teamwork: <http://topbraid.org/teamwork#>
PREFIX  swon: <http://uispin.org/swon#>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  pf:   <http://jena.hpl.hp.com/ARQ/property#>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  evnui: <http://evn.topbraidlive.org/ui#>
PREFIX  spra: <http://spinrdf.org/spra#>
PREFIX  swa:  <http://topbraid.org/swa#>

SELECT  ?result
WHERE
  { OPTIONAL
      { ?a1 rdfs:label ?l1 }
    OPTIONAL
      { ?a1 rdf:type owl:Restriction .
        ?a1 owl:onProperty ?p .
        ?p rdfs:label ?pl .
        ?a1 (owl:someValuesFrom|owl:allValuesFrom)|owl:hasValue ?rc .
        ?a1 ?op ?rc
        BIND(owlnames:rlabel(?rc) AS ?rcl)
        FILTER ( ?op IN (owl:someValuesFrom, owl:allValuesFrom, owl:hasValue) )
        ?op owlnames:ntemplate ?oplp .
        ?op owlnames:clabel ?oplc
        BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?opl)
        BIND(concat(?pl, \" \", ?opl, \" \", ?rcl) AS ?lx)
        BIND(replace(replace(?opl, \"\\\\{\\\\?1}\", ?pl), \"\\\\{\\\\?2}\", ?rcl) AS ?l2)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Class .
        ?a1 ?oc ?b
        FILTER ( ?oc IN (owl:intersectionOf, owl:unionOf) )
        ?b rdf:first ?car .
        ?b rdf:rest ?cdr .
        ?oc owlnames:ntemplate ?opl
        BIND(concat(owlnames:rlabel(?cdr), \" \", ?opl, \" \", owlnames:rlabel(?car)) AS ?l3)
      }
    OPTIONAL
      { FILTER isBlank(?a1)
        ?a1 rdf:first ?car .
        ?a1 rdf:rest ?cdr
        BIND(if(( ?cdr = rdf:nil ), owlnames:rlabel(?car), concat(owlnames:rlabel(?car), \", \", owlnames:rlabel(?cdr))) AS ?l4)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Restriction .
        ?a1 owl:onProperty ?p
        OPTIONAL
          { ?p rdfs:label ?plx }
        BIND(coalesce(?plx, \"unlabelled property\") AS ?pl)
        ?a1 owl:onClass ?rc
        BIND(owlnames:rlabel(?rc) AS ?rclx)
        BIND(coalesce(?rclx, \"unlabelled class\") AS ?rcl)
        ?a1 ?cop ?card
        FILTER ( ?cop IN (owl:minCardinality, owl:maxCardinality, owl:cardinality, owl:minQualifiedCardinality, owl:maxQualifiedCardinality, owl:qualifiedCardinality) )
        OPTIONAL
          { ?cop owlnames:ntemplate ?oplpx }
        LET (?oplp := coalesce(?oplpx, \"some card\"))
        OPTIONAL
          { ?cop owlnames:clabel ?oplcx }
        LET (?oplc := coalesce(?oplcx, \"some card\"))
        ?cop owlnames:clabel ?oplc
        BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?s)
        BIND(?pl AS ?fill1)
        BIND(?card AS ?fill2)
        BIND(?rcl AS ?fill3)
        BIND(replace(replace(replace(?s, \"\\\\{\\\\?1}\", ?fill1), \"\\\\{\\\\?2}\", ?fill2), \"\\\\{\\\\?3\", ?fill3) AS ?l5)
      }
    BIND(coalesce(?l1, ?l2, ?l3, ?l4, ?l5, concat(\"NONE\", str(?cop)), \"NO ARG\") AS ?result)
  }
"""^^xsd:string ;
  sp:where (
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object [
                  sp:varName "l1"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Restriction ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "p"^^xsd:string ;
                ] ;
              sp:predicate owl:onProperty ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "p"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:TriplePath ;
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:path [
                  rdf:type sp:AltPath ;
                  sp:path1 [
                      rdf:type sp:AltPath ;
                      sp:path1 owl:someValuesFrom ;
                      sp:path2 owl:allValuesFrom ;
                    ] ;
                  sp:path2 owl:hasValue ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "op"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type owlnames:rlabel ;
                  arg:a1 [
                      sp:varName "rc"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "op"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:someValuesFrom ;
                  sp:arg3 owl:allValuesFrom ;
                  sp:arg4 owl:hasValue ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "op"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplc"^^xsd:string ;
                ] ;
              sp:predicate owlnames:clabel ;
              sp:subject [
                  sp:varName "op"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 [
                      sp:varName "oplc"^^xsd:string ;
                    ] ;
                  sp:arg3 [
                      sp:varName "oplp"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "opl"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:concat ;
                  sp:arg1 [
                      sp:varName "pl"^^xsd:string ;
                    ] ;
                  sp:arg2 " " ;
                  sp:arg3 [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:arg4 " " ;
                  sp:arg5 [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "lx"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:replace ;
                  sp:arg1 [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          sp:varName "opl"^^xsd:string ;
                        ] ;
                      sp:arg2 "\\{\\?1}" ;
                      sp:arg3 [
                          sp:varName "pl"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 "\\{\\?2}" ;
                  sp:arg3 [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l2"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Class ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "b"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "oc"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "oc"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:intersectionOf ;
                  sp:arg3 owl:unionOf ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "car"^^xsd:string ;
                ] ;
              sp:predicate rdf:first ;
              sp:subject [
                  sp:varName "b"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "cdr"^^xsd:string ;
                ] ;
              sp:predicate rdf:rest ;
              sp:subject [
                  sp:varName "b"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "opl"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "oc"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:concat ;
                  sp:arg1 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "cdr"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 " " ;
                  sp:arg3 [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:arg4 " " ;
                  sp:arg5 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "car"^^xsd:string ;
                        ] ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l3"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:isBlank ;
                  sp:arg1 [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "car"^^xsd:string ;
                ] ;
              sp:predicate rdf:first ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "cdr"^^xsd:string ;
                ] ;
              sp:predicate rdf:rest ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:eq ;
                      sp:arg1 [
                          sp:varName "cdr"^^xsd:string ;
                        ] ;
                      sp:arg2 () ;
                    ] ;
                  sp:arg2 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "car"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg3 [
                      rdf:type sp:concat ;
                      sp:arg1 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "car"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 ", " ;
                      sp:arg3 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "cdr"^^xsd:string ;
                            ] ;
                        ] ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l4"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Restriction ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "p"^^xsd:string ;
                ] ;
              sp:predicate owl:onProperty ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Optional ;
              sp:elements (
                  [
                    sp:object [
                        sp:varName "plx"^^xsd:string ;
                      ] ;
                    sp:predicate rdfs:label ;
                    sp:subject [
                        sp:varName "p"^^xsd:string ;
                      ] ;
                  ]
                ) ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:coalesce ;
                  sp:arg1 [
                      sp:varName "plx"^^xsd:string ;
                    ] ;
                  sp:arg2 "unlabelled property" ;
                ] ;
              sp:variable [
                  sp:varName "pl"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:predicate owl:onClass ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type owlnames:rlabel ;
                  arg:a1 [
                      sp:varName "rc"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "rclx"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:coalesce ;
                  sp:arg1 [
                      sp:varName "rclx"^^xsd:string ;
                    ] ;
                  sp:arg2 "unlabelled class" ;
                ] ;
              sp:variable [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "card"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "cop"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "cop"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:minCardinality ;
                  sp:arg3 owl:maxCardinality ;
                  sp:arg4 owl:cardinality ;
                  sp:arg5 owl:minQualifiedCardinality ;
                  sp:arg6 owl:maxQualifiedCardinality ;
                  sp:arg7 owl:qualifiedCardinality ;
                ] ;
            ]
            [
              rdf:type sp:Optional ;
              sp:elements (
                  [
                    sp:object [
                        sp:varName "oplpx"^^xsd:string ;
                      ] ;
                    sp:predicate owlnames:ntemplate ;
                    sp:subject [
                        sp:varName "cop"^^xsd:string ;
                      ] ;
                  ]
                ) ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:coalesce ;
                  sp:arg1 [
                      sp:varName "oplpx"^^xsd:string ;
                    ] ;
                  sp:arg2 "some card" ;
                ] ;
              sp:variable [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Optional ;
              sp:elements (
                  [
                    sp:object [
                        sp:varName "oplcx"^^xsd:string ;
                      ] ;
                    sp:predicate owlnames:clabel ;
                    sp:subject [
                        sp:varName "cop"^^xsd:string ;
                      ] ;
                  ]
                ) ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:coalesce ;
                  sp:arg1 [
                      sp:varName "oplcx"^^xsd:string ;
                    ] ;
                  sp:arg2 "some card" ;
                ] ;
              sp:variable [
                  sp:varName "oplc"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplc"^^xsd:string ;
                ] ;
              sp:predicate owlnames:clabel ;
              sp:subject [
                  sp:varName "cop"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 [
                      sp:varName "oplc"^^xsd:string ;
                    ] ;
                  sp:arg3 [
                      sp:varName "oplp"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "s"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "card"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill2"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill3"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:replace ;
                  sp:arg1 [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          rdf:type sp:replace ;
                          sp:arg1 [
                              sp:varName "s"^^xsd:string ;
                            ] ;
                          sp:arg2 "\\{\\?1}" ;
                          sp:arg3 [
                              sp:varName "fill1"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 "\\{\\?2}" ;
                      sp:arg3 [
                          sp:varName "fill2"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 "\\{\\?3" ;
                  sp:arg3 [
                      sp:varName "fill3"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l5"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Bind ;
        sp:expression [
            rdf:type sp:coalesce ;
            sp:arg1 [
                sp:varName "l1"^^xsd:string ;
              ] ;
            sp:arg2 [
                sp:varName "l2"^^xsd:string ;
              ] ;
            sp:arg3 [
                sp:varName "l3"^^xsd:string ;
              ] ;
            sp:arg4 [
                sp:varName "l4"^^xsd:string ;
              ] ;
            sp:arg5 [
                sp:varName "l5"^^xsd:string ;
              ] ;
            sp:arg6 [
                rdf:type sp:concat ;
                sp:arg1 "NONE" ;
                sp:arg2 [
                    rdf:type sp:str ;
                    sp:arg1 [
                        sp:varName "cop"^^xsd:string ;
                      ] ;
                  ] ;
              ] ;
            sp:arg7 "NO ARG" ;
          ] ;
        sp:variable [
            sp:varName "result"^^xsd:string ;
          ] ;
      ]
    ) ;
].
[
  rdf:type sp:Select ;
  sp:resultVariables (
      [
        sp:varName "result"^^xsd:string ;
      ]
    ) ;
  sp:text """PREFIX  metadata: <http://topbraid.org/metadata#>
PREFIX  skostemplate: <http://topbraid.org/spin/skostemplates#>
PREFIX  tagger: <http://evn.topbraidlive.org/tagger#>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  tops: <http://www.topbraid.org/tops#>
PREFIX  swaclasses: <http://topbraid.org/swaclasses#>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  spif: <http://spinrdf.org/spif#>
PREFIX  crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#>
PREFIX  tables: <http://topbraid.org/tables#>
PREFIX  ui:   <http://uispin.org/ui#>
PREFIX  composite: <http://www.topbraid.org/2007/05/composite.owl#>
PREFIX  swaeditor: <http://topbraid.org/swaeditor#>
PREFIX  sm2wsdl: <http://topbraid.org/sparqlmotion/sm2wsdl.sms#>
PREFIX  html: <http://uispin.org/html#>
PREFIX  let:  <http://uispin.org/let#>
PREFIX  shaclify: <http://topbraid.org/shacl/shaclify#>
PREFIX  spinmapl: <http://topbraid.org/spin/spinmapl#>
PREFIX  tasks: <http://topbraid.org/tasks#>
PREFIX  skosspin: <http://topbraid.org/spin/skosspin#>
PREFIX  discoverytool: <http://www.epa.gov/discoverytool#>
PREFIX  tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#>
PREFIX  qudtspin: <http://qudt.org/spin/qudtspin#>
PREFIX  spl:  <http://spinrdf.org/spl#>
PREFIX  jfn:  <java:com.hp.hpl.jena.sparql.function.library.>
PREFIX  spr:  <http://spinrdf.org/spr#>
PREFIX  taxonomies: <http://evn.topbraidlive.org/evnprojects#>
PREFIX  tbi:  <http://tbi.topbraid.org/tbi#>
PREFIX  letrs: <http://uispin.org/letrs#>
PREFIX  connectset-templates: <http://tbi.topbraidlive.org/system/connectset-templates#>
PREFIX  fn:   <http://www.w3.org/2005/xpath-functions#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  sharepoint: <http://topbraid.org/sharepoint#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  smf:  <http://topbraid.org/sparqlmotionfunctions#>
PREFIX  swauml: <http://topbraid.org/swauml#>
PREFIX  evnconstraints: <http://topbraid.org/spin/evnconstraints#>
PREFIX  sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#>
PREFIX  backspin: <http://topbraid.org/backspin#>
PREFIX  tablesmap: <http://topbraid.org/spin/tablesmap#>
PREFIX  search: <http://topbraid.org/search#>
PREFIX  default: <http://uispin.org/default#>
PREFIX  sml:  <http://topbraid.org/sparqlmotionlib#>
PREFIX  crosswalk: <http://topbraid.org/crosswalk#>
PREFIX  dct:  <http://purl.org/dc/terms/>
PREFIX  arg:  <http://spinrdf.org/arg#>
PREFIX  json: <http://topbraid.org/json#>
PREFIX  sm:   <http://topbraid.org/sparqlmotion#>
PREFIX  spinmap: <http://spinrdf.org/spinmap#>
PREFIX  sp:   <http://spinrdf.org/sp#>
PREFIX  email: <http://topbraid.org/email#>
PREFIX  raci: <http://topbraid.org/raci#>
PREFIX  uix:  <http://topbraidlive.org/uix#>
PREFIX  afn:  <http://jena.hpl.hp.com/ARQ/function#>
PREFIX  unnamed: <http://sc.workingontologist.com/unnamed#>
PREFIX  owlnames: <http://spec.edmcouncil.org/owlnames#>
PREFIX  owlrl: <http://topbraid.org/spin/owlrl#>
PREFIX  daml: <http://www.daml.org/2001/03/daml+oil#>
PREFIX  sxml: <http://topbraid.org/sxml#>
PREFIX  teamwork: <http://topbraid.org/teamwork#>
PREFIX  swon: <http://uispin.org/swon#>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  pf:   <http://jena.hpl.hp.com/ARQ/property#>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  evnui: <http://evn.topbraidlive.org/ui#>
PREFIX  spra: <http://spinrdf.org/spra#>
PREFIX  swa:  <http://topbraid.org/swa#>

SELECT  ?result
WHERE
  { OPTIONAL
      { ?a1 rdfs:label ?l1 }
    OPTIONAL
      { ?a1 rdf:type owl:Restriction .
        ?a1 owl:onProperty ?p .
        ?p rdfs:label ?pl .
        ?a1 (owl:someValuesFrom|owl:allValuesFrom)|owl:hasValue ?rc .
        ?a1 ?op ?rc
        BIND(owlnames:rlabel(?rc) AS ?rcl)
        FILTER ( ?op IN (owl:someValuesFrom, owl:allValuesFrom, owl:hasValue) )
        ?op owlnames:ntemplate ?oplp .
        ?op owlnames:clabel ?oplc
        BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?opl)
        BIND(concat(?pl, \" \", ?opl, \" \", ?rcl) AS ?lx)
        BIND(replace(replace(?opl, \"\\\\{\\\\?1}\", ?pl), \"\\\\{\\\\?2}\", ?rcl) AS ?l2)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Class .
        ?a1 ?oc ?b
        FILTER ( ?oc IN (owl:intersectionOf, owl:unionOf) )
        ?b rdf:first ?car .
        ?b rdf:rest ?cdr .
        ?oc owlnames:ntemplate ?opl
        BIND(concat(owlnames:rlabel(?cdr), \" \", ?opl, \" \", owlnames:rlabel(?car)) AS ?l3)
      }
    OPTIONAL
      { FILTER isBlank(?a1)
        ?a1 rdf:first ?car .
        ?a1 rdf:rest ?cdr
        BIND(if(( ?cdr = rdf:nil ), owlnames:rlabel(?car), concat(owlnames:rlabel(?car), \", \", owlnames:rlabel(?cdr))) AS ?l4)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Restriction .
        ?a1 owl:onProperty ?p
        OPTIONAL
          { ?p rdfs:label ?plx }
        BIND(coalesce(?plx, \"unlabelled property\") AS ?pl)
        ?a1 owl:onClass ?rc
        BIND(owlnames:rlabel(?rc) AS ?rclx)
        BIND(coalesce(?rclx, \"unlabelled class\") AS ?rcl)
        ?a1 ?cop ?card
        FILTER ( ?cop IN (owl:minCardinality, owl:maxCardinality, owl:cardinality, owl:minQualifiedCardinality, owl:maxQualifiedCardinality, owl:qualifiedCardinality) )
        OPTIONAL
          { ?cop owlnames:ntemplate ?oplpx }
        LET (?oplp := coalesce(?oplpx, \"some card\"))
        OPTIONAL
          { ?cop owlnames:clabel ?oplcx }
        LET (?oplp := coalesce(?oplcx, \"some card\"))
        ?cop owlnames:clabel ?oplc
        BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?s)
        BIND(?pl AS ?fill1)
        BIND(?card AS ?fill2)
        BIND(?rcl AS ?fill3)
        BIND(replace(replace(replace(?s, \"\\\\{\\\\?1}\", ?fill1), \"\\\\{\\\\?2}\", ?fill2), \"\\\\{\\\\?3\", ?fill3) AS ?l5)
      }
    BIND(coalesce(?l1, ?l2, ?l3, ?l4, ?l5, concat(\"NONE\", str(?cop)), \"NO ARG\") AS ?result)
  }
"""^^xsd:string ;
  sp:where (
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object [
                  sp:varName "l1"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Restriction ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "p"^^xsd:string ;
                ] ;
              sp:predicate owl:onProperty ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "p"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:TriplePath ;
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:path [
                  rdf:type sp:AltPath ;
                  sp:path1 [
                      rdf:type sp:AltPath ;
                      sp:path1 owl:someValuesFrom ;
                      sp:path2 owl:allValuesFrom ;
                    ] ;
                  sp:path2 owl:hasValue ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "op"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type owlnames:rlabel ;
                  arg:a1 [
                      sp:varName "rc"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "op"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:someValuesFrom ;
                  sp:arg3 owl:allValuesFrom ;
                  sp:arg4 owl:hasValue ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "op"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplc"^^xsd:string ;
                ] ;
              sp:predicate owlnames:clabel ;
              sp:subject [
                  sp:varName "op"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 [
                      sp:varName "oplc"^^xsd:string ;
                    ] ;
                  sp:arg3 [
                      sp:varName "oplp"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "opl"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:concat ;
                  sp:arg1 [
                      sp:varName "pl"^^xsd:string ;
                    ] ;
                  sp:arg2 " " ;
                  sp:arg3 [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:arg4 " " ;
                  sp:arg5 [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "lx"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:replace ;
                  sp:arg1 [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          sp:varName "opl"^^xsd:string ;
                        ] ;
                      sp:arg2 "\\{\\?1}" ;
                      sp:arg3 [
                          sp:varName "pl"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 "\\{\\?2}" ;
                  sp:arg3 [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l2"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Class ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "b"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "oc"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "oc"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:intersectionOf ;
                  sp:arg3 owl:unionOf ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "car"^^xsd:string ;
                ] ;
              sp:predicate rdf:first ;
              sp:subject [
                  sp:varName "b"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "cdr"^^xsd:string ;
                ] ;
              sp:predicate rdf:rest ;
              sp:subject [
                  sp:varName "b"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "opl"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "oc"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:concat ;
                  sp:arg1 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "cdr"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 " " ;
                  sp:arg3 [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:arg4 " " ;
                  sp:arg5 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "car"^^xsd:string ;
                        ] ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l3"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:isBlank ;
                  sp:arg1 [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "car"^^xsd:string ;
                ] ;
              sp:predicate rdf:first ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "cdr"^^xsd:string ;
                ] ;
              sp:predicate rdf:rest ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:eq ;
                      sp:arg1 [
                          sp:varName "cdr"^^xsd:string ;
                        ] ;
                      sp:arg2 () ;
                    ] ;
                  sp:arg2 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "car"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg3 [
                      rdf:type sp:concat ;
                      sp:arg1 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "car"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 ", " ;
                      sp:arg3 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "cdr"^^xsd:string ;
                            ] ;
                        ] ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l4"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Restriction ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "p"^^xsd:string ;
                ] ;
              sp:predicate owl:onProperty ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Optional ;
              sp:elements (
                  [
                    sp:object [
                        sp:varName "plx"^^xsd:string ;
                      ] ;
                    sp:predicate rdfs:label ;
                    sp:subject [
                        sp:varName "p"^^xsd:string ;
                      ] ;
                  ]
                ) ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:coalesce ;
                  sp:arg1 [
                      sp:varName "plx"^^xsd:string ;
                    ] ;
                  sp:arg2 "unlabelled property" ;
                ] ;
              sp:variable [
                  sp:varName "pl"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:predicate owl:onClass ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type owlnames:rlabel ;
                  arg:a1 [
                      sp:varName "rc"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "rclx"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:coalesce ;
                  sp:arg1 [
                      sp:varName "rclx"^^xsd:string ;
                    ] ;
                  sp:arg2 "unlabelled class" ;
                ] ;
              sp:variable [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "card"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "cop"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "cop"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:minCardinality ;
                  sp:arg3 owl:maxCardinality ;
                  sp:arg4 owl:cardinality ;
                  sp:arg5 owl:minQualifiedCardinality ;
                  sp:arg6 owl:maxQualifiedCardinality ;
                  sp:arg7 owl:qualifiedCardinality ;
                ] ;
            ]
            [
              rdf:type sp:Optional ;
              sp:elements (
                  [
                    sp:object [
                        sp:varName "oplpx"^^xsd:string ;
                      ] ;
                    sp:predicate owlnames:ntemplate ;
                    sp:subject [
                        sp:varName "cop"^^xsd:string ;
                      ] ;
                  ]
                ) ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:coalesce ;
                  sp:arg1 [
                      sp:varName "oplpx"^^xsd:string ;
                    ] ;
                  sp:arg2 "some card" ;
                ] ;
              sp:variable [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Optional ;
              sp:elements (
                  [
                    sp:object [
                        sp:varName "oplcx"^^xsd:string ;
                      ] ;
                    sp:predicate owlnames:clabel ;
                    sp:subject [
                        sp:varName "cop"^^xsd:string ;
                      ] ;
                  ]
                ) ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:coalesce ;
                  sp:arg1 [
                      sp:varName "oplcx"^^xsd:string ;
                    ] ;
                  sp:arg2 "some card" ;
                ] ;
              sp:variable [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplc"^^xsd:string ;
                ] ;
              sp:predicate owlnames:clabel ;
              sp:subject [
                  sp:varName "cop"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 [
                      sp:varName "oplc"^^xsd:string ;
                    ] ;
                  sp:arg3 [
                      sp:varName "oplp"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "s"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "card"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill2"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill3"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:replace ;
                  sp:arg1 [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          rdf:type sp:replace ;
                          sp:arg1 [
                              sp:varName "s"^^xsd:string ;
                            ] ;
                          sp:arg2 "\\{\\?1}" ;
                          sp:arg3 [
                              sp:varName "fill1"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 "\\{\\?2}" ;
                      sp:arg3 [
                          sp:varName "fill2"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 "\\{\\?3" ;
                  sp:arg3 [
                      sp:varName "fill3"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l5"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Bind ;
        sp:expression [
            rdf:type sp:coalesce ;
            sp:arg1 [
                sp:varName "l1"^^xsd:string ;
              ] ;
            sp:arg2 [
                sp:varName "l2"^^xsd:string ;
              ] ;
            sp:arg3 [
                sp:varName "l3"^^xsd:string ;
              ] ;
            sp:arg4 [
                sp:varName "l4"^^xsd:string ;
              ] ;
            sp:arg5 [
                sp:varName "l5"^^xsd:string ;
              ] ;
            sp:arg6 [
                rdf:type sp:concat ;
                sp:arg1 "NONE" ;
                sp:arg2 [
                    rdf:type sp:str ;
                    sp:arg1 [
                        sp:varName "cop"^^xsd:string ;
                      ] ;
                  ] ;
              ] ;
            sp:arg7 "NO ARG" ;
          ] ;
        sp:variable [
            sp:varName "result"^^xsd:string ;
          ] ;
      ]
    ) ;
].
[
  rdf:type sp:Select ;
  sp:resultVariables (
      [
        sp:varName "result"^^xsd:string ;
      ]
    ) ;
  sp:text """PREFIX  metadata: <http://topbraid.org/metadata#>
PREFIX  skostemplate: <http://topbraid.org/spin/skostemplates#>
PREFIX  tagger: <http://evn.topbraidlive.org/tagger#>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  tops: <http://www.topbraid.org/tops#>
PREFIX  swaclasses: <http://topbraid.org/swaclasses#>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  spif: <http://spinrdf.org/spif#>
PREFIX  crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#>
PREFIX  tables: <http://topbraid.org/tables#>
PREFIX  ui:   <http://uispin.org/ui#>
PREFIX  composite: <http://www.topbraid.org/2007/05/composite.owl#>
PREFIX  swaeditor: <http://topbraid.org/swaeditor#>
PREFIX  sm2wsdl: <http://topbraid.org/sparqlmotion/sm2wsdl.sms#>
PREFIX  html: <http://uispin.org/html#>
PREFIX  let:  <http://uispin.org/let#>
PREFIX  shaclify: <http://topbraid.org/shacl/shaclify#>
PREFIX  spinmapl: <http://topbraid.org/spin/spinmapl#>
PREFIX  tasks: <http://topbraid.org/tasks#>
PREFIX  skosspin: <http://topbraid.org/spin/skosspin#>
PREFIX  discoverytool: <http://www.epa.gov/discoverytool#>
PREFIX  tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#>
PREFIX  qudtspin: <http://qudt.org/spin/qudtspin#>
PREFIX  spl:  <http://spinrdf.org/spl#>
PREFIX  jfn:  <java:com.hp.hpl.jena.sparql.function.library.>
PREFIX  spr:  <http://spinrdf.org/spr#>
PREFIX  taxonomies: <http://evn.topbraidlive.org/evnprojects#>
PREFIX  tbi:  <http://tbi.topbraid.org/tbi#>
PREFIX  letrs: <http://uispin.org/letrs#>
PREFIX  connectset-templates: <http://tbi.topbraidlive.org/system/connectset-templates#>
PREFIX  fn:   <http://www.w3.org/2005/xpath-functions#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  sharepoint: <http://topbraid.org/sharepoint#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  smf:  <http://topbraid.org/sparqlmotionfunctions#>
PREFIX  swauml: <http://topbraid.org/swauml#>
PREFIX  evnconstraints: <http://topbraid.org/spin/evnconstraints#>
PREFIX  sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#>
PREFIX  backspin: <http://topbraid.org/backspin#>
PREFIX  tablesmap: <http://topbraid.org/spin/tablesmap#>
PREFIX  search: <http://topbraid.org/search#>
PREFIX  default: <http://uispin.org/default#>
PREFIX  sml:  <http://topbraid.org/sparqlmotionlib#>
PREFIX  crosswalk: <http://topbraid.org/crosswalk#>
PREFIX  dct:  <http://purl.org/dc/terms/>
PREFIX  arg:  <http://spinrdf.org/arg#>
PREFIX  json: <http://topbraid.org/json#>
PREFIX  sm:   <http://topbraid.org/sparqlmotion#>
PREFIX  spinmap: <http://spinrdf.org/spinmap#>
PREFIX  sp:   <http://spinrdf.org/sp#>
PREFIX  email: <http://topbraid.org/email#>
PREFIX  raci: <http://topbraid.org/raci#>
PREFIX  uix:  <http://topbraidlive.org/uix#>
PREFIX  afn:  <http://jena.hpl.hp.com/ARQ/function#>
PREFIX  unnamed: <http://sc.workingontologist.com/unnamed#>
PREFIX  owlnames: <http://spec.edmcouncil.org/owlnames#>
PREFIX  owlrl: <http://topbraid.org/spin/owlrl#>
PREFIX  daml: <http://www.daml.org/2001/03/daml+oil#>
PREFIX  sxml: <http://topbraid.org/sxml#>
PREFIX  teamwork: <http://topbraid.org/teamwork#>
PREFIX  swon: <http://uispin.org/swon#>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  pf:   <http://jena.hpl.hp.com/ARQ/property#>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  evnui: <http://evn.topbraidlive.org/ui#>
PREFIX  spra: <http://spinrdf.org/spra#>
PREFIX  swa:  <http://topbraid.org/swa#>

SELECT  ?result
WHERE
  { OPTIONAL
      { ?a1 rdfs:label ?l1 }
    OPTIONAL
      { ?a1 rdf:type owl:Restriction .
        ?a1 owl:onProperty ?p .
        ?p rdfs:label ?pl .
        ?a1 (owl:someValuesFrom|owl:allValuesFrom)|owl:hasValue ?rc .
        ?a1 ?op ?rc
        BIND(owlnames:rlabel(?rc) AS ?rcl)
        FILTER ( ?op IN (owl:someValuesFrom, owl:allValuesFrom, owl:hasValue) )
        ?op owlnames:ntemplate ?oplp .
        ?op owlnames:clabel ?oplc
        BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?opl)
        BIND(concat(?pl, \" \", ?opl, \" \", ?rcl) AS ?lx)
        BIND(replace(replace(?opl, \"\\\\{\\\\?1}\", ?pl), \"\\\\{\\\\?2}\", ?rcl) AS ?l2)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Class .
        ?a1 ?oc ?b
        FILTER ( ?oc IN (owl:intersectionOf, owl:unionOf) )
        ?b rdf:first ?car .
        ?b rdf:rest ?cdr .
        ?oc owlnames:ntemplate ?opl
        BIND(concat(owlnames:rlabel(?cdr), \" \", ?opl, \" \", owlnames:rlabel(?car)) AS ?l3)
      }
    OPTIONAL
      { FILTER isBlank(?a1)
        ?a1 rdf:first ?car .
        ?a1 rdf:rest ?cdr
        BIND(if(( ?cdr = rdf:nil ), owlnames:rlabel(?car), concat(owlnames:rlabel(?car), \", \", owlnames:rlabel(?cdr))) AS ?l4)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Restriction .
        ?a1 owl:onProperty ?p
        OPTIONAL
          { ?p rdfs:label ?plx }
        BIND(coalesce(?plx, \"unlabelled property\") AS ?pl)
        ?a1 owl:onClass ?rc
        BIND(owlnames:rlabel(?rc) AS ?rclx)
        BIND(coalesce(?rclx, \"unlabelled class\") AS ?rcl)
        ?a1 ?cop ?card
        FILTER ( ?cop IN (owl:minCardinality, owl:maxCardinality, owl:cardinality, owl:minQualifiedCardinality, owl:maxQualifiedCardinality, owl:qualifiedCardinality) )
        OPTIONAL
          { ?cop owlnames:ntemplate ?oplpx }
        LET (?oplp := coalesce(?oplpx, \"some card\"))
        OPTIONAL
          { ?cop owlnames:clabel ?oplcx }
        LET (?oplp := coalesce(?oplcx, \"some card\"))
        ?cop owlnames:clabel ?oplc
        BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?s)
        BIND(?pl AS ?fill1)
        BIND(?card AS ?fill2)
        BIND(?rcl AS ?fill3)
        BIND(replace(replace(replace(?s, \"\\\\{\\\\?1}\", ?fill1), \"\\\\{\\\\?2}\", ?fill2), \"\\\\{\\\\?3\", ?fill3) AS ?l5)
      }
    BIND(coalesce(?l1, ?l2, ?l3, ?l4, ?l5, concat(\"NONE\", str(?cop)), \"NO ARG\") AS ?result)
  }
"""^^xsd:string ;
  sp:where (
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object [
                  sp:varName "l1"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Restriction ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "p"^^xsd:string ;
                ] ;
              sp:predicate owl:onProperty ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "p"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:TriplePath ;
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:path [
                  rdf:type sp:AltPath ;
                  sp:path1 [
                      rdf:type sp:AltPath ;
                      sp:path1 owl:someValuesFrom ;
                      sp:path2 owl:allValuesFrom ;
                    ] ;
                  sp:path2 owl:hasValue ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "op"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type owlnames:rlabel ;
                  arg:a1 [
                      sp:varName "rc"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "op"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:someValuesFrom ;
                  sp:arg3 owl:allValuesFrom ;
                  sp:arg4 owl:hasValue ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "op"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplc"^^xsd:string ;
                ] ;
              sp:predicate owlnames:clabel ;
              sp:subject [
                  sp:varName "op"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 [
                      sp:varName "oplc"^^xsd:string ;
                    ] ;
                  sp:arg3 [
                      sp:varName "oplp"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "opl"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:concat ;
                  sp:arg1 [
                      sp:varName "pl"^^xsd:string ;
                    ] ;
                  sp:arg2 " " ;
                  sp:arg3 [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:arg4 " " ;
                  sp:arg5 [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "lx"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:replace ;
                  sp:arg1 [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          sp:varName "opl"^^xsd:string ;
                        ] ;
                      sp:arg2 "\\{\\?1}" ;
                      sp:arg3 [
                          sp:varName "pl"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 "\\{\\?2}" ;
                  sp:arg3 [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l2"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Class ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "b"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "oc"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "oc"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:intersectionOf ;
                  sp:arg3 owl:unionOf ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "car"^^xsd:string ;
                ] ;
              sp:predicate rdf:first ;
              sp:subject [
                  sp:varName "b"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "cdr"^^xsd:string ;
                ] ;
              sp:predicate rdf:rest ;
              sp:subject [
                  sp:varName "b"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "opl"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "oc"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:concat ;
                  sp:arg1 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "cdr"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 " " ;
                  sp:arg3 [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:arg4 " " ;
                  sp:arg5 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "car"^^xsd:string ;
                        ] ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l3"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:isBlank ;
                  sp:arg1 [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "car"^^xsd:string ;
                ] ;
              sp:predicate rdf:first ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "cdr"^^xsd:string ;
                ] ;
              sp:predicate rdf:rest ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:eq ;
                      sp:arg1 [
                          sp:varName "cdr"^^xsd:string ;
                        ] ;
                      sp:arg2 () ;
                    ] ;
                  sp:arg2 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "car"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg3 [
                      rdf:type sp:concat ;
                      sp:arg1 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "car"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 ", " ;
                      sp:arg3 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "cdr"^^xsd:string ;
                            ] ;
                        ] ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l4"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Restriction ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "p"^^xsd:string ;
                ] ;
              sp:predicate owl:onProperty ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Optional ;
              sp:elements (
                  [
                    sp:object [
                        sp:varName "plx"^^xsd:string ;
                      ] ;
                    sp:predicate rdfs:label ;
                    sp:subject [
                        sp:varName "p"^^xsd:string ;
                      ] ;
                  ]
                ) ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:coalesce ;
                  sp:arg1 [
                      sp:varName "plx"^^xsd:string ;
                    ] ;
                  sp:arg2 "unlabelled property" ;
                ] ;
              sp:variable [
                  sp:varName "pl"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:predicate owl:onClass ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type owlnames:rlabel ;
                  arg:a1 [
                      sp:varName "rc"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "rclx"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:coalesce ;
                  sp:arg1 [
                      sp:varName "rclx"^^xsd:string ;
                    ] ;
                  sp:arg2 "unlabelled class" ;
                ] ;
              sp:variable [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "card"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "cop"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "cop"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:minCardinality ;
                  sp:arg3 owl:maxCardinality ;
                  sp:arg4 owl:cardinality ;
                  sp:arg5 owl:minQualifiedCardinality ;
                  sp:arg6 owl:maxQualifiedCardinality ;
                  sp:arg7 owl:qualifiedCardinality ;
                ] ;
            ]
            [
              rdf:type sp:Optional ;
              sp:elements (
                  [
                    sp:object [
                        sp:varName "oplpx"^^xsd:string ;
                      ] ;
                    sp:predicate owlnames:ntemplate ;
                    sp:subject [
                        sp:varName "cop"^^xsd:string ;
                      ] ;
                  ]
                ) ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:coalesce ;
                  sp:arg1 [
                      sp:varName "oplpx"^^xsd:string ;
                    ] ;
                  sp:arg2 "some card" ;
                ] ;
              sp:variable [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Optional ;
              sp:elements (
                  [
                    sp:object [
                        sp:varName "oplcx"^^xsd:string ;
                      ] ;
                    sp:predicate owlnames:clabel ;
                    sp:subject [
                        sp:varName "cop"^^xsd:string ;
                      ] ;
                  ]
                ) ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:coalesce ;
                  sp:arg1 [
                      sp:varName "oplcx"^^xsd:string ;
                    ] ;
                  sp:arg2 "some card" ;
                ] ;
              sp:variable [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplc"^^xsd:string ;
                ] ;
              sp:predicate owlnames:clabel ;
              sp:subject [
                  sp:varName "cop"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 [
                      sp:varName "oplc"^^xsd:string ;
                    ] ;
                  sp:arg3 [
                      sp:varName "oplp"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "s"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "card"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill2"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill3"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:replace ;
                  sp:arg1 [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          rdf:type sp:replace ;
                          sp:arg1 [
                              sp:varName "s"^^xsd:string ;
                            ] ;
                          sp:arg2 "\\{\\?1}" ;
                          sp:arg3 [
                              sp:varName "fill1"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 "\\{\\?2}" ;
                      sp:arg3 [
                          sp:varName "fill2"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 "\\{\\?3" ;
                  sp:arg3 [
                      sp:varName "fill3"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l5"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Bind ;
        sp:expression [
            rdf:type sp:coalesce ;
            sp:arg1 [
                sp:varName "l1"^^xsd:string ;
              ] ;
            sp:arg2 [
                sp:varName "l2"^^xsd:string ;
              ] ;
            sp:arg3 [
                sp:varName "l3"^^xsd:string ;
              ] ;
            sp:arg4 [
                sp:varName "l4"^^xsd:string ;
              ] ;
            sp:arg5 [
                sp:varName "l5"^^xsd:string ;
              ] ;
            sp:arg6 [
                rdf:type sp:concat ;
                sp:arg1 "NONE" ;
                sp:arg2 [
                    rdf:type sp:str ;
                    sp:arg1 [
                        sp:varName "cop"^^xsd:string ;
                      ] ;
                  ] ;
              ] ;
            sp:arg7 "NO ARG" ;
          ] ;
        sp:variable [
            sp:varName "result"^^xsd:string ;
          ] ;
      ]
    ) ;
].
[
  rdf:type sp:Select ;
  sp:resultVariables (
      [
        sp:varName "result"^^xsd:string ;
      ]
    ) ;
  sp:text """PREFIX  metadata: <http://topbraid.org/metadata#>
PREFIX  skostemplate: <http://topbraid.org/spin/skostemplates#>
PREFIX  tagger: <http://evn.topbraidlive.org/tagger#>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  tops: <http://www.topbraid.org/tops#>
PREFIX  swaclasses: <http://topbraid.org/swaclasses#>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  spif: <http://spinrdf.org/spif#>
PREFIX  crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#>
PREFIX  tables: <http://topbraid.org/tables#>
PREFIX  ui:   <http://uispin.org/ui#>
PREFIX  composite: <http://www.topbraid.org/2007/05/composite.owl#>
PREFIX  swaeditor: <http://topbraid.org/swaeditor#>
PREFIX  sm2wsdl: <http://topbraid.org/sparqlmotion/sm2wsdl.sms#>
PREFIX  html: <http://uispin.org/html#>
PREFIX  let:  <http://uispin.org/let#>
PREFIX  shaclify: <http://topbraid.org/shacl/shaclify#>
PREFIX  spinmapl: <http://topbraid.org/spin/spinmapl#>
PREFIX  tasks: <http://topbraid.org/tasks#>
PREFIX  skosspin: <http://topbraid.org/spin/skosspin#>
PREFIX  discoverytool: <http://www.epa.gov/discoverytool#>
PREFIX  tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#>
PREFIX  qudtspin: <http://qudt.org/spin/qudtspin#>
PREFIX  spl:  <http://spinrdf.org/spl#>
PREFIX  jfn:  <java:com.hp.hpl.jena.sparql.function.library.>
PREFIX  spr:  <http://spinrdf.org/spr#>
PREFIX  taxonomies: <http://evn.topbraidlive.org/evnprojects#>
PREFIX  tbi:  <http://tbi.topbraid.org/tbi#>
PREFIX  letrs: <http://uispin.org/letrs#>
PREFIX  connectset-templates: <http://tbi.topbraidlive.org/system/connectset-templates#>
PREFIX  fn:   <http://www.w3.org/2005/xpath-functions#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  sharepoint: <http://topbraid.org/sharepoint#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  smf:  <http://topbraid.org/sparqlmotionfunctions#>
PREFIX  swauml: <http://topbraid.org/swauml#>
PREFIX  evnconstraints: <http://topbraid.org/spin/evnconstraints#>
PREFIX  sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#>
PREFIX  backspin: <http://topbraid.org/backspin#>
PREFIX  tablesmap: <http://topbraid.org/spin/tablesmap#>
PREFIX  search: <http://topbraid.org/search#>
PREFIX  default: <http://uispin.org/default#>
PREFIX  sml:  <http://topbraid.org/sparqlmotionlib#>
PREFIX  crosswalk: <http://topbraid.org/crosswalk#>
PREFIX  dct:  <http://purl.org/dc/terms/>
PREFIX  arg:  <http://spinrdf.org/arg#>
PREFIX  json: <http://topbraid.org/json#>
PREFIX  sm:   <http://topbraid.org/sparqlmotion#>
PREFIX  spinmap: <http://spinrdf.org/spinmap#>
PREFIX  sp:   <http://spinrdf.org/sp#>
PREFIX  email: <http://topbraid.org/email#>
PREFIX  raci: <http://topbraid.org/raci#>
PREFIX  uix:  <http://topbraidlive.org/uix#>
PREFIX  afn:  <http://jena.hpl.hp.com/ARQ/function#>
PREFIX  unnamed: <http://sc.workingontologist.com/unnamed#>
PREFIX  owlnames: <http://spec.edmcouncil.org/owlnames#>
PREFIX  owlrl: <http://topbraid.org/spin/owlrl#>
PREFIX  daml: <http://www.daml.org/2001/03/daml+oil#>
PREFIX  sxml: <http://topbraid.org/sxml#>
PREFIX  teamwork: <http://topbraid.org/teamwork#>
PREFIX  swon: <http://uispin.org/swon#>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  pf:   <http://jena.hpl.hp.com/ARQ/property#>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  evnui: <http://evn.topbraidlive.org/ui#>
PREFIX  spra: <http://spinrdf.org/spra#>
PREFIX  swa:  <http://topbraid.org/swa#>

SELECT  ?result
WHERE
  { OPTIONAL
      { ?a1 rdfs:label ?l1 }
    OPTIONAL
      { ?a1 rdf:type owl:Restriction .
        ?a1 owl:onProperty ?p .
        ?p rdfs:label ?pl .
        ?a1 (owl:someValuesFrom|owl:allValuesFrom)|owl:hasValue ?rc .
        ?a1 ?op ?rc
        BIND(owlnames:rlabel(?rc) AS ?rcl)
        FILTER ( ?op IN (owl:someValuesFrom, owl:allValuesFrom, owl:hasValue) )
        ?op owlnames:ntemplate ?oplp .
        ?op owlnames:clabel ?oplc
        BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?opl)
        BIND(concat(?pl, \" \", ?opl, \" \", ?rcl) AS ?lx)
        BIND(replace(replace(?opl, \"\\\\{\\\\?1}\", ?pl), \"\\\\{\\\\?2}\", ?rcl) AS ?l2)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Class .
        ?a1 ?oc ?b
        FILTER ( ?oc IN (owl:intersectionOf, owl:unionOf) )
        ?b rdf:first ?car .
        ?b rdf:rest ?cdr .
        ?oc owlnames:ntemplate ?opl
        BIND(concat(owlnames:rlabel(?cdr), \" \", ?opl, \" \", owlnames:rlabel(?car)) AS ?l3)
      }
    OPTIONAL
      { FILTER isBlank(?a1)
        ?a1 rdf:first ?car .
        ?a1 rdf:rest ?cdr
        BIND(if(( ?cdr = rdf:nil ), owlnames:rlabel(?car), concat(owlnames:rlabel(?car), \", \", owlnames:rlabel(?cdr))) AS ?l4)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Restriction .
        ?a1 owl:onProperty ?p .
        ?p rdfs:label ?pl .
        ?a1 owl:onClass ?rc
        LET (?rcl := owlnames:rlabel(?rc))
        ?a1 ?cop ?card
        FILTER ( ?cop IN (owl:minCardinality, owl:maxCardinality, owl:cardinality, owl:minQualifiedCardinality, owl:maxQualifiedCardinality, owl:qualifiedCardinality) )
        ?cop owlnames:ntemplate ?oplp .
        ?cop owlnames:clabel ?oplc
        BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?s)
        BIND(?pl AS ?fill1)
        BIND(?card AS ?fill2)
        BIND(?rcl AS ?fill3)
        BIND(replace(replace(replace(?s, \"\\\\{\\\\?1}\", ?fill1), \"\\\\{\\\\?2}\", ?fill2), \"\\\\{\\\\?3\", ?fill3) AS ?l5)
      }
    BIND(coalesce(?l1, ?l2, ?l3, ?l4, ?l5, concat(\"NONE\", str(?a1)), \"NO ARG\") AS ?result)
  }
"""^^xsd:string ;
  sp:where (
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object [
                  sp:varName "l1"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Restriction ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "p"^^xsd:string ;
                ] ;
              sp:predicate owl:onProperty ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "p"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:TriplePath ;
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:path [
                  rdf:type sp:AltPath ;
                  sp:path1 [
                      rdf:type sp:AltPath ;
                      sp:path1 owl:someValuesFrom ;
                      sp:path2 owl:allValuesFrom ;
                    ] ;
                  sp:path2 owl:hasValue ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "op"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type owlnames:rlabel ;
                  arg:a1 [
                      sp:varName "rc"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "op"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:someValuesFrom ;
                  sp:arg3 owl:allValuesFrom ;
                  sp:arg4 owl:hasValue ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "op"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplc"^^xsd:string ;
                ] ;
              sp:predicate owlnames:clabel ;
              sp:subject [
                  sp:varName "op"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 [
                      sp:varName "oplc"^^xsd:string ;
                    ] ;
                  sp:arg3 [
                      sp:varName "oplp"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "opl"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:concat ;
                  sp:arg1 [
                      sp:varName "pl"^^xsd:string ;
                    ] ;
                  sp:arg2 " " ;
                  sp:arg3 [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:arg4 " " ;
                  sp:arg5 [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "lx"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:replace ;
                  sp:arg1 [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          sp:varName "opl"^^xsd:string ;
                        ] ;
                      sp:arg2 "\\{\\?1}" ;
                      sp:arg3 [
                          sp:varName "pl"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 "\\{\\?2}" ;
                  sp:arg3 [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l2"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Class ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "b"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "oc"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "oc"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:intersectionOf ;
                  sp:arg3 owl:unionOf ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "car"^^xsd:string ;
                ] ;
              sp:predicate rdf:first ;
              sp:subject [
                  sp:varName "b"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "cdr"^^xsd:string ;
                ] ;
              sp:predicate rdf:rest ;
              sp:subject [
                  sp:varName "b"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "opl"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "oc"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:concat ;
                  sp:arg1 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "cdr"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 " " ;
                  sp:arg3 [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:arg4 " " ;
                  sp:arg5 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "car"^^xsd:string ;
                        ] ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l3"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:isBlank ;
                  sp:arg1 [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "car"^^xsd:string ;
                ] ;
              sp:predicate rdf:first ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "cdr"^^xsd:string ;
                ] ;
              sp:predicate rdf:rest ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:eq ;
                      sp:arg1 [
                          sp:varName "cdr"^^xsd:string ;
                        ] ;
                      sp:arg2 () ;
                    ] ;
                  sp:arg2 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "car"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg3 [
                      rdf:type sp:concat ;
                      sp:arg1 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "car"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 ", " ;
                      sp:arg3 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "cdr"^^xsd:string ;
                            ] ;
                        ] ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l4"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Restriction ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "p"^^xsd:string ;
                ] ;
              sp:predicate owl:onProperty ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "p"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:predicate owl:onClass ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type owlnames:rlabel ;
                  arg:a1 [
                      sp:varName "rc"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "card"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "cop"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "cop"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:minCardinality ;
                  sp:arg3 owl:maxCardinality ;
                  sp:arg4 owl:cardinality ;
                  sp:arg5 owl:minQualifiedCardinality ;
                  sp:arg6 owl:maxQualifiedCardinality ;
                  sp:arg7 owl:qualifiedCardinality ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "cop"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplc"^^xsd:string ;
                ] ;
              sp:predicate owlnames:clabel ;
              sp:subject [
                  sp:varName "cop"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 [
                      sp:varName "oplc"^^xsd:string ;
                    ] ;
                  sp:arg3 [
                      sp:varName "oplp"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "s"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "card"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill2"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill3"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:replace ;
                  sp:arg1 [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          rdf:type sp:replace ;
                          sp:arg1 [
                              sp:varName "s"^^xsd:string ;
                            ] ;
                          sp:arg2 "\\{\\?1}" ;
                          sp:arg3 [
                              sp:varName "fill1"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 "\\{\\?2}" ;
                      sp:arg3 [
                          sp:varName "fill2"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 "\\{\\?3" ;
                  sp:arg3 [
                      sp:varName "fill3"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l5"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Bind ;
        sp:expression [
            rdf:type sp:coalesce ;
            sp:arg1 [
                sp:varName "l1"^^xsd:string ;
              ] ;
            sp:arg2 [
                sp:varName "l2"^^xsd:string ;
              ] ;
            sp:arg3 [
                sp:varName "l3"^^xsd:string ;
              ] ;
            sp:arg4 [
                sp:varName "l4"^^xsd:string ;
              ] ;
            sp:arg5 [
                sp:varName "l5"^^xsd:string ;
              ] ;
            sp:arg6 [
                rdf:type sp:concat ;
                sp:arg1 "NONE" ;
                sp:arg2 [
                    rdf:type sp:str ;
                    sp:arg1 [
                        sp:varName "a1"^^xsd:string ;
                      ] ;
                  ] ;
              ] ;
            sp:arg7 "NO ARG" ;
          ] ;
        sp:variable [
            sp:varName "result"^^xsd:string ;
          ] ;
      ]
    ) ;
].
[
  rdf:type sp:Select ;
  sp:resultVariables (
      [
        sp:varName "result"^^xsd:string ;
      ]
    ) ;
  sp:text """PREFIX  metadata: <http://topbraid.org/metadata#>
PREFIX  skostemplate: <http://topbraid.org/spin/skostemplates#>
PREFIX  tagger: <http://evn.topbraidlive.org/tagger#>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  tops: <http://www.topbraid.org/tops#>
PREFIX  swaclasses: <http://topbraid.org/swaclasses#>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  spif: <http://spinrdf.org/spif#>
PREFIX  crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#>
PREFIX  tables: <http://topbraid.org/tables#>
PREFIX  ui:   <http://uispin.org/ui#>
PREFIX  composite: <http://www.topbraid.org/2007/05/composite.owl#>
PREFIX  swaeditor: <http://topbraid.org/swaeditor#>
PREFIX  sm2wsdl: <http://topbraid.org/sparqlmotion/sm2wsdl.sms#>
PREFIX  html: <http://uispin.org/html#>
PREFIX  let:  <http://uispin.org/let#>
PREFIX  shaclify: <http://topbraid.org/shacl/shaclify#>
PREFIX  spinmapl: <http://topbraid.org/spin/spinmapl#>
PREFIX  tasks: <http://topbraid.org/tasks#>
PREFIX  skosspin: <http://topbraid.org/spin/skosspin#>
PREFIX  discoverytool: <http://www.epa.gov/discoverytool#>
PREFIX  tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#>
PREFIX  qudtspin: <http://qudt.org/spin/qudtspin#>
PREFIX  spl:  <http://spinrdf.org/spl#>
PREFIX  jfn:  <java:com.hp.hpl.jena.sparql.function.library.>
PREFIX  spr:  <http://spinrdf.org/spr#>
PREFIX  taxonomies: <http://evn.topbraidlive.org/evnprojects#>
PREFIX  tbi:  <http://tbi.topbraid.org/tbi#>
PREFIX  letrs: <http://uispin.org/letrs#>
PREFIX  connectset-templates: <http://tbi.topbraidlive.org/system/connectset-templates#>
PREFIX  fn:   <http://www.w3.org/2005/xpath-functions#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  sharepoint: <http://topbraid.org/sharepoint#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  smf:  <http://topbraid.org/sparqlmotionfunctions#>
PREFIX  swauml: <http://topbraid.org/swauml#>
PREFIX  evnconstraints: <http://topbraid.org/spin/evnconstraints#>
PREFIX  sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#>
PREFIX  backspin: <http://topbraid.org/backspin#>
PREFIX  tablesmap: <http://topbraid.org/spin/tablesmap#>
PREFIX  search: <http://topbraid.org/search#>
PREFIX  default: <http://uispin.org/default#>
PREFIX  sml:  <http://topbraid.org/sparqlmotionlib#>
PREFIX  crosswalk: <http://topbraid.org/crosswalk#>
PREFIX  dct:  <http://purl.org/dc/terms/>
PREFIX  arg:  <http://spinrdf.org/arg#>
PREFIX  json: <http://topbraid.org/json#>
PREFIX  sm:   <http://topbraid.org/sparqlmotion#>
PREFIX  spinmap: <http://spinrdf.org/spinmap#>
PREFIX  sp:   <http://spinrdf.org/sp#>
PREFIX  email: <http://topbraid.org/email#>
PREFIX  raci: <http://topbraid.org/raci#>
PREFIX  uix:  <http://topbraidlive.org/uix#>
PREFIX  afn:  <http://jena.hpl.hp.com/ARQ/function#>
PREFIX  unnamed: <http://sc.workingontologist.com/unnamed#>
PREFIX  owlnames: <http://spec.edmcouncil.org/owlnames#>
PREFIX  owlrl: <http://topbraid.org/spin/owlrl#>
PREFIX  daml: <http://www.daml.org/2001/03/daml+oil#>
PREFIX  sxml: <http://topbraid.org/sxml#>
PREFIX  teamwork: <http://topbraid.org/teamwork#>
PREFIX  swon: <http://uispin.org/swon#>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  pf:   <http://jena.hpl.hp.com/ARQ/property#>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  evnui: <http://evn.topbraidlive.org/ui#>
PREFIX  spra: <http://spinrdf.org/spra#>
PREFIX  swa:  <http://topbraid.org/swa#>

SELECT  ?result
WHERE
  { OPTIONAL
      { ?a1 rdfs:label ?l1 }
    OPTIONAL
      { ?a1 rdf:type owl:Restriction .
        ?a1 owl:onProperty ?p .
        ?p rdfs:label ?pl .
        ?a1 (owl:someValuesFrom|owl:allValuesFrom)|owl:hasValue ?rc .
        ?a1 ?op ?rc
        BIND(owlnames:rlabel(?rc) AS ?rcl)
        FILTER ( ?op IN (owl:someValuesFrom, owl:allValuesFrom, owl:hasValue) )
        ?op owlnames:ntemplate ?oplp .
        ?op owlnames:clabel ?oplc
        BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?opl)
        BIND(concat(?pl, \" \", ?opl, \" \", ?rcl) AS ?lx)
        BIND(replace(replace(?opl, \"\\\\{\\\\?1}\", ?pl), \"\\\\{\\\\?2}\", ?rcl) AS ?l2)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Class .
        ?a1 ?oc ?b
        FILTER ( ?oc IN (owl:intersectionOf, owl:unionOf) )
        ?b rdf:first ?car .
        ?b rdf:rest ?cdr .
        ?oc owlnames:ntemplate ?opl
        BIND(concat(owlnames:rlabel(?cdr), \" \", ?opl, \" \", owlnames:rlabel(?car)) AS ?l3)
      }
    OPTIONAL
      { FILTER isBlank(?a1)
        ?a1 rdf:first ?car .
        ?a1 rdf:rest ?cdr
        BIND(if(( ?cdr = rdf:nil ), owlnames:rlabel(?car), concat(owlnames:rlabel(?car), \", \", owlnames:rlabel(?cdr))) AS ?l4)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Restriction .
        ?a1 owl:onProperty ?p .
        ?p rdfs:label ?pl .
        ?a1 owl:onClass ?rc
        LET (?rcl := owlnames:rlabel(?rc))
        ?a1 ?cop ?card
        FILTER ( ?cop IN (owl:minCardinality, owl:maxCardinality, owl:cardinality, owl:minQualifiedCardinality, owl:maxQualifiedCardinality, owl:qualifiedCardinality) )
        ?cop owlnames:ntemplate ?oplp .
        ?cop owlnames:clabel ?oplc
        BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?s)
        BIND(?pl AS ?fill1)
        BIND(?card AS ?fill2)
        BIND(?rcl AS ?fill3)
        BIND(replace(replace(replace(?s, \"\\\\{\\\\?1}\", ?fill1), \"\\\\{\\\\?2}\", ?fill2), \"\\\\{\\\\?3\", ?fill3) AS ?l5)
      }
    BIND(coalesce(?l1, ?l2, ?l3, ?l4, ?l5, concat(\"NONE\", str(?a1)), \"NO ARG\") AS ?result)
  }
"""^^xsd:string ;
  sp:where (
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object [
                  sp:varName "l1"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Restriction ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "p"^^xsd:string ;
                ] ;
              sp:predicate owl:onProperty ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "p"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:TriplePath ;
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:path [
                  rdf:type sp:AltPath ;
                  sp:path1 [
                      rdf:type sp:AltPath ;
                      sp:path1 owl:someValuesFrom ;
                      sp:path2 owl:allValuesFrom ;
                    ] ;
                  sp:path2 owl:hasValue ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "op"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type owlnames:rlabel ;
                  arg:a1 [
                      sp:varName "rc"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "op"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:someValuesFrom ;
                  sp:arg3 owl:allValuesFrom ;
                  sp:arg4 owl:hasValue ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "op"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplc"^^xsd:string ;
                ] ;
              sp:predicate owlnames:clabel ;
              sp:subject [
                  sp:varName "op"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 [
                      sp:varName "oplc"^^xsd:string ;
                    ] ;
                  sp:arg3 [
                      sp:varName "oplp"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "opl"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:concat ;
                  sp:arg1 [
                      sp:varName "pl"^^xsd:string ;
                    ] ;
                  sp:arg2 " " ;
                  sp:arg3 [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:arg4 " " ;
                  sp:arg5 [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "lx"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:replace ;
                  sp:arg1 [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          sp:varName "opl"^^xsd:string ;
                        ] ;
                      sp:arg2 "\\{\\?1}" ;
                      sp:arg3 [
                          sp:varName "pl"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 "\\{\\?2}" ;
                  sp:arg3 [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l2"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Class ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "b"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "oc"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "oc"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:intersectionOf ;
                  sp:arg3 owl:unionOf ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "car"^^xsd:string ;
                ] ;
              sp:predicate rdf:first ;
              sp:subject [
                  sp:varName "b"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "cdr"^^xsd:string ;
                ] ;
              sp:predicate rdf:rest ;
              sp:subject [
                  sp:varName "b"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "opl"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "oc"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:concat ;
                  sp:arg1 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "cdr"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 " " ;
                  sp:arg3 [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:arg4 " " ;
                  sp:arg5 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "car"^^xsd:string ;
                        ] ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l3"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:isBlank ;
                  sp:arg1 [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "car"^^xsd:string ;
                ] ;
              sp:predicate rdf:first ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "cdr"^^xsd:string ;
                ] ;
              sp:predicate rdf:rest ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:eq ;
                      sp:arg1 [
                          sp:varName "cdr"^^xsd:string ;
                        ] ;
                      sp:arg2 () ;
                    ] ;
                  sp:arg2 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "car"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg3 [
                      rdf:type sp:concat ;
                      sp:arg1 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "car"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 ", " ;
                      sp:arg3 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "cdr"^^xsd:string ;
                            ] ;
                        ] ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l4"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Restriction ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "p"^^xsd:string ;
                ] ;
              sp:predicate owl:onProperty ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "p"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:predicate owl:onClass ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type owlnames:rlabel ;
                  arg:a1 [
                      sp:varName "rc"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "card"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "cop"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "cop"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:minCardinality ;
                  sp:arg3 owl:maxCardinality ;
                  sp:arg4 owl:cardinality ;
                  sp:arg5 owl:minQualifiedCardinality ;
                  sp:arg6 owl:maxQualifiedCardinality ;
                  sp:arg7 owl:qualifiedCardinality ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "cop"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplc"^^xsd:string ;
                ] ;
              sp:predicate owlnames:clabel ;
              sp:subject [
                  sp:varName "cop"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 [
                      sp:varName "oplc"^^xsd:string ;
                    ] ;
                  sp:arg3 [
                      sp:varName "oplp"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "s"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "card"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill2"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill3"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:replace ;
                  sp:arg1 [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          rdf:type sp:replace ;
                          sp:arg1 [
                              sp:varName "s"^^xsd:string ;
                            ] ;
                          sp:arg2 "\\{\\?1}" ;
                          sp:arg3 [
                              sp:varName "fill1"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 "\\{\\?2}" ;
                      sp:arg3 [
                          sp:varName "fill2"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 "\\{\\?3" ;
                  sp:arg3 [
                      sp:varName "fill3"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l5"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Bind ;
        sp:expression [
            rdf:type sp:coalesce ;
            sp:arg1 [
                sp:varName "l1"^^xsd:string ;
              ] ;
            sp:arg2 [
                sp:varName "l2"^^xsd:string ;
              ] ;
            sp:arg3 [
                sp:varName "l3"^^xsd:string ;
              ] ;
            sp:arg4 [
                sp:varName "l4"^^xsd:string ;
              ] ;
            sp:arg5 [
                sp:varName "l5"^^xsd:string ;
              ] ;
            sp:arg6 [
                rdf:type sp:concat ;
                sp:arg1 "NONE" ;
                sp:arg2 [
                    rdf:type sp:str ;
                    sp:arg1 [
                        sp:varName "a1"^^xsd:string ;
                      ] ;
                  ] ;
              ] ;
            sp:arg7 "NO ARG" ;
          ] ;
        sp:variable [
            sp:varName "result"^^xsd:string ;
          ] ;
      ]
    ) ;
].
[
  rdf:type sp:Select ;
  sp:resultVariables (
      [
        sp:varName "result"^^xsd:string ;
      ]
    ) ;
  sp:text """PREFIX  metadata: <http://topbraid.org/metadata#>
PREFIX  skostemplate: <http://topbraid.org/spin/skostemplates#>
PREFIX  tagger: <http://evn.topbraidlive.org/tagger#>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  tops: <http://www.topbraid.org/tops#>
PREFIX  swaclasses: <http://topbraid.org/swaclasses#>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  spif: <http://spinrdf.org/spif#>
PREFIX  crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#>
PREFIX  tables: <http://topbraid.org/tables#>
PREFIX  ui:   <http://uispin.org/ui#>
PREFIX  composite: <http://www.topbraid.org/2007/05/composite.owl#>
PREFIX  swaeditor: <http://topbraid.org/swaeditor#>
PREFIX  sm2wsdl: <http://topbraid.org/sparqlmotion/sm2wsdl.sms#>
PREFIX  html: <http://uispin.org/html#>
PREFIX  let:  <http://uispin.org/let#>
PREFIX  shaclify: <http://topbraid.org/shacl/shaclify#>
PREFIX  spinmapl: <http://topbraid.org/spin/spinmapl#>
PREFIX  tasks: <http://topbraid.org/tasks#>
PREFIX  skosspin: <http://topbraid.org/spin/skosspin#>
PREFIX  discoverytool: <http://www.epa.gov/discoverytool#>
PREFIX  tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#>
PREFIX  qudtspin: <http://qudt.org/spin/qudtspin#>
PREFIX  spl:  <http://spinrdf.org/spl#>
PREFIX  jfn:  <java:com.hp.hpl.jena.sparql.function.library.>
PREFIX  spr:  <http://spinrdf.org/spr#>
PREFIX  taxonomies: <http://evn.topbraidlive.org/evnprojects#>
PREFIX  tbi:  <http://tbi.topbraid.org/tbi#>
PREFIX  letrs: <http://uispin.org/letrs#>
PREFIX  connectset-templates: <http://tbi.topbraidlive.org/system/connectset-templates#>
PREFIX  fn:   <http://www.w3.org/2005/xpath-functions#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  sharepoint: <http://topbraid.org/sharepoint#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  smf:  <http://topbraid.org/sparqlmotionfunctions#>
PREFIX  swauml: <http://topbraid.org/swauml#>
PREFIX  evnconstraints: <http://topbraid.org/spin/evnconstraints#>
PREFIX  sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#>
PREFIX  backspin: <http://topbraid.org/backspin#>
PREFIX  tablesmap: <http://topbraid.org/spin/tablesmap#>
PREFIX  search: <http://topbraid.org/search#>
PREFIX  default: <http://uispin.org/default#>
PREFIX  sml:  <http://topbraid.org/sparqlmotionlib#>
PREFIX  crosswalk: <http://topbraid.org/crosswalk#>
PREFIX  dct:  <http://purl.org/dc/terms/>
PREFIX  arg:  <http://spinrdf.org/arg#>
PREFIX  json: <http://topbraid.org/json#>
PREFIX  sm:   <http://topbraid.org/sparqlmotion#>
PREFIX  spinmap: <http://spinrdf.org/spinmap#>
PREFIX  sp:   <http://spinrdf.org/sp#>
PREFIX  email: <http://topbraid.org/email#>
PREFIX  raci: <http://topbraid.org/raci#>
PREFIX  uix:  <http://topbraidlive.org/uix#>
PREFIX  afn:  <http://jena.hpl.hp.com/ARQ/function#>
PREFIX  unnamed: <http://sc.workingontologist.com/unnamed#>
PREFIX  owlnames: <http://spec.edmcouncil.org/owlnames#>
PREFIX  owlrl: <http://topbraid.org/spin/owlrl#>
PREFIX  daml: <http://www.daml.org/2001/03/daml+oil#>
PREFIX  sxml: <http://topbraid.org/sxml#>
PREFIX  teamwork: <http://topbraid.org/teamwork#>
PREFIX  swon: <http://uispin.org/swon#>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  pf:   <http://jena.hpl.hp.com/ARQ/property#>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  evnui: <http://evn.topbraidlive.org/ui#>
PREFIX  spra: <http://spinrdf.org/spra#>
PREFIX  swa:  <http://topbraid.org/swa#>

SELECT  ?result
WHERE
  { OPTIONAL
      { ?a1 rdfs:label ?l1 }
    OPTIONAL
      { ?a1 rdf:type owl:Restriction .
        ?a1 owl:onProperty ?p .
        ?p rdfs:label ?pl .
        ?a1 (owl:someValuesFrom|owl:allValuesFrom)|owl:hasValue ?rc .
        ?a1 ?op ?rc
        BIND(owlnames:rlabel(?rc) AS ?rcl)
        FILTER ( ?op IN (owl:someValuesFrom, owl:allValuesFrom, owl:hasValue) )
        ?op owlnames:ntemplate ?oplp .
        ?op owlnames:clabel ?oplc
        BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?opl)
        BIND(concat(?pl, \" \", ?opl, \" \", ?rcl) AS ?lx)
        BIND(replace(replace(?opl, \"\\\\{\\\\?1}\", ?pl), \"\\\\{\\\\?2}\", ?rcl) AS ?l2)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Class .
        ?a1 ?oc ?b
        FILTER ( ?oc IN (owl:intersectionOf, owl:unionOf) )
        ?b rdf:first ?car .
        ?b rdf:rest ?cdr .
        ?oc owlnames:ntemplate ?opl
        BIND(concat(owlnames:rlabel(?cdr), \" \", ?opl, \" \", owlnames:rlabel(?car)) AS ?l3)
      }
    OPTIONAL
      { FILTER isBlank(?a1)
        ?a1 rdf:first ?car .
        ?a1 rdf:rest ?cdr
        BIND(if(( ?cdr = rdf:nil ), owlnames:rlabel(?car), concat(owlnames:rlabel(?car), \", \", owlnames:rlabel(?cdr))) AS ?l4)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Restriction .
        ?a1 owl:onProperty ?p .
        ?p rdfs:label ?pl .
        ?a1 owl:onClass ?rc
        LET (?rcl := owlnames:rlabel(?rc))
        ?a1 ?cop ?card
        FILTER ( ?cop IN (owl:minCardinality, owl:maxCardinality, owl:cardinality, owl:minQualifiedCardinality, owl:maxQualifiedCardinality, owl:qualifiedCardinality) )
        ?cop owlnames:ntemplate ?oplp .
        ?cop owlnames:clabel ?oplc
        BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?s)
        BIND(?pl AS ?fill1)
        BIND(?card AS ?fill2)
        BIND(?rcl AS ?fill3)
        BIND(replace(replace(replace(?s, \"\\\\{\\\\?1}\", ?fill1), \"\\\\{\\\\?2}\", ?fill2), \"\\\\{\\\\?3\", ?fill3) AS ?l5)
      }
    BIND(coalesce(?l1, ?l2, ?l3, ?l4, ?l5, concat(\"NONE\", str(?a1)), \"NO ARG\") AS ?result)
  }
"""^^xsd:string ;
  sp:where (
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object [
                  sp:varName "l1"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Restriction ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "p"^^xsd:string ;
                ] ;
              sp:predicate owl:onProperty ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "p"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:TriplePath ;
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:path [
                  rdf:type sp:AltPath ;
                  sp:path1 [
                      rdf:type sp:AltPath ;
                      sp:path1 owl:someValuesFrom ;
                      sp:path2 owl:allValuesFrom ;
                    ] ;
                  sp:path2 owl:hasValue ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "op"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type owlnames:rlabel ;
                  arg:a1 [
                      sp:varName "rc"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "op"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:someValuesFrom ;
                  sp:arg3 owl:allValuesFrom ;
                  sp:arg4 owl:hasValue ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "op"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplc"^^xsd:string ;
                ] ;
              sp:predicate owlnames:clabel ;
              sp:subject [
                  sp:varName "op"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 [
                      sp:varName "oplc"^^xsd:string ;
                    ] ;
                  sp:arg3 [
                      sp:varName "oplp"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "opl"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:concat ;
                  sp:arg1 [
                      sp:varName "pl"^^xsd:string ;
                    ] ;
                  sp:arg2 " " ;
                  sp:arg3 [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:arg4 " " ;
                  sp:arg5 [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "lx"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:replace ;
                  sp:arg1 [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          sp:varName "opl"^^xsd:string ;
                        ] ;
                      sp:arg2 "\\{\\?1}" ;
                      sp:arg3 [
                          sp:varName "pl"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 "\\{\\?2}" ;
                  sp:arg3 [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l2"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Class ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "b"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "oc"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "oc"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:intersectionOf ;
                  sp:arg3 owl:unionOf ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "car"^^xsd:string ;
                ] ;
              sp:predicate rdf:first ;
              sp:subject [
                  sp:varName "b"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "cdr"^^xsd:string ;
                ] ;
              sp:predicate rdf:rest ;
              sp:subject [
                  sp:varName "b"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "opl"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "oc"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:concat ;
                  sp:arg1 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "cdr"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 " " ;
                  sp:arg3 [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:arg4 " " ;
                  sp:arg5 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "car"^^xsd:string ;
                        ] ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l3"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:isBlank ;
                  sp:arg1 [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "car"^^xsd:string ;
                ] ;
              sp:predicate rdf:first ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "cdr"^^xsd:string ;
                ] ;
              sp:predicate rdf:rest ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:eq ;
                      sp:arg1 [
                          sp:varName "cdr"^^xsd:string ;
                        ] ;
                      sp:arg2 () ;
                    ] ;
                  sp:arg2 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "car"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg3 [
                      rdf:type sp:concat ;
                      sp:arg1 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "car"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 ", " ;
                      sp:arg3 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "cdr"^^xsd:string ;
                            ] ;
                        ] ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l4"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Restriction ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "p"^^xsd:string ;
                ] ;
              sp:predicate owl:onProperty ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "p"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:predicate owl:onClass ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type owlnames:rlabel ;
                  arg:a1 [
                      sp:varName "rc"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "card"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "cop"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "cop"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:minCardinality ;
                  sp:arg3 owl:maxCardinality ;
                  sp:arg4 owl:cardinality ;
                  sp:arg5 owl:minQualifiedCardinality ;
                  sp:arg6 owl:maxQualifiedCardinality ;
                  sp:arg7 owl:qualifiedCardinality ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "cop"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplc"^^xsd:string ;
                ] ;
              sp:predicate owlnames:clabel ;
              sp:subject [
                  sp:varName "cop"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 [
                      sp:varName "oplc"^^xsd:string ;
                    ] ;
                  sp:arg3 [
                      sp:varName "oplp"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "s"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "card"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill2"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill3"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:replace ;
                  sp:arg1 [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          rdf:type sp:replace ;
                          sp:arg1 [
                              sp:varName "s"^^xsd:string ;
                            ] ;
                          sp:arg2 "\\{\\?1}" ;
                          sp:arg3 [
                              sp:varName "fill1"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 "\\{\\?2}" ;
                      sp:arg3 [
                          sp:varName "fill2"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 "\\{\\?3" ;
                  sp:arg3 [
                      sp:varName "fill3"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l5"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Bind ;
        sp:expression [
            rdf:type sp:coalesce ;
            sp:arg1 [
                sp:varName "l1"^^xsd:string ;
              ] ;
            sp:arg2 [
                sp:varName "l2"^^xsd:string ;
              ] ;
            sp:arg3 [
                sp:varName "l3"^^xsd:string ;
              ] ;
            sp:arg4 [
                sp:varName "l4"^^xsd:string ;
              ] ;
            sp:arg5 [
                sp:varName "l5"^^xsd:string ;
              ] ;
            sp:arg6 [
                rdf:type sp:concat ;
                sp:arg1 "NONE" ;
                sp:arg2 [
                    rdf:type sp:str ;
                    sp:arg1 [
                        sp:varName "a1"^^xsd:string ;
                      ] ;
                  ] ;
              ] ;
            sp:arg7 "NO ARG" ;
          ] ;
        sp:variable [
            sp:varName "result"^^xsd:string ;
          ] ;
      ]
    ) ;
].
[
  rdf:type sp:Select ;
  sp:resultVariables (
      [
        sp:varName "result"^^xsd:string ;
      ]
    ) ;
  sp:text """PREFIX  metadata: <http://topbraid.org/metadata#>
PREFIX  skostemplate: <http://topbraid.org/spin/skostemplates#>
PREFIX  tagger: <http://evn.topbraidlive.org/tagger#>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  tops: <http://www.topbraid.org/tops#>
PREFIX  swaclasses: <http://topbraid.org/swaclasses#>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  spif: <http://spinrdf.org/spif#>
PREFIX  crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#>
PREFIX  tables: <http://topbraid.org/tables#>
PREFIX  ui:   <http://uispin.org/ui#>
PREFIX  composite: <http://www.topbraid.org/2007/05/composite.owl#>
PREFIX  swaeditor: <http://topbraid.org/swaeditor#>
PREFIX  sm2wsdl: <http://topbraid.org/sparqlmotion/sm2wsdl.sms#>
PREFIX  html: <http://uispin.org/html#>
PREFIX  let:  <http://uispin.org/let#>
PREFIX  shaclify: <http://topbraid.org/shacl/shaclify#>
PREFIX  spinmapl: <http://topbraid.org/spin/spinmapl#>
PREFIX  tasks: <http://topbraid.org/tasks#>
PREFIX  skosspin: <http://topbraid.org/spin/skosspin#>
PREFIX  discoverytool: <http://www.epa.gov/discoverytool#>
PREFIX  tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#>
PREFIX  qudtspin: <http://qudt.org/spin/qudtspin#>
PREFIX  spl:  <http://spinrdf.org/spl#>
PREFIX  jfn:  <java:com.hp.hpl.jena.sparql.function.library.>
PREFIX  spr:  <http://spinrdf.org/spr#>
PREFIX  taxonomies: <http://evn.topbraidlive.org/evnprojects#>
PREFIX  tbi:  <http://tbi.topbraid.org/tbi#>
PREFIX  letrs: <http://uispin.org/letrs#>
PREFIX  connectset-templates: <http://tbi.topbraidlive.org/system/connectset-templates#>
PREFIX  fn:   <http://www.w3.org/2005/xpath-functions#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  sharepoint: <http://topbraid.org/sharepoint#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  smf:  <http://topbraid.org/sparqlmotionfunctions#>
PREFIX  swauml: <http://topbraid.org/swauml#>
PREFIX  evnconstraints: <http://topbraid.org/spin/evnconstraints#>
PREFIX  sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#>
PREFIX  backspin: <http://topbraid.org/backspin#>
PREFIX  tablesmap: <http://topbraid.org/spin/tablesmap#>
PREFIX  search: <http://topbraid.org/search#>
PREFIX  default: <http://uispin.org/default#>
PREFIX  sml:  <http://topbraid.org/sparqlmotionlib#>
PREFIX  crosswalk: <http://topbraid.org/crosswalk#>
PREFIX  dct:  <http://purl.org/dc/terms/>
PREFIX  arg:  <http://spinrdf.org/arg#>
PREFIX  json: <http://topbraid.org/json#>
PREFIX  sm:   <http://topbraid.org/sparqlmotion#>
PREFIX  spinmap: <http://spinrdf.org/spinmap#>
PREFIX  sp:   <http://spinrdf.org/sp#>
PREFIX  email: <http://topbraid.org/email#>
PREFIX  raci: <http://topbraid.org/raci#>
PREFIX  uix:  <http://topbraidlive.org/uix#>
PREFIX  afn:  <http://jena.hpl.hp.com/ARQ/function#>
PREFIX  unnamed: <http://sc.workingontologist.com/unnamed#>
PREFIX  owlnames: <http://spec.edmcouncil.org/owlnames#>
PREFIX  owlrl: <http://topbraid.org/spin/owlrl#>
PREFIX  daml: <http://www.daml.org/2001/03/daml+oil#>
PREFIX  sxml: <http://topbraid.org/sxml#>
PREFIX  teamwork: <http://topbraid.org/teamwork#>
PREFIX  swon: <http://uispin.org/swon#>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  pf:   <http://jena.hpl.hp.com/ARQ/property#>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  evnui: <http://evn.topbraidlive.org/ui#>
PREFIX  spra: <http://spinrdf.org/spra#>
PREFIX  swa:  <http://topbraid.org/swa#>

SELECT  ?result
WHERE
  { OPTIONAL
      { ?a1 rdfs:label ?l1 }
    OPTIONAL
      { ?a1 rdf:type owl:Restriction .
        ?a1 owl:onProperty ?p .
        ?p rdfs:label ?pl .
        ?a1 (owl:someValuesFrom|owl:allValuesFrom)|owl:hasValue ?rc .
        ?a1 ?op ?rc
        BIND(owlnames:rlabel(?rc) AS ?rcl)
        FILTER ( ?op IN (owl:someValuesFrom, owl:allValuesFrom, owl:hasValue) )
        ?op owlnames:ntemplate ?oplp .
        ?op owlnames:clabel ?oplc
        BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?opl)
        BIND(concat(?pl, \" \", ?opl, \" \", ?rcl) AS ?lx)
        BIND(replace(replace(?opl, \"\\\\{\\\\?1}\", ?pl), \"\\\\{\\\\?2}\", ?rcl) AS ?l2)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Class .
        ?a1 ?oc ?b
        FILTER ( ?oc IN (owl:intersectionOf, owl:unionOf) )
        ?b rdf:first ?car .
        ?b rdf:rest ?cdr .
        ?oc owlnames:ntemplate ?opl
        BIND(concat(owlnames:rlabel(?cdr), \" \", ?opl, \" \", owlnames:rlabel(?car)) AS ?l3)
      }
    OPTIONAL
      { FILTER isBlank(?a1)
        ?a1 rdf:first ?car .
        ?a1 rdf:rest ?cdr
        BIND(if(( ?cdr = rdf:nil ), owlnames:rlabel(?car), concat(owlnames:rlabel(?car), \", \", owlnames:rlabel(?cdr))) AS ?l4)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Restriction .
        ?a1 owl:onProperty ?p .
        ?p rdfs:label ?pl .
        ?a1 owl:onClass ?rc
        LET (?rcl := owlnames:rlabel(?rc))
        ?a1 ?cop ?card
        FILTER ( ?cop IN (owl:minCardinality, owl:maxCardinality, owl:cardinality, owl:minQualifiedCardinality, owl:maxQualifiedCardinality, owl:qualifiedCardinality) )
        ?cop owlnames:ntemplate ?oplp .
        ?cop owlnames:clabel ?oplc
        BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?s)
        BIND(?pl AS ?fill1)
        BIND(?card AS ?fill2)
        BIND(?rcl AS ?fill3)
        BIND(replace(replace(replace(?s, \"\\\\{\\\\?1}\", ?fill1), \"\\\\{\\\\?2}\", ?fill2), \"\\\\{\\\\?3\", ?fill3) AS ?l5)
      }
    BIND(coalesce(?l1, ?l2, ?l3, ?l4, ?l5, concat(\"NONE\", str(?a1)), \"NO ARG\") AS ?result)
  }
"""^^xsd:string ;
  sp:where (
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object [
                  sp:varName "l1"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Restriction ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "p"^^xsd:string ;
                ] ;
              sp:predicate owl:onProperty ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "p"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:TriplePath ;
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:path [
                  rdf:type sp:AltPath ;
                  sp:path1 [
                      rdf:type sp:AltPath ;
                      sp:path1 owl:someValuesFrom ;
                      sp:path2 owl:allValuesFrom ;
                    ] ;
                  sp:path2 owl:hasValue ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "op"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type owlnames:rlabel ;
                  arg:a1 [
                      sp:varName "rc"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "op"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:someValuesFrom ;
                  sp:arg3 owl:allValuesFrom ;
                  sp:arg4 owl:hasValue ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "op"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplc"^^xsd:string ;
                ] ;
              sp:predicate owlnames:clabel ;
              sp:subject [
                  sp:varName "op"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 [
                      sp:varName "oplc"^^xsd:string ;
                    ] ;
                  sp:arg3 [
                      sp:varName "oplp"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "opl"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:concat ;
                  sp:arg1 [
                      sp:varName "pl"^^xsd:string ;
                    ] ;
                  sp:arg2 " " ;
                  sp:arg3 [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:arg4 " " ;
                  sp:arg5 [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "lx"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:replace ;
                  sp:arg1 [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          sp:varName "opl"^^xsd:string ;
                        ] ;
                      sp:arg2 "\\{\\?1}" ;
                      sp:arg3 [
                          sp:varName "pl"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 "\\{\\?2}" ;
                  sp:arg3 [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l2"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Class ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "b"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "oc"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "oc"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:intersectionOf ;
                  sp:arg3 owl:unionOf ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "car"^^xsd:string ;
                ] ;
              sp:predicate rdf:first ;
              sp:subject [
                  sp:varName "b"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "cdr"^^xsd:string ;
                ] ;
              sp:predicate rdf:rest ;
              sp:subject [
                  sp:varName "b"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "opl"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "oc"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:concat ;
                  sp:arg1 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "cdr"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 " " ;
                  sp:arg3 [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:arg4 " " ;
                  sp:arg5 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "car"^^xsd:string ;
                        ] ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l3"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:isBlank ;
                  sp:arg1 [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "car"^^xsd:string ;
                ] ;
              sp:predicate rdf:first ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "cdr"^^xsd:string ;
                ] ;
              sp:predicate rdf:rest ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:eq ;
                      sp:arg1 [
                          sp:varName "cdr"^^xsd:string ;
                        ] ;
                      sp:arg2 () ;
                    ] ;
                  sp:arg2 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "car"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg3 [
                      rdf:type sp:concat ;
                      sp:arg1 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "car"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 ", " ;
                      sp:arg3 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "cdr"^^xsd:string ;
                            ] ;
                        ] ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l4"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Restriction ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "p"^^xsd:string ;
                ] ;
              sp:predicate owl:onProperty ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "p"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:predicate owl:onClass ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type owlnames:rlabel ;
                  arg:a1 [
                      sp:varName "rc"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "card"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "cop"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "cop"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:minCardinality ;
                  sp:arg3 owl:maxCardinality ;
                  sp:arg4 owl:cardinality ;
                  sp:arg5 owl:minQualifiedCardinality ;
                  sp:arg6 owl:maxQualifiedCardinality ;
                  sp:arg7 owl:qualifiedCardinality ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "cop"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplc"^^xsd:string ;
                ] ;
              sp:predicate owlnames:clabel ;
              sp:subject [
                  sp:varName "cop"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 [
                      sp:varName "oplc"^^xsd:string ;
                    ] ;
                  sp:arg3 [
                      sp:varName "oplp"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "s"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "card"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill2"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill3"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:replace ;
                  sp:arg1 [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          rdf:type sp:replace ;
                          sp:arg1 [
                              sp:varName "s"^^xsd:string ;
                            ] ;
                          sp:arg2 "\\{\\?1}" ;
                          sp:arg3 [
                              sp:varName "fill1"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 "\\{\\?2}" ;
                      sp:arg3 [
                          sp:varName "fill2"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 "\\{\\?3" ;
                  sp:arg3 [
                      sp:varName "fill3"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l5"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Bind ;
        sp:expression [
            rdf:type sp:coalesce ;
            sp:arg1 [
                sp:varName "l1"^^xsd:string ;
              ] ;
            sp:arg2 [
                sp:varName "l2"^^xsd:string ;
              ] ;
            sp:arg3 [
                sp:varName "l3"^^xsd:string ;
              ] ;
            sp:arg4 [
                sp:varName "l4"^^xsd:string ;
              ] ;
            sp:arg5 [
                sp:varName "l5"^^xsd:string ;
              ] ;
            sp:arg6 [
                rdf:type sp:concat ;
                sp:arg1 "NONE" ;
                sp:arg2 [
                    rdf:type sp:str ;
                    sp:arg1 [
                        sp:varName "a1"^^xsd:string ;
                      ] ;
                  ] ;
              ] ;
            sp:arg7 "NO ARG" ;
          ] ;
        sp:variable [
            sp:varName "result"^^xsd:string ;
          ] ;
      ]
    ) ;
].
[
  rdf:type sp:Select ;
  sp:resultVariables (
      [
        sp:varName "result"^^xsd:string ;
      ]
    ) ;
  sp:text """PREFIX  metadata: <http://topbraid.org/metadata#>
PREFIX  skostemplate: <http://topbraid.org/spin/skostemplates#>
PREFIX  tagger: <http://evn.topbraidlive.org/tagger#>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  tops: <http://www.topbraid.org/tops#>
PREFIX  swaclasses: <http://topbraid.org/swaclasses#>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  spif: <http://spinrdf.org/spif#>
PREFIX  crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#>
PREFIX  tables: <http://topbraid.org/tables#>
PREFIX  ui:   <http://uispin.org/ui#>
PREFIX  composite: <http://www.topbraid.org/2007/05/composite.owl#>
PREFIX  swaeditor: <http://topbraid.org/swaeditor#>
PREFIX  sm2wsdl: <http://topbraid.org/sparqlmotion/sm2wsdl.sms#>
PREFIX  html: <http://uispin.org/html#>
PREFIX  let:  <http://uispin.org/let#>
PREFIX  shaclify: <http://topbraid.org/shacl/shaclify#>
PREFIX  spinmapl: <http://topbraid.org/spin/spinmapl#>
PREFIX  tasks: <http://topbraid.org/tasks#>
PREFIX  skosspin: <http://topbraid.org/spin/skosspin#>
PREFIX  discoverytool: <http://www.epa.gov/discoverytool#>
PREFIX  tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#>
PREFIX  qudtspin: <http://qudt.org/spin/qudtspin#>
PREFIX  spl:  <http://spinrdf.org/spl#>
PREFIX  jfn:  <java:com.hp.hpl.jena.sparql.function.library.>
PREFIX  spr:  <http://spinrdf.org/spr#>
PREFIX  taxonomies: <http://evn.topbraidlive.org/evnprojects#>
PREFIX  tbi:  <http://tbi.topbraid.org/tbi#>
PREFIX  letrs: <http://uispin.org/letrs#>
PREFIX  connectset-templates: <http://tbi.topbraidlive.org/system/connectset-templates#>
PREFIX  fn:   <http://www.w3.org/2005/xpath-functions#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  sharepoint: <http://topbraid.org/sharepoint#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  smf:  <http://topbraid.org/sparqlmotionfunctions#>
PREFIX  swauml: <http://topbraid.org/swauml#>
PREFIX  evnconstraints: <http://topbraid.org/spin/evnconstraints#>
PREFIX  sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#>
PREFIX  backspin: <http://topbraid.org/backspin#>
PREFIX  tablesmap: <http://topbraid.org/spin/tablesmap#>
PREFIX  search: <http://topbraid.org/search#>
PREFIX  default: <http://uispin.org/default#>
PREFIX  sml:  <http://topbraid.org/sparqlmotionlib#>
PREFIX  crosswalk: <http://topbraid.org/crosswalk#>
PREFIX  dct:  <http://purl.org/dc/terms/>
PREFIX  arg:  <http://spinrdf.org/arg#>
PREFIX  json: <http://topbraid.org/json#>
PREFIX  sm:   <http://topbraid.org/sparqlmotion#>
PREFIX  spinmap: <http://spinrdf.org/spinmap#>
PREFIX  sp:   <http://spinrdf.org/sp#>
PREFIX  email: <http://topbraid.org/email#>
PREFIX  raci: <http://topbraid.org/raci#>
PREFIX  uix:  <http://topbraidlive.org/uix#>
PREFIX  afn:  <http://jena.hpl.hp.com/ARQ/function#>
PREFIX  unnamed: <http://sc.workingontologist.com/unnamed#>
PREFIX  owlnames: <http://spec.edmcouncil.org/owlnames#>
PREFIX  owlrl: <http://topbraid.org/spin/owlrl#>
PREFIX  daml: <http://www.daml.org/2001/03/daml+oil#>
PREFIX  sxml: <http://topbraid.org/sxml#>
PREFIX  teamwork: <http://topbraid.org/teamwork#>
PREFIX  swon: <http://uispin.org/swon#>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  pf:   <http://jena.hpl.hp.com/ARQ/property#>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  evnui: <http://evn.topbraidlive.org/ui#>
PREFIX  spra: <http://spinrdf.org/spra#>
PREFIX  swa:  <http://topbraid.org/swa#>

SELECT  ?result
WHERE
  { OPTIONAL
      { ?a1 rdfs:label ?l1 }
    OPTIONAL
      { ?a1 rdf:type owl:Restriction .
        ?a1 owl:onProperty ?p .
        ?p rdfs:label ?pl .
        ?a1 (owl:someValuesFrom|owl:allValuesFrom)|owl:hasValue ?rc .
        ?a1 ?op ?rc
        BIND(owlnames:rlabel(?rc) AS ?rcl)
        FILTER ( ?op IN (owl:someValuesFrom, owl:allValuesFrom, owl:hasValue) )
        ?op owlnames:ntemplate ?oplp .
        ?op owlnames:clabel ?oplc
        BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?opl)
        BIND(concat(?pl, \" \", ?opl, \" \", ?rcl) AS ?lx)
        BIND(replace(replace(?opl, \"\\\\{\\\\?1}\", ?pl), \"\\\\{\\\\?2}\", ?rcl) AS ?l2)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Class .
        ?a1 ?oc ?b
        FILTER ( ?oc IN (owl:intersectionOf, owl:unionOf) )
        ?b rdf:first ?car .
        ?b rdf:rest ?cdr .
        ?oc owlnames:ntemplate ?opl
        BIND(concat(owlnames:rlabel(?cdr), \" \", ?opl, \" \", owlnames:rlabel(?car)) AS ?l3)
      }
    OPTIONAL
      { FILTER isBlank(?a1)
        ?a1 rdf:first ?car .
        ?a1 rdf:rest ?cdr
        BIND(if(( ?cdr = rdf:nil ), owlnames:rlabel(?car), concat(owlnames:rlabel(?car), \", \", owlnames:rlabel(?cdr))) AS ?l4)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Restriction .
        ?a1 owl:onProperty ?p .
        ?p rdfs:label ?pl .
        ?a1 owl:onClass ?rc
        LET (?rcl := owlnames:rlabel(?rc))
        ?a1 ?cop ?card
        FILTER ( ?cop IN (owl:minCardinality, owl:maxCardinality, owl:cardinality, owl:minQualifiedCardinality, owl:maxQualifiedCardinality, owl:qualifiedCardinality) )
        ?cop owlnames:ntemplate ?oplp .
        ?cop owlnames:clabel ?oplc
        BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?s)
        BIND(?pl AS ?fill1)
        BIND(?card AS ?fill2)
        BIND(?rcl AS ?fill3)
        BIND(replace(replace(replace(?s, \"\\\\{\\\\?1}\", ?fill1), \"\\\\{\\\\?2}\", ?fill2), \"\\\\{\\\\?3\", ?fill3) AS ?l5)
      }
    BIND(coalesce(?l1, ?l2, ?l3, ?l4, ?l5, concat(\"NONE\", str(?a1)), \"NO ARG\") AS ?result)
  }
"""^^xsd:string ;
  sp:where (
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object [
                  sp:varName "l1"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Restriction ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "p"^^xsd:string ;
                ] ;
              sp:predicate owl:onProperty ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "p"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:TriplePath ;
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:path [
                  rdf:type sp:AltPath ;
                  sp:path1 [
                      rdf:type sp:AltPath ;
                      sp:path1 owl:someValuesFrom ;
                      sp:path2 owl:allValuesFrom ;
                    ] ;
                  sp:path2 owl:hasValue ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "op"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type owlnames:rlabel ;
                  arg:a1 [
                      sp:varName "rc"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "op"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:someValuesFrom ;
                  sp:arg3 owl:allValuesFrom ;
                  sp:arg4 owl:hasValue ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "op"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplc"^^xsd:string ;
                ] ;
              sp:predicate owlnames:clabel ;
              sp:subject [
                  sp:varName "op"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 [
                      sp:varName "oplc"^^xsd:string ;
                    ] ;
                  sp:arg3 [
                      sp:varName "oplp"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "opl"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:concat ;
                  sp:arg1 [
                      sp:varName "pl"^^xsd:string ;
                    ] ;
                  sp:arg2 " " ;
                  sp:arg3 [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:arg4 " " ;
                  sp:arg5 [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "lx"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:replace ;
                  sp:arg1 [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          sp:varName "opl"^^xsd:string ;
                        ] ;
                      sp:arg2 "\\{\\?1}" ;
                      sp:arg3 [
                          sp:varName "pl"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 "\\{\\?2}" ;
                  sp:arg3 [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l2"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Class ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "b"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "oc"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "oc"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:intersectionOf ;
                  sp:arg3 owl:unionOf ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "car"^^xsd:string ;
                ] ;
              sp:predicate rdf:first ;
              sp:subject [
                  sp:varName "b"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "cdr"^^xsd:string ;
                ] ;
              sp:predicate rdf:rest ;
              sp:subject [
                  sp:varName "b"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "opl"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "oc"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:concat ;
                  sp:arg1 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "cdr"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 " " ;
                  sp:arg3 [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:arg4 " " ;
                  sp:arg5 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "car"^^xsd:string ;
                        ] ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l3"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:isBlank ;
                  sp:arg1 [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "car"^^xsd:string ;
                ] ;
              sp:predicate rdf:first ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "cdr"^^xsd:string ;
                ] ;
              sp:predicate rdf:rest ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:eq ;
                      sp:arg1 [
                          sp:varName "cdr"^^xsd:string ;
                        ] ;
                      sp:arg2 () ;
                    ] ;
                  sp:arg2 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "car"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg3 [
                      rdf:type sp:concat ;
                      sp:arg1 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "car"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 ", " ;
                      sp:arg3 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "cdr"^^xsd:string ;
                            ] ;
                        ] ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l4"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Restriction ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "p"^^xsd:string ;
                ] ;
              sp:predicate owl:onProperty ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "p"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:predicate owl:onClass ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type owlnames:rlabel ;
                  arg:a1 [
                      sp:varName "rc"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "card"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "cop"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "cop"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:minCardinality ;
                  sp:arg3 owl:maxCardinality ;
                  sp:arg4 owl:cardinality ;
                  sp:arg5 owl:minQualifiedCardinality ;
                  sp:arg6 owl:maxQualifiedCardinality ;
                  sp:arg7 owl:qualifiedCardinality ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "cop"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplc"^^xsd:string ;
                ] ;
              sp:predicate owlnames:clabel ;
              sp:subject [
                  sp:varName "cop"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 [
                      sp:varName "oplc"^^xsd:string ;
                    ] ;
                  sp:arg3 [
                      sp:varName "oplp"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "s"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "card"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill2"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill3"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:replace ;
                  sp:arg1 [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          rdf:type sp:replace ;
                          sp:arg1 [
                              sp:varName "s"^^xsd:string ;
                            ] ;
                          sp:arg2 "\\{\\?1}" ;
                          sp:arg3 [
                              sp:varName "fill1"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 "\\{\\?2}" ;
                      sp:arg3 [
                          sp:varName "fill2"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 "\\{\\?3" ;
                  sp:arg3 [
                      sp:varName "fill3"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l5"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Bind ;
        sp:expression [
            rdf:type sp:coalesce ;
            sp:arg1 [
                sp:varName "l1"^^xsd:string ;
              ] ;
            sp:arg2 [
                sp:varName "l2"^^xsd:string ;
              ] ;
            sp:arg3 [
                sp:varName "l3"^^xsd:string ;
              ] ;
            sp:arg4 [
                sp:varName "l4"^^xsd:string ;
              ] ;
            sp:arg5 [
                sp:varName "l5"^^xsd:string ;
              ] ;
            sp:arg6 [
                rdf:type sp:concat ;
                sp:arg1 "NONE" ;
                sp:arg2 [
                    rdf:type sp:str ;
                    sp:arg1 [
                        sp:varName "a1"^^xsd:string ;
                      ] ;
                  ] ;
              ] ;
            sp:arg7 "NO ARG" ;
          ] ;
        sp:variable [
            sp:varName "result"^^xsd:string ;
          ] ;
      ]
    ) ;
].
[
  rdf:type sp:Select ;
  sp:resultVariables (
      [
        sp:varName "result"^^xsd:string ;
      ]
    ) ;
  sp:text """PREFIX  metadata: <http://topbraid.org/metadata#>
PREFIX  skostemplate: <http://topbraid.org/spin/skostemplates#>
PREFIX  tagger: <http://evn.topbraidlive.org/tagger#>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  tops: <http://www.topbraid.org/tops#>
PREFIX  swaclasses: <http://topbraid.org/swaclasses#>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  spif: <http://spinrdf.org/spif#>
PREFIX  crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#>
PREFIX  tables: <http://topbraid.org/tables#>
PREFIX  ui:   <http://uispin.org/ui#>
PREFIX  composite: <http://www.topbraid.org/2007/05/composite.owl#>
PREFIX  swaeditor: <http://topbraid.org/swaeditor#>
PREFIX  sm2wsdl: <http://topbraid.org/sparqlmotion/sm2wsdl.sms#>
PREFIX  html: <http://uispin.org/html#>
PREFIX  let:  <http://uispin.org/let#>
PREFIX  shaclify: <http://topbraid.org/shacl/shaclify#>
PREFIX  spinmapl: <http://topbraid.org/spin/spinmapl#>
PREFIX  tasks: <http://topbraid.org/tasks#>
PREFIX  skosspin: <http://topbraid.org/spin/skosspin#>
PREFIX  discoverytool: <http://www.epa.gov/discoverytool#>
PREFIX  tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#>
PREFIX  qudtspin: <http://qudt.org/spin/qudtspin#>
PREFIX  spl:  <http://spinrdf.org/spl#>
PREFIX  jfn:  <java:com.hp.hpl.jena.sparql.function.library.>
PREFIX  spr:  <http://spinrdf.org/spr#>
PREFIX  taxonomies: <http://evn.topbraidlive.org/evnprojects#>
PREFIX  tbi:  <http://tbi.topbraid.org/tbi#>
PREFIX  letrs: <http://uispin.org/letrs#>
PREFIX  connectset-templates: <http://tbi.topbraidlive.org/system/connectset-templates#>
PREFIX  fn:   <http://www.w3.org/2005/xpath-functions#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  sharepoint: <http://topbraid.org/sharepoint#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  smf:  <http://topbraid.org/sparqlmotionfunctions#>
PREFIX  swauml: <http://topbraid.org/swauml#>
PREFIX  evnconstraints: <http://topbraid.org/spin/evnconstraints#>
PREFIX  sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#>
PREFIX  backspin: <http://topbraid.org/backspin#>
PREFIX  tablesmap: <http://topbraid.org/spin/tablesmap#>
PREFIX  search: <http://topbraid.org/search#>
PREFIX  default: <http://uispin.org/default#>
PREFIX  sml:  <http://topbraid.org/sparqlmotionlib#>
PREFIX  crosswalk: <http://topbraid.org/crosswalk#>
PREFIX  dct:  <http://purl.org/dc/terms/>
PREFIX  arg:  <http://spinrdf.org/arg#>
PREFIX  json: <http://topbraid.org/json#>
PREFIX  sm:   <http://topbraid.org/sparqlmotion#>
PREFIX  spinmap: <http://spinrdf.org/spinmap#>
PREFIX  sp:   <http://spinrdf.org/sp#>
PREFIX  email: <http://topbraid.org/email#>
PREFIX  raci: <http://topbraid.org/raci#>
PREFIX  uix:  <http://topbraidlive.org/uix#>
PREFIX  afn:  <http://jena.hpl.hp.com/ARQ/function#>
PREFIX  unnamed: <http://sc.workingontologist.com/unnamed#>
PREFIX  owlnames: <http://spec.edmcouncil.org/owlnames#>
PREFIX  owlrl: <http://topbraid.org/spin/owlrl#>
PREFIX  daml: <http://www.daml.org/2001/03/daml+oil#>
PREFIX  sxml: <http://topbraid.org/sxml#>
PREFIX  teamwork: <http://topbraid.org/teamwork#>
PREFIX  swon: <http://uispin.org/swon#>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  pf:   <http://jena.hpl.hp.com/ARQ/property#>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  evnui: <http://evn.topbraidlive.org/ui#>
PREFIX  spra: <http://spinrdf.org/spra#>
PREFIX  swa:  <http://topbraid.org/swa#>

SELECT  ?result
WHERE
  { OPTIONAL
      { ?a1 rdfs:label ?l1 }
    OPTIONAL
      { ?a1 rdf:type owl:Restriction .
        ?a1 owl:onProperty ?p .
        ?p rdfs:label ?pl .
        ?a1 (owl:someValuesFrom|owl:allValuesFrom)|owl:hasValue ?rc .
        ?a1 ?op ?rc
        BIND(owlnames:rlabel(?rc) AS ?rcl)
        FILTER ( ?op IN (owl:someValuesFrom, owl:allValuesFrom, owl:hasValue) )
        ?op owlnames:ntemplate ?oplp .
        ?op owlnames:clabel ?oplc
        BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?opl)
        BIND(concat(?pl, \" \", ?opl, \" \", ?rcl) AS ?lx)
        BIND(replace(replace(?opl, \"\\\\{\\\\?1}\", ?pl), \"\\\\{\\\\?2}\", ?rcl) AS ?l2)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Class .
        ?a1 ?oc ?b
        FILTER ( ?oc IN (owl:intersectionOf, owl:unionOf) )
        ?b rdf:first ?car .
        ?b rdf:rest ?cdr .
        ?oc owlnames:ntemplate ?opl
        BIND(concat(owlnames:rlabel(?cdr), \" \", ?opl, \" \", owlnames:rlabel(?car)) AS ?l3)
      }
    OPTIONAL
      { FILTER isBlank(?a1)
        ?a1 rdf:first ?car .
        ?a1 rdf:rest ?cdr
        BIND(if(( ?cdr = rdf:nil ), owlnames:rlabel(?car), concat(owlnames:rlabel(?car), \", \", owlnames:rlabel(?cdr))) AS ?l4)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Restriction .
        ?a1 owl:onProperty ?p .
        ?p rdfs:label ?pl .
        ?a1 owl:onClass ?rc
        LET (?rcl := owlnames:rlabel(?rc))
        ?a1 ?cop ?card
        FILTER ( ?cop IN (owl:minCardinality, owl:maxCardinality, owl:cardinality, owl:minQualifiedCardinality, owl:maxQualifiedCardinality, owl:qualifiedCardinality) )
        ?cop owlnames:ntemplate ?oplp .
        ?cop owlnames:clabel ?oplc
        BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?s)
        BIND(?pl AS ?fill1)
        BIND(?card AS ?fill2)
        BIND(?rcl AS ?fill3)
        BIND(replace(replace(replace(?s, \"\\\\{\\\\?1}\", ?fill1), \"\\\\{\\\\?2}\", ?fill2), \"\\\\{\\\\?3\", ?fill3) AS ?l5)
      }
    BIND(coalesce(?l1, ?l2, ?l3, ?l4, ?l5, concat(\"NONE\", str(?a1)), \"NO ARG\") AS ?result)
  }
"""^^xsd:string ;
  sp:where (
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object [
                  sp:varName "l1"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Restriction ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "p"^^xsd:string ;
                ] ;
              sp:predicate owl:onProperty ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "p"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:TriplePath ;
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:path [
                  rdf:type sp:AltPath ;
                  sp:path1 [
                      rdf:type sp:AltPath ;
                      sp:path1 owl:someValuesFrom ;
                      sp:path2 owl:allValuesFrom ;
                    ] ;
                  sp:path2 owl:hasValue ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "op"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type owlnames:rlabel ;
                  arg:a1 [
                      sp:varName "rc"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "op"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:someValuesFrom ;
                  sp:arg3 owl:allValuesFrom ;
                  sp:arg4 owl:hasValue ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "op"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplc"^^xsd:string ;
                ] ;
              sp:predicate owlnames:clabel ;
              sp:subject [
                  sp:varName "op"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 [
                      sp:varName "oplc"^^xsd:string ;
                    ] ;
                  sp:arg3 [
                      sp:varName "oplp"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "opl"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:concat ;
                  sp:arg1 [
                      sp:varName "pl"^^xsd:string ;
                    ] ;
                  sp:arg2 " " ;
                  sp:arg3 [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:arg4 " " ;
                  sp:arg5 [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "lx"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:replace ;
                  sp:arg1 [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          sp:varName "opl"^^xsd:string ;
                        ] ;
                      sp:arg2 "\\{\\?1}" ;
                      sp:arg3 [
                          sp:varName "pl"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 "\\{\\?2}" ;
                  sp:arg3 [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l2"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Class ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "b"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "oc"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "oc"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:intersectionOf ;
                  sp:arg3 owl:unionOf ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "car"^^xsd:string ;
                ] ;
              sp:predicate rdf:first ;
              sp:subject [
                  sp:varName "b"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "cdr"^^xsd:string ;
                ] ;
              sp:predicate rdf:rest ;
              sp:subject [
                  sp:varName "b"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "opl"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "oc"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:concat ;
                  sp:arg1 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "cdr"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 " " ;
                  sp:arg3 [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:arg4 " " ;
                  sp:arg5 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "car"^^xsd:string ;
                        ] ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l3"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:isBlank ;
                  sp:arg1 [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "car"^^xsd:string ;
                ] ;
              sp:predicate rdf:first ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "cdr"^^xsd:string ;
                ] ;
              sp:predicate rdf:rest ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:eq ;
                      sp:arg1 [
                          sp:varName "cdr"^^xsd:string ;
                        ] ;
                      sp:arg2 () ;
                    ] ;
                  sp:arg2 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "car"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg3 [
                      rdf:type sp:concat ;
                      sp:arg1 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "car"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 ", " ;
                      sp:arg3 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "cdr"^^xsd:string ;
                            ] ;
                        ] ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l4"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Restriction ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "p"^^xsd:string ;
                ] ;
              sp:predicate owl:onProperty ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "p"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:predicate owl:onClass ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type owlnames:rlabel ;
                  arg:a1 [
                      sp:varName "rc"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "card"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "cop"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "cop"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:minCardinality ;
                  sp:arg3 owl:maxCardinality ;
                  sp:arg4 owl:cardinality ;
                  sp:arg5 owl:minQualifiedCardinality ;
                  sp:arg6 owl:maxQualifiedCardinality ;
                  sp:arg7 owl:qualifiedCardinality ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "cop"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplc"^^xsd:string ;
                ] ;
              sp:predicate owlnames:clabel ;
              sp:subject [
                  sp:varName "cop"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 [
                      sp:varName "oplc"^^xsd:string ;
                    ] ;
                  sp:arg3 [
                      sp:varName "oplp"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "s"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "card"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill2"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill3"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:replace ;
                  sp:arg1 [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          rdf:type sp:replace ;
                          sp:arg1 [
                              sp:varName "s"^^xsd:string ;
                            ] ;
                          sp:arg2 "\\{\\?1}" ;
                          sp:arg3 [
                              sp:varName "fill1"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 "\\{\\?2}" ;
                      sp:arg3 [
                          sp:varName "fill2"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 "\\{\\?3" ;
                  sp:arg3 [
                      sp:varName "fill3"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l5"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Bind ;
        sp:expression [
            rdf:type sp:coalesce ;
            sp:arg1 [
                sp:varName "l1"^^xsd:string ;
              ] ;
            sp:arg2 [
                sp:varName "l2"^^xsd:string ;
              ] ;
            sp:arg3 [
                sp:varName "l3"^^xsd:string ;
              ] ;
            sp:arg4 [
                sp:varName "l4"^^xsd:string ;
              ] ;
            sp:arg5 [
                sp:varName "l5"^^xsd:string ;
              ] ;
            sp:arg6 [
                rdf:type sp:concat ;
                sp:arg1 "NONE" ;
                sp:arg2 [
                    rdf:type sp:str ;
                    sp:arg1 [
                        sp:varName "a1"^^xsd:string ;
                      ] ;
                  ] ;
              ] ;
            sp:arg7 "NO ARG" ;
          ] ;
        sp:variable [
            sp:varName "result"^^xsd:string ;
          ] ;
      ]
    ) ;
].
[
  rdf:type sp:Select ;
  sp:resultVariables (
      [
        sp:varName "result"^^xsd:string ;
      ]
    ) ;
  sp:text """PREFIX  metadata: <http://topbraid.org/metadata#>
PREFIX  skostemplate: <http://topbraid.org/spin/skostemplates#>
PREFIX  tagger: <http://evn.topbraidlive.org/tagger#>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  tops: <http://www.topbraid.org/tops#>
PREFIX  swaclasses: <http://topbraid.org/swaclasses#>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  spif: <http://spinrdf.org/spif#>
PREFIX  crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#>
PREFIX  tables: <http://topbraid.org/tables#>
PREFIX  ui:   <http://uispin.org/ui#>
PREFIX  composite: <http://www.topbraid.org/2007/05/composite.owl#>
PREFIX  swaeditor: <http://topbraid.org/swaeditor#>
PREFIX  sm2wsdl: <http://topbraid.org/sparqlmotion/sm2wsdl.sms#>
PREFIX  html: <http://uispin.org/html#>
PREFIX  let:  <http://uispin.org/let#>
PREFIX  shaclify: <http://topbraid.org/shacl/shaclify#>
PREFIX  spinmapl: <http://topbraid.org/spin/spinmapl#>
PREFIX  tasks: <http://topbraid.org/tasks#>
PREFIX  skosspin: <http://topbraid.org/spin/skosspin#>
PREFIX  discoverytool: <http://www.epa.gov/discoverytool#>
PREFIX  tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#>
PREFIX  qudtspin: <http://qudt.org/spin/qudtspin#>
PREFIX  spl:  <http://spinrdf.org/spl#>
PREFIX  jfn:  <java:com.hp.hpl.jena.sparql.function.library.>
PREFIX  spr:  <http://spinrdf.org/spr#>
PREFIX  taxonomies: <http://evn.topbraidlive.org/evnprojects#>
PREFIX  tbi:  <http://tbi.topbraid.org/tbi#>
PREFIX  letrs: <http://uispin.org/letrs#>
PREFIX  connectset-templates: <http://tbi.topbraidlive.org/system/connectset-templates#>
PREFIX  fn:   <http://www.w3.org/2005/xpath-functions#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  sharepoint: <http://topbraid.org/sharepoint#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  smf:  <http://topbraid.org/sparqlmotionfunctions#>
PREFIX  swauml: <http://topbraid.org/swauml#>
PREFIX  evnconstraints: <http://topbraid.org/spin/evnconstraints#>
PREFIX  sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#>
PREFIX  backspin: <http://topbraid.org/backspin#>
PREFIX  tablesmap: <http://topbraid.org/spin/tablesmap#>
PREFIX  search: <http://topbraid.org/search#>
PREFIX  default: <http://uispin.org/default#>
PREFIX  sml:  <http://topbraid.org/sparqlmotionlib#>
PREFIX  crosswalk: <http://topbraid.org/crosswalk#>
PREFIX  dct:  <http://purl.org/dc/terms/>
PREFIX  arg:  <http://spinrdf.org/arg#>
PREFIX  json: <http://topbraid.org/json#>
PREFIX  sm:   <http://topbraid.org/sparqlmotion#>
PREFIX  spinmap: <http://spinrdf.org/spinmap#>
PREFIX  sp:   <http://spinrdf.org/sp#>
PREFIX  email: <http://topbraid.org/email#>
PREFIX  raci: <http://topbraid.org/raci#>
PREFIX  uix:  <http://topbraidlive.org/uix#>
PREFIX  afn:  <http://jena.hpl.hp.com/ARQ/function#>
PREFIX  unnamed: <http://sc.workingontologist.com/unnamed#>
PREFIX  owlnames: <http://spec.edmcouncil.org/owlnames#>
PREFIX  owlrl: <http://topbraid.org/spin/owlrl#>
PREFIX  daml: <http://www.daml.org/2001/03/daml+oil#>
PREFIX  sxml: <http://topbraid.org/sxml#>
PREFIX  teamwork: <http://topbraid.org/teamwork#>
PREFIX  swon: <http://uispin.org/swon#>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  pf:   <http://jena.hpl.hp.com/ARQ/property#>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  evnui: <http://evn.topbraidlive.org/ui#>
PREFIX  spra: <http://spinrdf.org/spra#>
PREFIX  swa:  <http://topbraid.org/swa#>

SELECT  ?result
WHERE
  { OPTIONAL
      { ?a1 rdfs:label ?l1 }
    OPTIONAL
      { ?a1 rdf:type owl:Restriction .
        ?a1 owl:onProperty ?p .
        ?p rdfs:label ?pl .
        ?a1 (owl:someValuesFrom|owl:allValuesFrom)|owl:hasValue ?rc .
        ?a1 ?op ?rc
        BIND(owlnames:rlabel(?rc) AS ?rcl)
        FILTER ( ?op IN (owl:someValuesFrom, owl:allValuesFrom, owl:hasValue) )
        ?op owlnames:ntemplate ?oplp .
        ?op owlnames:clabel ?oplc
        BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?opl)
        BIND(concat(?pl, \" \", ?opl, \" \", ?rcl) AS ?lx)
        BIND(replace(replace(?opl, \"\\\\{\\\\?1}\", ?pl), \"\\\\{\\\\?2}\", ?rcl) AS ?l2)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Class .
        ?a1 ?oc ?b
        FILTER ( ?oc IN (owl:intersectionOf, owl:unionOf) )
        ?b rdf:first ?car .
        ?b rdf:rest ?cdr .
        ?oc owlnames:ntemplate ?opl
        BIND(concat(owlnames:rlabel(?cdr), \" \", ?opl, \" \", owlnames:rlabel(?car)) AS ?l3)
      }
    OPTIONAL
      { FILTER isBlank(?a1)
        ?a1 rdf:first ?car .
        ?a1 rdf:rest ?cdr
        BIND(if(( ?cdr = rdf:nil ), owlnames:rlabel(?car), concat(owlnames:rlabel(?car), \", \", owlnames:rlabel(?cdr))) AS ?l4)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Restriction .
        ?a1 owl:onProperty ?p .
        ?p rdfs:label ?pl .
        ?a1 owl:onClass ?rc
        LET (?rcl := owlnames:rlabel(?rc))
        ?a1 ?cop ?card
        FILTER ( ?cop IN (owl:minCardinality, owl:maxCardinality, owl:cardinality, owl:minQualifiedCardinality, owl:maxQualifiedCardinality, owl:qualifiedCardinality) )
        ?cop owlnames:ntemplate ?oplp .
        ?cop owlnames:clabel ?oplc
        BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?s)
        BIND(?pl AS ?fill1)
        BIND(?card AS ?fill2)
        BIND(?rcl AS ?fill3)
        BIND(replace(replace(replace(?s, \"\\\\{\\\\?1}\", ?fill1), \"\\\\{\\\\?2}\", ?fill2), \"\\\\{\\\\?3\", ?fill3) AS ?l5)
      }
    BIND(coalesce(?l1, ?l2, ?l3, ?l4, ?l5, concat(\"NONE\", str(?a1)), \"NO ARG\") AS ?result)
  }
"""^^xsd:string ;
  sp:where (
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object [
                  sp:varName "l1"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Restriction ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "p"^^xsd:string ;
                ] ;
              sp:predicate owl:onProperty ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "p"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:TriplePath ;
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:path [
                  rdf:type sp:AltPath ;
                  sp:path1 [
                      rdf:type sp:AltPath ;
                      sp:path1 owl:someValuesFrom ;
                      sp:path2 owl:allValuesFrom ;
                    ] ;
                  sp:path2 owl:hasValue ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "op"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type owlnames:rlabel ;
                  arg:a1 [
                      sp:varName "rc"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "op"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:someValuesFrom ;
                  sp:arg3 owl:allValuesFrom ;
                  sp:arg4 owl:hasValue ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "op"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplc"^^xsd:string ;
                ] ;
              sp:predicate owlnames:clabel ;
              sp:subject [
                  sp:varName "op"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 [
                      sp:varName "oplc"^^xsd:string ;
                    ] ;
                  sp:arg3 [
                      sp:varName "oplp"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "opl"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:concat ;
                  sp:arg1 [
                      sp:varName "pl"^^xsd:string ;
                    ] ;
                  sp:arg2 " " ;
                  sp:arg3 [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:arg4 " " ;
                  sp:arg5 [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "lx"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:replace ;
                  sp:arg1 [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          sp:varName "opl"^^xsd:string ;
                        ] ;
                      sp:arg2 "\\{\\?1}" ;
                      sp:arg3 [
                          sp:varName "pl"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 "\\{\\?2}" ;
                  sp:arg3 [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l2"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Class ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "b"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "oc"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "oc"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:intersectionOf ;
                  sp:arg3 owl:unionOf ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "car"^^xsd:string ;
                ] ;
              sp:predicate rdf:first ;
              sp:subject [
                  sp:varName "b"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "cdr"^^xsd:string ;
                ] ;
              sp:predicate rdf:rest ;
              sp:subject [
                  sp:varName "b"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "opl"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "oc"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:concat ;
                  sp:arg1 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "cdr"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 " " ;
                  sp:arg3 [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:arg4 " " ;
                  sp:arg5 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "car"^^xsd:string ;
                        ] ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l3"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:isBlank ;
                  sp:arg1 [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "car"^^xsd:string ;
                ] ;
              sp:predicate rdf:first ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "cdr"^^xsd:string ;
                ] ;
              sp:predicate rdf:rest ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:eq ;
                      sp:arg1 [
                          sp:varName "cdr"^^xsd:string ;
                        ] ;
                      sp:arg2 () ;
                    ] ;
                  sp:arg2 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "car"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg3 [
                      rdf:type sp:concat ;
                      sp:arg1 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "car"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 ", " ;
                      sp:arg3 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "cdr"^^xsd:string ;
                            ] ;
                        ] ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l4"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Restriction ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "p"^^xsd:string ;
                ] ;
              sp:predicate owl:onProperty ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "p"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:predicate owl:onClass ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type owlnames:rlabel ;
                  arg:a1 [
                      sp:varName "rc"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "card"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "cop"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "cop"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:minCardinality ;
                  sp:arg3 owl:maxCardinality ;
                  sp:arg4 owl:cardinality ;
                  sp:arg5 owl:minQualifiedCardinality ;
                  sp:arg6 owl:maxQualifiedCardinality ;
                  sp:arg7 owl:qualifiedCardinality ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "cop"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplc"^^xsd:string ;
                ] ;
              sp:predicate owlnames:clabel ;
              sp:subject [
                  sp:varName "cop"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 [
                      sp:varName "oplc"^^xsd:string ;
                    ] ;
                  sp:arg3 [
                      sp:varName "oplp"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "s"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "card"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill2"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill3"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:replace ;
                  sp:arg1 [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          rdf:type sp:replace ;
                          sp:arg1 [
                              sp:varName "s"^^xsd:string ;
                            ] ;
                          sp:arg2 "\\{\\?1}" ;
                          sp:arg3 [
                              sp:varName "fill1"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 "\\{\\?2}" ;
                      sp:arg3 [
                          sp:varName "fill2"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 "\\{\\?3" ;
                  sp:arg3 [
                      sp:varName "fill3"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l5"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Bind ;
        sp:expression [
            rdf:type sp:coalesce ;
            sp:arg1 [
                sp:varName "l1"^^xsd:string ;
              ] ;
            sp:arg2 [
                sp:varName "l2"^^xsd:string ;
              ] ;
            sp:arg3 [
                sp:varName "l3"^^xsd:string ;
              ] ;
            sp:arg4 [
                sp:varName "l4"^^xsd:string ;
              ] ;
            sp:arg5 [
                sp:varName "l5"^^xsd:string ;
              ] ;
            sp:arg6 [
                rdf:type sp:concat ;
                sp:arg1 "NONE" ;
                sp:arg2 [
                    rdf:type sp:str ;
                    sp:arg1 [
                        sp:varName "a1"^^xsd:string ;
                      ] ;
                  ] ;
              ] ;
            sp:arg7 "NO ARG" ;
          ] ;
        sp:variable [
            sp:varName "result"^^xsd:string ;
          ] ;
      ]
    ) ;
].
[
  rdf:type sp:Select ;
  sp:resultVariables (
      [
        sp:varName "result"^^xsd:string ;
      ]
    ) ;
  sp:text """PREFIX  metadata: <http://topbraid.org/metadata#>
PREFIX  skostemplate: <http://topbraid.org/spin/skostemplates#>
PREFIX  tagger: <http://evn.topbraidlive.org/tagger#>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  tops: <http://www.topbraid.org/tops#>
PREFIX  swaclasses: <http://topbraid.org/swaclasses#>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  spif: <http://spinrdf.org/spif#>
PREFIX  crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#>
PREFIX  tables: <http://topbraid.org/tables#>
PREFIX  ui:   <http://uispin.org/ui#>
PREFIX  composite: <http://www.topbraid.org/2007/05/composite.owl#>
PREFIX  swaeditor: <http://topbraid.org/swaeditor#>
PREFIX  sm2wsdl: <http://topbraid.org/sparqlmotion/sm2wsdl.sms#>
PREFIX  html: <http://uispin.org/html#>
PREFIX  let:  <http://uispin.org/let#>
PREFIX  shaclify: <http://topbraid.org/shacl/shaclify#>
PREFIX  spinmapl: <http://topbraid.org/spin/spinmapl#>
PREFIX  tasks: <http://topbraid.org/tasks#>
PREFIX  skosspin: <http://topbraid.org/spin/skosspin#>
PREFIX  discoverytool: <http://www.epa.gov/discoverytool#>
PREFIX  tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#>
PREFIX  qudtspin: <http://qudt.org/spin/qudtspin#>
PREFIX  spl:  <http://spinrdf.org/spl#>
PREFIX  jfn:  <java:com.hp.hpl.jena.sparql.function.library.>
PREFIX  spr:  <http://spinrdf.org/spr#>
PREFIX  taxonomies: <http://evn.topbraidlive.org/evnprojects#>
PREFIX  tbi:  <http://tbi.topbraid.org/tbi#>
PREFIX  letrs: <http://uispin.org/letrs#>
PREFIX  connectset-templates: <http://tbi.topbraidlive.org/system/connectset-templates#>
PREFIX  fn:   <http://www.w3.org/2005/xpath-functions#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  sharepoint: <http://topbraid.org/sharepoint#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  smf:  <http://topbraid.org/sparqlmotionfunctions#>
PREFIX  swauml: <http://topbraid.org/swauml#>
PREFIX  evnconstraints: <http://topbraid.org/spin/evnconstraints#>
PREFIX  sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#>
PREFIX  backspin: <http://topbraid.org/backspin#>
PREFIX  tablesmap: <http://topbraid.org/spin/tablesmap#>
PREFIX  search: <http://topbraid.org/search#>
PREFIX  default: <http://uispin.org/default#>
PREFIX  sml:  <http://topbraid.org/sparqlmotionlib#>
PREFIX  crosswalk: <http://topbraid.org/crosswalk#>
PREFIX  dct:  <http://purl.org/dc/terms/>
PREFIX  arg:  <http://spinrdf.org/arg#>
PREFIX  json: <http://topbraid.org/json#>
PREFIX  sm:   <http://topbraid.org/sparqlmotion#>
PREFIX  spinmap: <http://spinrdf.org/spinmap#>
PREFIX  sp:   <http://spinrdf.org/sp#>
PREFIX  email: <http://topbraid.org/email#>
PREFIX  raci: <http://topbraid.org/raci#>
PREFIX  uix:  <http://topbraidlive.org/uix#>
PREFIX  afn:  <http://jena.hpl.hp.com/ARQ/function#>
PREFIX  unnamed: <http://sc.workingontologist.com/unnamed#>
PREFIX  owlnames: <http://spec.edmcouncil.org/owlnames#>
PREFIX  owlrl: <http://topbraid.org/spin/owlrl#>
PREFIX  daml: <http://www.daml.org/2001/03/daml+oil#>
PREFIX  sxml: <http://topbraid.org/sxml#>
PREFIX  teamwork: <http://topbraid.org/teamwork#>
PREFIX  swon: <http://uispin.org/swon#>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  pf:   <http://jena.hpl.hp.com/ARQ/property#>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  evnui: <http://evn.topbraidlive.org/ui#>
PREFIX  spra: <http://spinrdf.org/spra#>
PREFIX  swa:  <http://topbraid.org/swa#>

SELECT  ?result
WHERE
  { OPTIONAL
      { ?a1 rdfs:label ?l1 }
    OPTIONAL
      { ?a1 rdf:type owl:Restriction .
        ?a1 owl:onProperty ?p .
        ?p rdfs:label ?pl .
        ?a1 (owl:someValuesFrom|owl:allValuesFrom)|owl:hasValue ?rc .
        ?a1 ?op ?rc
        BIND(owlnames:rlabel(?rc) AS ?rcl)
        FILTER ( ?op IN (owl:someValuesFrom, owl:allValuesFrom, owl:hasValue) )
        ?op owlnames:ntemplate ?oplp .
        ?op owlnames:clabel ?oplc
        BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?opl)
        BIND(concat(?pl, \" \", ?opl, \" \", ?rcl) AS ?lx)
        BIND(replace(replace(?opl, \"\\\\{\\\\?1}\", ?pl), \"\\\\{\\\\?2}\", ?rcl) AS ?l2)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Class .
        ?a1 ?oc ?b
        FILTER ( ?oc IN (owl:intersectionOf, owl:unionOf) )
        ?b rdf:first ?car .
        ?b rdf:rest ?cdr .
        ?oc owlnames:ntemplate ?opl
        BIND(concat(owlnames:rlabel(?cdr), \" \", ?opl, \" \", owlnames:rlabel(?car)) AS ?l3)
      }
    OPTIONAL
      { FILTER isBlank(?a1)
        ?a1 rdf:first ?car .
        ?a1 rdf:rest ?cdr
        BIND(if(( ?cdr = rdf:nil ), owlnames:rlabel(?car), concat(owlnames:rlabel(?car), \", \", owlnames:rlabel(?cdr))) AS ?l4)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Restriction .
        ?a1 owl:onProperty ?p .
        ?p rdfs:label ?pl .
        ?a1 owl:onClass ?rc
        LET (?rcl := owlnames:rlabel(?rc))
        ?a1 ?cop ?card
        FILTER ( ?cop IN (owl:minCardinality, owl:maxCardinality, owl:cardinality, owl:minQualifiedCardinality, owl:maxQualifiedCardinality, owl:qualifiedCardinality) )
        ?cop owlnames:ntemplate ?oplp .
        ?cop owlnames:clabel ?oplc
        BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?s)
        BIND(?pl AS ?fill1)
        BIND(?card AS ?fill2)
        BIND(?rcl AS ?fill3)
        BIND(replace(replace(replace(?s, \"\\\\{\\\\?1}\", ?fill1), \"\\\\{\\\\?2}\", ?fill2), \"\\\\{\\\\?3\", ?fill3) AS ?l5)
      }
    BIND(coalesce(?l1, ?l2, ?l3, ?l4, ?l5, concat(\"NONE\", str(?a1)), \"NO ARG\") AS ?result)
  }
"""^^xsd:string ;
  sp:where (
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object [
                  sp:varName "l1"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Restriction ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "p"^^xsd:string ;
                ] ;
              sp:predicate owl:onProperty ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "p"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:TriplePath ;
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:path [
                  rdf:type sp:AltPath ;
                  sp:path1 [
                      rdf:type sp:AltPath ;
                      sp:path1 owl:someValuesFrom ;
                      sp:path2 owl:allValuesFrom ;
                    ] ;
                  sp:path2 owl:hasValue ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "op"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type owlnames:rlabel ;
                  arg:a1 [
                      sp:varName "rc"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "op"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:someValuesFrom ;
                  sp:arg3 owl:allValuesFrom ;
                  sp:arg4 owl:hasValue ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "op"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplc"^^xsd:string ;
                ] ;
              sp:predicate owlnames:clabel ;
              sp:subject [
                  sp:varName "op"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 [
                      sp:varName "oplc"^^xsd:string ;
                    ] ;
                  sp:arg3 [
                      sp:varName "oplp"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "opl"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:concat ;
                  sp:arg1 [
                      sp:varName "pl"^^xsd:string ;
                    ] ;
                  sp:arg2 " " ;
                  sp:arg3 [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:arg4 " " ;
                  sp:arg5 [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "lx"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:replace ;
                  sp:arg1 [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          sp:varName "opl"^^xsd:string ;
                        ] ;
                      sp:arg2 "\\{\\?1}" ;
                      sp:arg3 [
                          sp:varName "pl"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 "\\{\\?2}" ;
                  sp:arg3 [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l2"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Class ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "b"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "oc"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "oc"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:intersectionOf ;
                  sp:arg3 owl:unionOf ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "car"^^xsd:string ;
                ] ;
              sp:predicate rdf:first ;
              sp:subject [
                  sp:varName "b"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "cdr"^^xsd:string ;
                ] ;
              sp:predicate rdf:rest ;
              sp:subject [
                  sp:varName "b"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "opl"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "oc"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:concat ;
                  sp:arg1 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "cdr"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 " " ;
                  sp:arg3 [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:arg4 " " ;
                  sp:arg5 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "car"^^xsd:string ;
                        ] ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l3"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:isBlank ;
                  sp:arg1 [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "car"^^xsd:string ;
                ] ;
              sp:predicate rdf:first ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "cdr"^^xsd:string ;
                ] ;
              sp:predicate rdf:rest ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:eq ;
                      sp:arg1 [
                          sp:varName "cdr"^^xsd:string ;
                        ] ;
                      sp:arg2 () ;
                    ] ;
                  sp:arg2 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "car"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg3 [
                      rdf:type sp:concat ;
                      sp:arg1 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "car"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 ", " ;
                      sp:arg3 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "cdr"^^xsd:string ;
                            ] ;
                        ] ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l4"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Restriction ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "p"^^xsd:string ;
                ] ;
              sp:predicate owl:onProperty ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "p"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:predicate owl:onClass ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type owlnames:rlabel ;
                  arg:a1 [
                      sp:varName "rc"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "card"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "cop"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "cop"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:minCardinality ;
                  sp:arg3 owl:maxCardinality ;
                  sp:arg4 owl:cardinality ;
                  sp:arg5 owl:minQualifiedCardinality ;
                  sp:arg6 owl:maxQualifiedCardinality ;
                  sp:arg7 owl:qualifiedCardinality ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "cop"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplc"^^xsd:string ;
                ] ;
              sp:predicate owlnames:clabel ;
              sp:subject [
                  sp:varName "cop"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 [
                      sp:varName "oplc"^^xsd:string ;
                    ] ;
                  sp:arg3 [
                      sp:varName "oplp"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "s"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "card"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill2"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill3"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:replace ;
                  sp:arg1 [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          rdf:type sp:replace ;
                          sp:arg1 [
                              sp:varName "s"^^xsd:string ;
                            ] ;
                          sp:arg2 "\\{\\?1}" ;
                          sp:arg3 [
                              sp:varName "fill1"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 "\\{\\?2}" ;
                      sp:arg3 [
                          sp:varName "fill2"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 "\\{\\?3" ;
                  sp:arg3 [
                      sp:varName "fill3"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l5"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Bind ;
        sp:expression [
            rdf:type sp:coalesce ;
            sp:arg1 [
                sp:varName "l1"^^xsd:string ;
              ] ;
            sp:arg2 [
                sp:varName "l2"^^xsd:string ;
              ] ;
            sp:arg3 [
                sp:varName "l3"^^xsd:string ;
              ] ;
            sp:arg4 [
                sp:varName "l4"^^xsd:string ;
              ] ;
            sp:arg5 [
                sp:varName "l5"^^xsd:string ;
              ] ;
            sp:arg6 [
                rdf:type sp:concat ;
                sp:arg1 "NONE" ;
                sp:arg2 [
                    rdf:type sp:str ;
                    sp:arg1 [
                        sp:varName "a1"^^xsd:string ;
                      ] ;
                  ] ;
              ] ;
            sp:arg7 "NO ARG" ;
          ] ;
        sp:variable [
            sp:varName "result"^^xsd:string ;
          ] ;
      ]
    ) ;
].
[
  rdf:type sp:Select ;
  sp:resultVariables (
      [
        sp:varName "result"^^xsd:string ;
      ]
    ) ;
  sp:text """PREFIX  metadata: <http://topbraid.org/metadata#>
PREFIX  skostemplate: <http://topbraid.org/spin/skostemplates#>
PREFIX  tagger: <http://evn.topbraidlive.org/tagger#>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  tops: <http://www.topbraid.org/tops#>
PREFIX  swaclasses: <http://topbraid.org/swaclasses#>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  spif: <http://spinrdf.org/spif#>
PREFIX  crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#>
PREFIX  tables: <http://topbraid.org/tables#>
PREFIX  ui:   <http://uispin.org/ui#>
PREFIX  composite: <http://www.topbraid.org/2007/05/composite.owl#>
PREFIX  swaeditor: <http://topbraid.org/swaeditor#>
PREFIX  sm2wsdl: <http://topbraid.org/sparqlmotion/sm2wsdl.sms#>
PREFIX  html: <http://uispin.org/html#>
PREFIX  let:  <http://uispin.org/let#>
PREFIX  shaclify: <http://topbraid.org/shacl/shaclify#>
PREFIX  spinmapl: <http://topbraid.org/spin/spinmapl#>
PREFIX  tasks: <http://topbraid.org/tasks#>
PREFIX  skosspin: <http://topbraid.org/spin/skosspin#>
PREFIX  discoverytool: <http://www.epa.gov/discoverytool#>
PREFIX  tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#>
PREFIX  qudtspin: <http://qudt.org/spin/qudtspin#>
PREFIX  spl:  <http://spinrdf.org/spl#>
PREFIX  jfn:  <java:com.hp.hpl.jena.sparql.function.library.>
PREFIX  spr:  <http://spinrdf.org/spr#>
PREFIX  taxonomies: <http://evn.topbraidlive.org/evnprojects#>
PREFIX  tbi:  <http://tbi.topbraid.org/tbi#>
PREFIX  letrs: <http://uispin.org/letrs#>
PREFIX  connectset-templates: <http://tbi.topbraidlive.org/system/connectset-templates#>
PREFIX  fn:   <http://www.w3.org/2005/xpath-functions#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  sharepoint: <http://topbraid.org/sharepoint#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  smf:  <http://topbraid.org/sparqlmotionfunctions#>
PREFIX  swauml: <http://topbraid.org/swauml#>
PREFIX  evnconstraints: <http://topbraid.org/spin/evnconstraints#>
PREFIX  sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#>
PREFIX  backspin: <http://topbraid.org/backspin#>
PREFIX  tablesmap: <http://topbraid.org/spin/tablesmap#>
PREFIX  search: <http://topbraid.org/search#>
PREFIX  default: <http://uispin.org/default#>
PREFIX  sml:  <http://topbraid.org/sparqlmotionlib#>
PREFIX  crosswalk: <http://topbraid.org/crosswalk#>
PREFIX  dct:  <http://purl.org/dc/terms/>
PREFIX  arg:  <http://spinrdf.org/arg#>
PREFIX  json: <http://topbraid.org/json#>
PREFIX  sm:   <http://topbraid.org/sparqlmotion#>
PREFIX  spinmap: <http://spinrdf.org/spinmap#>
PREFIX  sp:   <http://spinrdf.org/sp#>
PREFIX  email: <http://topbraid.org/email#>
PREFIX  raci: <http://topbraid.org/raci#>
PREFIX  uix:  <http://topbraidlive.org/uix#>
PREFIX  afn:  <http://jena.hpl.hp.com/ARQ/function#>
PREFIX  unnamed: <http://sc.workingontologist.com/unnamed#>
PREFIX  owlnames: <http://spec.edmcouncil.org/owlnames#>
PREFIX  owlrl: <http://topbraid.org/spin/owlrl#>
PREFIX  daml: <http://www.daml.org/2001/03/daml+oil#>
PREFIX  sxml: <http://topbraid.org/sxml#>
PREFIX  teamwork: <http://topbraid.org/teamwork#>
PREFIX  swon: <http://uispin.org/swon#>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  pf:   <http://jena.hpl.hp.com/ARQ/property#>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  evnui: <http://evn.topbraidlive.org/ui#>
PREFIX  spra: <http://spinrdf.org/spra#>
PREFIX  swa:  <http://topbraid.org/swa#>

SELECT  ?result
WHERE
  { OPTIONAL
      { ?a1 rdfs:label ?l1 }
    OPTIONAL
      { ?a1 rdf:type owl:Restriction .
        ?a1 owl:onProperty ?p .
        ?p rdfs:label ?pl .
        ?a1 (owl:someValuesFrom|owl:allValuesFrom)|owl:hasValue ?rc .
        ?a1 ?op ?rc
        BIND(owlnames:rlabel(?rc) AS ?rcl)
        FILTER ( ?op IN (owl:someValuesFrom, owl:allValuesFrom, owl:hasValue) )
        ?op owlnames:ntemplate ?oplp .
        ?op owlnames:clabel ?oplc
        BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?opl)
        BIND(concat(?pl, \" \", ?opl, \" \", ?rcl) AS ?lx)
        BIND(replace(replace(?opl, \"\\\\{\\\\?1}\", ?pl), \"\\\\{\\\\?2}\", ?rcl) AS ?l2)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Class .
        ?a1 ?oc ?b
        FILTER ( ?oc IN (owl:intersectionOf, owl:unionOf) )
        ?b rdf:first ?car .
        ?b rdf:rest ?cdr .
        ?oc owlnames:ntemplate ?opl
        BIND(concat(owlnames:rlabel(?cdr), \" \", ?opl, \" \", owlnames:rlabel(?car)) AS ?l3)
      }
    OPTIONAL
      { FILTER isBlank(?a1)
        ?a1 rdf:first ?car .
        ?a1 rdf:rest ?cdr
        BIND(if(( ?cdr = rdf:nil ), owlnames:rlabel(?car), concat(owlnames:rlabel(?car), \", \", owlnames:rlabel(?cdr))) AS ?l4)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Restriction .
        ?a1 owl:onProperty ?p .
        ?p rdfs:label ?pl .
        ?a1 owl:onClass ?rc
        LET (?rcl := owlnames:rlabel(?rc))
        ?a1 ?cop ?card
        FILTER ( ?cop IN (owl:minCardinality, owl:maxCardinality, owl:cardinality, owl:minQualifiedCardinality, owl:maxQualifiedCardinality, owl:qualifiedCardinality) )
        ?cop owlnames:ntemplate ?oplp .
        ?cop owlnames:clabel ?oplc
        BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?s)
        BIND(?pl AS ?fill1)
        BIND(?card AS ?fill2)
        BIND(?rcl AS ?fill3)
        BIND(replace(replace(replace(?s, \"\\\\{\\\\?1}\", ?fill1), \"\\\\{\\\\?2}\", ?fill2), \"\\\\{\\\\?3\", ?fill3) AS ?l5)
      }
    BIND(coalesce(?l1, ?l2, ?l3, ?l4, ?l5, concat(\"NONE\", str(?a1)), \"NO ARG\") AS ?result)
  }
"""^^xsd:string ;
  sp:where (
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object [
                  sp:varName "l1"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Restriction ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "p"^^xsd:string ;
                ] ;
              sp:predicate owl:onProperty ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "p"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:TriplePath ;
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:path [
                  rdf:type sp:AltPath ;
                  sp:path1 [
                      rdf:type sp:AltPath ;
                      sp:path1 owl:someValuesFrom ;
                      sp:path2 owl:allValuesFrom ;
                    ] ;
                  sp:path2 owl:hasValue ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "op"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type owlnames:rlabel ;
                  arg:a1 [
                      sp:varName "rc"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "op"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:someValuesFrom ;
                  sp:arg3 owl:allValuesFrom ;
                  sp:arg4 owl:hasValue ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "op"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplc"^^xsd:string ;
                ] ;
              sp:predicate owlnames:clabel ;
              sp:subject [
                  sp:varName "op"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 [
                      sp:varName "oplc"^^xsd:string ;
                    ] ;
                  sp:arg3 [
                      sp:varName "oplp"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "opl"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:concat ;
                  sp:arg1 [
                      sp:varName "pl"^^xsd:string ;
                    ] ;
                  sp:arg2 " " ;
                  sp:arg3 [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:arg4 " " ;
                  sp:arg5 [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "lx"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:replace ;
                  sp:arg1 [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          sp:varName "opl"^^xsd:string ;
                        ] ;
                      sp:arg2 "\\{\\?1}" ;
                      sp:arg3 [
                          sp:varName "pl"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 "\\{\\?2}" ;
                  sp:arg3 [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l2"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Class ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "b"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "oc"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "oc"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:intersectionOf ;
                  sp:arg3 owl:unionOf ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "car"^^xsd:string ;
                ] ;
              sp:predicate rdf:first ;
              sp:subject [
                  sp:varName "b"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "cdr"^^xsd:string ;
                ] ;
              sp:predicate rdf:rest ;
              sp:subject [
                  sp:varName "b"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "opl"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "oc"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:concat ;
                  sp:arg1 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "cdr"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 " " ;
                  sp:arg3 [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:arg4 " " ;
                  sp:arg5 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "car"^^xsd:string ;
                        ] ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l3"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:isBlank ;
                  sp:arg1 [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "car"^^xsd:string ;
                ] ;
              sp:predicate rdf:first ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "cdr"^^xsd:string ;
                ] ;
              sp:predicate rdf:rest ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:eq ;
                      sp:arg1 [
                          sp:varName "cdr"^^xsd:string ;
                        ] ;
                      sp:arg2 () ;
                    ] ;
                  sp:arg2 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "car"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg3 [
                      rdf:type sp:concat ;
                      sp:arg1 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "car"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 ", " ;
                      sp:arg3 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "cdr"^^xsd:string ;
                            ] ;
                        ] ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l4"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Restriction ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "p"^^xsd:string ;
                ] ;
              sp:predicate owl:onProperty ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "p"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:predicate owl:onClass ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type owlnames:rlabel ;
                  arg:a1 [
                      sp:varName "rc"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "card"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "cop"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "cop"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:minCardinality ;
                  sp:arg3 owl:maxCardinality ;
                  sp:arg4 owl:cardinality ;
                  sp:arg5 owl:minQualifiedCardinality ;
                  sp:arg6 owl:maxQualifiedCardinality ;
                  sp:arg7 owl:qualifiedCardinality ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "cop"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplc"^^xsd:string ;
                ] ;
              sp:predicate owlnames:clabel ;
              sp:subject [
                  sp:varName "cop"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 [
                      sp:varName "oplc"^^xsd:string ;
                    ] ;
                  sp:arg3 [
                      sp:varName "oplp"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "s"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "card"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill2"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill3"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:replace ;
                  sp:arg1 [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          rdf:type sp:replace ;
                          sp:arg1 [
                              sp:varName "s"^^xsd:string ;
                            ] ;
                          sp:arg2 "\\{\\?1}" ;
                          sp:arg3 [
                              sp:varName "fill1"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 "\\{\\?2}" ;
                      sp:arg3 [
                          sp:varName "fill2"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 "\\{\\?3" ;
                  sp:arg3 [
                      sp:varName "fill3"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l5"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Bind ;
        sp:expression [
            rdf:type sp:coalesce ;
            sp:arg1 [
                sp:varName "l1"^^xsd:string ;
              ] ;
            sp:arg2 [
                sp:varName "l2"^^xsd:string ;
              ] ;
            sp:arg3 [
                sp:varName "l3"^^xsd:string ;
              ] ;
            sp:arg4 [
                sp:varName "l4"^^xsd:string ;
              ] ;
            sp:arg5 [
                sp:varName "l5"^^xsd:string ;
              ] ;
            sp:arg6 [
                rdf:type sp:concat ;
                sp:arg1 "NONE" ;
                sp:arg2 [
                    rdf:type sp:str ;
                    sp:arg1 [
                        sp:varName "a1"^^xsd:string ;
                      ] ;
                  ] ;
              ] ;
            sp:arg7 "NO ARG" ;
          ] ;
        sp:variable [
            sp:varName "result"^^xsd:string ;
          ] ;
      ]
    ) ;
].
[
  rdf:type sp:Select ;
  sp:resultVariables (
      [
        sp:varName "result"^^xsd:string ;
      ]
    ) ;
  sp:text """PREFIX  metadata: <http://topbraid.org/metadata#>
PREFIX  skostemplate: <http://topbraid.org/spin/skostemplates#>
PREFIX  tagger: <http://evn.topbraidlive.org/tagger#>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  tops: <http://www.topbraid.org/tops#>
PREFIX  swaclasses: <http://topbraid.org/swaclasses#>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  spif: <http://spinrdf.org/spif#>
PREFIX  crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#>
PREFIX  tables: <http://topbraid.org/tables#>
PREFIX  ui:   <http://uispin.org/ui#>
PREFIX  composite: <http://www.topbraid.org/2007/05/composite.owl#>
PREFIX  swaeditor: <http://topbraid.org/swaeditor#>
PREFIX  sm2wsdl: <http://topbraid.org/sparqlmotion/sm2wsdl.sms#>
PREFIX  html: <http://uispin.org/html#>
PREFIX  let:  <http://uispin.org/let#>
PREFIX  shaclify: <http://topbraid.org/shacl/shaclify#>
PREFIX  spinmapl: <http://topbraid.org/spin/spinmapl#>
PREFIX  tasks: <http://topbraid.org/tasks#>
PREFIX  skosspin: <http://topbraid.org/spin/skosspin#>
PREFIX  discoverytool: <http://www.epa.gov/discoverytool#>
PREFIX  tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#>
PREFIX  qudtspin: <http://qudt.org/spin/qudtspin#>
PREFIX  spl:  <http://spinrdf.org/spl#>
PREFIX  jfn:  <java:com.hp.hpl.jena.sparql.function.library.>
PREFIX  spr:  <http://spinrdf.org/spr#>
PREFIX  taxonomies: <http://evn.topbraidlive.org/evnprojects#>
PREFIX  tbi:  <http://tbi.topbraid.org/tbi#>
PREFIX  letrs: <http://uispin.org/letrs#>
PREFIX  connectset-templates: <http://tbi.topbraidlive.org/system/connectset-templates#>
PREFIX  fn:   <http://www.w3.org/2005/xpath-functions#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  sharepoint: <http://topbraid.org/sharepoint#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  smf:  <http://topbraid.org/sparqlmotionfunctions#>
PREFIX  swauml: <http://topbraid.org/swauml#>
PREFIX  evnconstraints: <http://topbraid.org/spin/evnconstraints#>
PREFIX  sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#>
PREFIX  backspin: <http://topbraid.org/backspin#>
PREFIX  tablesmap: <http://topbraid.org/spin/tablesmap#>
PREFIX  search: <http://topbraid.org/search#>
PREFIX  default: <http://uispin.org/default#>
PREFIX  sml:  <http://topbraid.org/sparqlmotionlib#>
PREFIX  crosswalk: <http://topbraid.org/crosswalk#>
PREFIX  dct:  <http://purl.org/dc/terms/>
PREFIX  arg:  <http://spinrdf.org/arg#>
PREFIX  json: <http://topbraid.org/json#>
PREFIX  sm:   <http://topbraid.org/sparqlmotion#>
PREFIX  spinmap: <http://spinrdf.org/spinmap#>
PREFIX  sp:   <http://spinrdf.org/sp#>
PREFIX  email: <http://topbraid.org/email#>
PREFIX  raci: <http://topbraid.org/raci#>
PREFIX  uix:  <http://topbraidlive.org/uix#>
PREFIX  afn:  <http://jena.hpl.hp.com/ARQ/function#>
PREFIX  unnamed: <http://sc.workingontologist.com/unnamed#>
PREFIX  owlnames: <http://spec.edmcouncil.org/owlnames#>
PREFIX  owlrl: <http://topbraid.org/spin/owlrl#>
PREFIX  daml: <http://www.daml.org/2001/03/daml+oil#>
PREFIX  sxml: <http://topbraid.org/sxml#>
PREFIX  teamwork: <http://topbraid.org/teamwork#>
PREFIX  swon: <http://uispin.org/swon#>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  pf:   <http://jena.hpl.hp.com/ARQ/property#>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  evnui: <http://evn.topbraidlive.org/ui#>
PREFIX  spra: <http://spinrdf.org/spra#>
PREFIX  swa:  <http://topbraid.org/swa#>

SELECT  ?result
WHERE
  { OPTIONAL
      { ?a1 rdfs:label ?l1 }
    OPTIONAL
      { ?a1 rdf:type owl:Restriction .
        ?a1 owl:onProperty ?p .
        ?p rdfs:label ?pl .
        ?a1 (owl:someValuesFrom|owl:allValuesFrom)|owl:hasValue ?rc .
        ?a1 ?op ?rc
        BIND(owlnames:rlabel(?rc) AS ?rcl)
        FILTER ( ?op IN (owl:someValuesFrom, owl:allValuesFrom, owl:hasValue) )
        ?op owlnames:ntemplate ?oplp .
        ?op owlnames:clabel ?oplc
        BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?opl)
        BIND(concat(?pl, \" \", ?opl, \" \", ?rcl) AS ?lx)
        BIND(replace(replace(?opl, \"\\\\{\\\\?1}\", ?pl), \"\\\\{\\\\?2}\", ?rcl) AS ?l2)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Class .
        ?a1 ?oc ?b
        FILTER ( ?oc IN (owl:intersectionOf, owl:unionOf) )
        ?b rdf:first ?car .
        ?b rdf:rest ?cdr .
        ?oc owlnames:ntemplate ?opl
        BIND(concat(owlnames:rlabel(?cdr), \" \", ?opl, \" \", owlnames:rlabel(?car)) AS ?l3)
      }
    OPTIONAL
      { FILTER isBlank(?a1)
        ?a1 rdf:first ?car .
        ?a1 rdf:rest ?cdr
        BIND(if(( ?cdr = rdf:nil ), owlnames:rlabel(?car), concat(owlnames:rlabel(?car), \", \", owlnames:rlabel(?cdr))) AS ?l4)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Restriction .
        ?a1 owl:onProperty ?p .
        ?p rdfs:label ?pl .
        ?a1 owl:onClass ?rc
        LET (?rcl := owlnames:rlabel(?rc))
        ?a1 ?cop ?card
        FILTER ( ?cop IN (owl:minCardinality, owl:maxCardinality, owl:cardinality, owl:minQualifiedCardinality, owl:maxQualifiedCardinality, owl:qualifiedCardinality) )
        ?cop owlnames:ntemplate ?oplp .
        ?cop owlnames:clabel ?oplc
        BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?s)
        BIND(?pl AS ?fill1)
        BIND(?card AS ?fill2)
        BIND(?rcl AS ?fill3)
        BIND(replace(replace(replace(?s, \"\\\\{\\\\?1}\", ?fill1), \"\\\\{\\\\?2}\", ?fill2), \"\\\\{\\\\?3\", ?fill3) AS ?l5)
      }
    BIND(coalesce(?l1, ?l2, ?l3, ?l4, ?l5, concat(\"NONE\", str(?a1)), \"NO ARG\") AS ?result)
  }
"""^^xsd:string ;
  sp:where (
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object [
                  sp:varName "l1"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Restriction ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "p"^^xsd:string ;
                ] ;
              sp:predicate owl:onProperty ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "p"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:TriplePath ;
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:path [
                  rdf:type sp:AltPath ;
                  sp:path1 [
                      rdf:type sp:AltPath ;
                      sp:path1 owl:someValuesFrom ;
                      sp:path2 owl:allValuesFrom ;
                    ] ;
                  sp:path2 owl:hasValue ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "op"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type owlnames:rlabel ;
                  arg:a1 [
                      sp:varName "rc"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "op"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:someValuesFrom ;
                  sp:arg3 owl:allValuesFrom ;
                  sp:arg4 owl:hasValue ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "op"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplc"^^xsd:string ;
                ] ;
              sp:predicate owlnames:clabel ;
              sp:subject [
                  sp:varName "op"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 [
                      sp:varName "oplc"^^xsd:string ;
                    ] ;
                  sp:arg3 [
                      sp:varName "oplp"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "opl"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:concat ;
                  sp:arg1 [
                      sp:varName "pl"^^xsd:string ;
                    ] ;
                  sp:arg2 " " ;
                  sp:arg3 [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:arg4 " " ;
                  sp:arg5 [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "lx"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:replace ;
                  sp:arg1 [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          sp:varName "opl"^^xsd:string ;
                        ] ;
                      sp:arg2 "\\{\\?1}" ;
                      sp:arg3 [
                          sp:varName "pl"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 "\\{\\?2}" ;
                  sp:arg3 [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l2"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Class ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "b"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "oc"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "oc"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:intersectionOf ;
                  sp:arg3 owl:unionOf ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "car"^^xsd:string ;
                ] ;
              sp:predicate rdf:first ;
              sp:subject [
                  sp:varName "b"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "cdr"^^xsd:string ;
                ] ;
              sp:predicate rdf:rest ;
              sp:subject [
                  sp:varName "b"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "opl"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "oc"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:concat ;
                  sp:arg1 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "cdr"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 " " ;
                  sp:arg3 [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:arg4 " " ;
                  sp:arg5 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "car"^^xsd:string ;
                        ] ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l3"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:isBlank ;
                  sp:arg1 [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "car"^^xsd:string ;
                ] ;
              sp:predicate rdf:first ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "cdr"^^xsd:string ;
                ] ;
              sp:predicate rdf:rest ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:eq ;
                      sp:arg1 [
                          sp:varName "cdr"^^xsd:string ;
                        ] ;
                      sp:arg2 () ;
                    ] ;
                  sp:arg2 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "car"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg3 [
                      rdf:type sp:concat ;
                      sp:arg1 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "car"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 ", " ;
                      sp:arg3 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "cdr"^^xsd:string ;
                            ] ;
                        ] ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l4"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Restriction ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "p"^^xsd:string ;
                ] ;
              sp:predicate owl:onProperty ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "p"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:predicate owl:onClass ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type owlnames:rlabel ;
                  arg:a1 [
                      sp:varName "rc"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "card"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "cop"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "cop"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:minCardinality ;
                  sp:arg3 owl:maxCardinality ;
                  sp:arg4 owl:cardinality ;
                  sp:arg5 owl:minQualifiedCardinality ;
                  sp:arg6 owl:maxQualifiedCardinality ;
                  sp:arg7 owl:qualifiedCardinality ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "cop"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplc"^^xsd:string ;
                ] ;
              sp:predicate owlnames:clabel ;
              sp:subject [
                  sp:varName "cop"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 [
                      sp:varName "oplc"^^xsd:string ;
                    ] ;
                  sp:arg3 [
                      sp:varName "oplp"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "s"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "card"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill2"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill3"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:replace ;
                  sp:arg1 [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          rdf:type sp:replace ;
                          sp:arg1 [
                              sp:varName "s"^^xsd:string ;
                            ] ;
                          sp:arg2 "\\{\\?1}" ;
                          sp:arg3 [
                              sp:varName "fill1"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 "\\{\\?2}" ;
                      sp:arg3 [
                          sp:varName "fill2"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 "\\{\\?3" ;
                  sp:arg3 [
                      sp:varName "fill3"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l5"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Bind ;
        sp:expression [
            rdf:type sp:coalesce ;
            sp:arg1 [
                sp:varName "l1"^^xsd:string ;
              ] ;
            sp:arg2 [
                sp:varName "l2"^^xsd:string ;
              ] ;
            sp:arg3 [
                sp:varName "l3"^^xsd:string ;
              ] ;
            sp:arg4 [
                sp:varName "l4"^^xsd:string ;
              ] ;
            sp:arg5 [
                sp:varName "l5"^^xsd:string ;
              ] ;
            sp:arg6 [
                rdf:type sp:concat ;
                sp:arg1 "NONE" ;
                sp:arg2 [
                    rdf:type sp:str ;
                    sp:arg1 [
                        sp:varName "a1"^^xsd:string ;
                      ] ;
                  ] ;
              ] ;
            sp:arg7 "NO ARG" ;
          ] ;
        sp:variable [
            sp:varName "result"^^xsd:string ;
          ] ;
      ]
    ) ;
].
[
  rdf:type sp:Select ;
  sp:resultVariables (
      [
        sp:varName "result"^^xsd:string ;
      ]
    ) ;
  sp:text """PREFIX  metadata: <http://topbraid.org/metadata#>
PREFIX  skostemplate: <http://topbraid.org/spin/skostemplates#>
PREFIX  tagger: <http://evn.topbraidlive.org/tagger#>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  tops: <http://www.topbraid.org/tops#>
PREFIX  swaclasses: <http://topbraid.org/swaclasses#>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  spif: <http://spinrdf.org/spif#>
PREFIX  crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#>
PREFIX  tables: <http://topbraid.org/tables#>
PREFIX  ui:   <http://uispin.org/ui#>
PREFIX  composite: <http://www.topbraid.org/2007/05/composite.owl#>
PREFIX  swaeditor: <http://topbraid.org/swaeditor#>
PREFIX  sm2wsdl: <http://topbraid.org/sparqlmotion/sm2wsdl.sms#>
PREFIX  html: <http://uispin.org/html#>
PREFIX  let:  <http://uispin.org/let#>
PREFIX  shaclify: <http://topbraid.org/shacl/shaclify#>
PREFIX  spinmapl: <http://topbraid.org/spin/spinmapl#>
PREFIX  tasks: <http://topbraid.org/tasks#>
PREFIX  skosspin: <http://topbraid.org/spin/skosspin#>
PREFIX  discoverytool: <http://www.epa.gov/discoverytool#>
PREFIX  tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#>
PREFIX  qudtspin: <http://qudt.org/spin/qudtspin#>
PREFIX  spl:  <http://spinrdf.org/spl#>
PREFIX  jfn:  <java:com.hp.hpl.jena.sparql.function.library.>
PREFIX  spr:  <http://spinrdf.org/spr#>
PREFIX  taxonomies: <http://evn.topbraidlive.org/evnprojects#>
PREFIX  tbi:  <http://tbi.topbraid.org/tbi#>
PREFIX  letrs: <http://uispin.org/letrs#>
PREFIX  connectset-templates: <http://tbi.topbraidlive.org/system/connectset-templates#>
PREFIX  fn:   <http://www.w3.org/2005/xpath-functions#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  sharepoint: <http://topbraid.org/sharepoint#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  smf:  <http://topbraid.org/sparqlmotionfunctions#>
PREFIX  swauml: <http://topbraid.org/swauml#>
PREFIX  evnconstraints: <http://topbraid.org/spin/evnconstraints#>
PREFIX  sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#>
PREFIX  backspin: <http://topbraid.org/backspin#>
PREFIX  tablesmap: <http://topbraid.org/spin/tablesmap#>
PREFIX  search: <http://topbraid.org/search#>
PREFIX  default: <http://uispin.org/default#>
PREFIX  sml:  <http://topbraid.org/sparqlmotionlib#>
PREFIX  crosswalk: <http://topbraid.org/crosswalk#>
PREFIX  dct:  <http://purl.org/dc/terms/>
PREFIX  arg:  <http://spinrdf.org/arg#>
PREFIX  json: <http://topbraid.org/json#>
PREFIX  sm:   <http://topbraid.org/sparqlmotion#>
PREFIX  spinmap: <http://spinrdf.org/spinmap#>
PREFIX  sp:   <http://spinrdf.org/sp#>
PREFIX  email: <http://topbraid.org/email#>
PREFIX  raci: <http://topbraid.org/raci#>
PREFIX  uix:  <http://topbraidlive.org/uix#>
PREFIX  afn:  <http://jena.hpl.hp.com/ARQ/function#>
PREFIX  unnamed: <http://sc.workingontologist.com/unnamed#>
PREFIX  owlnames: <http://spec.edmcouncil.org/owlnames#>
PREFIX  owlrl: <http://topbraid.org/spin/owlrl#>
PREFIX  daml: <http://www.daml.org/2001/03/daml+oil#>
PREFIX  sxml: <http://topbraid.org/sxml#>
PREFIX  teamwork: <http://topbraid.org/teamwork#>
PREFIX  swon: <http://uispin.org/swon#>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  pf:   <http://jena.hpl.hp.com/ARQ/property#>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  evnui: <http://evn.topbraidlive.org/ui#>
PREFIX  spra: <http://spinrdf.org/spra#>
PREFIX  swa:  <http://topbraid.org/swa#>

SELECT  ?result
WHERE
  { OPTIONAL
      { ?a1 rdfs:label ?l1 }
    OPTIONAL
      { ?a1 rdf:type owl:Restriction .
        ?a1 owl:onProperty ?p .
        ?p rdfs:label ?pl .
        ?a1 (owl:someValuesFrom|owl:allValuesFrom)|owl:hasValue ?rc .
        ?a1 ?op ?rc
        BIND(owlnames:rlabel(?rc) AS ?rcl)
        FILTER ( ?op IN (owl:someValuesFrom, owl:allValuesFrom, owl:hasValue) )
        ?op owlnames:ntemplate ?oplp .
        ?op owlnames:clabel ?oplc
        BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?opl)
        BIND(concat(?pl, \" \", ?opl, \" \", ?rcl) AS ?lx)
        BIND(replace(replace(?opl, \"\\\\{\\\\?1}\", ?pl), \"\\\\{\\\\?2}\", ?rcl) AS ?l2)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Class .
        ?a1 ?oc ?b
        FILTER ( ?oc IN (owl:intersectionOf, owl:unionOf) )
        ?b rdf:first ?car .
        ?b rdf:rest ?cdr .
        ?oc owlnames:ntemplate ?opl
        BIND(concat(owlnames:rlabel(?cdr), \" \", ?opl, \" \", owlnames:rlabel(?car)) AS ?l3)
      }
    OPTIONAL
      { FILTER isBlank(?a1)
        ?a1 rdf:first ?car .
        ?a1 rdf:rest ?cdr
        BIND(if(( ?cdr = rdf:nil ), owlnames:rlabel(?car), concat(owlnames:rlabel(?car), \", \", owlnames:rlabel(?cdr))) AS ?l4)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Restriction .
        ?a1 owl:onProperty ?p .
        ?p rdfs:label ?pl .
        ?a1 owl:onClass ?rc .
        ?a1 ?cop ?card
        FILTER ( ?cop IN (owl:minCardinality, owl:maxCardinality, owl:cardinality, owl:minQualifiedCardinality, owl:maxQualifiedCardinality, owl:qualifiedCardinality) )
        ?cop owlnames:ntemplate ?oplp .
        ?cop owlnames:clabel ?oplc
        BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?s)
        BIND(?pl AS ?fill1)
        BIND(?card AS ?fill2)
        BIND(?rcl AS ?fill3)
        BIND(replace(replace(replace(?s, \"\\\\{\\\\?1}\", ?fill1), \"\\\\{\\\\?2}\", ?fill2), \"\\\\{\\\\?3\", ?fill3) AS ?l5)
      }
    BIND(coalesce(?l1, ?l2, ?l3, ?l4, ?l5, concat(\"NONE\", str(?a1)), \"NO ARG\") AS ?result)
  }
"""^^xsd:string ;
  sp:where (
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object [
                  sp:varName "l1"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Restriction ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "p"^^xsd:string ;
                ] ;
              sp:predicate owl:onProperty ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "p"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:TriplePath ;
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:path [
                  rdf:type sp:AltPath ;
                  sp:path1 [
                      rdf:type sp:AltPath ;
                      sp:path1 owl:someValuesFrom ;
                      sp:path2 owl:allValuesFrom ;
                    ] ;
                  sp:path2 owl:hasValue ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "op"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type owlnames:rlabel ;
                  arg:a1 [
                      sp:varName "rc"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "op"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:someValuesFrom ;
                  sp:arg3 owl:allValuesFrom ;
                  sp:arg4 owl:hasValue ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "op"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplc"^^xsd:string ;
                ] ;
              sp:predicate owlnames:clabel ;
              sp:subject [
                  sp:varName "op"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 [
                      sp:varName "oplc"^^xsd:string ;
                    ] ;
                  sp:arg3 [
                      sp:varName "oplp"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "opl"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:concat ;
                  sp:arg1 [
                      sp:varName "pl"^^xsd:string ;
                    ] ;
                  sp:arg2 " " ;
                  sp:arg3 [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:arg4 " " ;
                  sp:arg5 [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "lx"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:replace ;
                  sp:arg1 [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          sp:varName "opl"^^xsd:string ;
                        ] ;
                      sp:arg2 "\\{\\?1}" ;
                      sp:arg3 [
                          sp:varName "pl"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 "\\{\\?2}" ;
                  sp:arg3 [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l2"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Class ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "b"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "oc"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "oc"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:intersectionOf ;
                  sp:arg3 owl:unionOf ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "car"^^xsd:string ;
                ] ;
              sp:predicate rdf:first ;
              sp:subject [
                  sp:varName "b"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "cdr"^^xsd:string ;
                ] ;
              sp:predicate rdf:rest ;
              sp:subject [
                  sp:varName "b"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "opl"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "oc"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:concat ;
                  sp:arg1 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "cdr"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 " " ;
                  sp:arg3 [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:arg4 " " ;
                  sp:arg5 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "car"^^xsd:string ;
                        ] ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l3"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:isBlank ;
                  sp:arg1 [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "car"^^xsd:string ;
                ] ;
              sp:predicate rdf:first ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "cdr"^^xsd:string ;
                ] ;
              sp:predicate rdf:rest ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:eq ;
                      sp:arg1 [
                          sp:varName "cdr"^^xsd:string ;
                        ] ;
                      sp:arg2 () ;
                    ] ;
                  sp:arg2 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "car"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg3 [
                      rdf:type sp:concat ;
                      sp:arg1 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "car"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 ", " ;
                      sp:arg3 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "cdr"^^xsd:string ;
                            ] ;
                        ] ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l4"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Restriction ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "p"^^xsd:string ;
                ] ;
              sp:predicate owl:onProperty ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "p"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:predicate owl:onClass ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "card"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "cop"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "cop"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:minCardinality ;
                  sp:arg3 owl:maxCardinality ;
                  sp:arg4 owl:cardinality ;
                  sp:arg5 owl:minQualifiedCardinality ;
                  sp:arg6 owl:maxQualifiedCardinality ;
                  sp:arg7 owl:qualifiedCardinality ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "cop"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplc"^^xsd:string ;
                ] ;
              sp:predicate owlnames:clabel ;
              sp:subject [
                  sp:varName "cop"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 [
                      sp:varName "oplc"^^xsd:string ;
                    ] ;
                  sp:arg3 [
                      sp:varName "oplp"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "s"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "card"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill2"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill3"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:replace ;
                  sp:arg1 [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          rdf:type sp:replace ;
                          sp:arg1 [
                              sp:varName "s"^^xsd:string ;
                            ] ;
                          sp:arg2 "\\{\\?1}" ;
                          sp:arg3 [
                              sp:varName "fill1"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 "\\{\\?2}" ;
                      sp:arg3 [
                          sp:varName "fill2"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 "\\{\\?3" ;
                  sp:arg3 [
                      sp:varName "fill3"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l5"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Bind ;
        sp:expression [
            rdf:type sp:coalesce ;
            sp:arg1 [
                sp:varName "l1"^^xsd:string ;
              ] ;
            sp:arg2 [
                sp:varName "l2"^^xsd:string ;
              ] ;
            sp:arg3 [
                sp:varName "l3"^^xsd:string ;
              ] ;
            sp:arg4 [
                sp:varName "l4"^^xsd:string ;
              ] ;
            sp:arg5 [
                sp:varName "l5"^^xsd:string ;
              ] ;
            sp:arg6 [
                rdf:type sp:concat ;
                sp:arg1 "NONE" ;
                sp:arg2 [
                    rdf:type sp:str ;
                    sp:arg1 [
                        sp:varName "a1"^^xsd:string ;
                      ] ;
                  ] ;
              ] ;
            sp:arg7 "NO ARG" ;
          ] ;
        sp:variable [
            sp:varName "result"^^xsd:string ;
          ] ;
      ]
    ) ;
].
[
  rdf:type sp:Select ;
  sp:resultVariables (
      [
        sp:varName "result"^^xsd:string ;
      ]
    ) ;
  sp:text """PREFIX  metadata: <http://topbraid.org/metadata#>
PREFIX  skostemplate: <http://topbraid.org/spin/skostemplates#>
PREFIX  tagger: <http://evn.topbraidlive.org/tagger#>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  tops: <http://www.topbraid.org/tops#>
PREFIX  swaclasses: <http://topbraid.org/swaclasses#>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  spif: <http://spinrdf.org/spif#>
PREFIX  crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#>
PREFIX  tables: <http://topbraid.org/tables#>
PREFIX  ui:   <http://uispin.org/ui#>
PREFIX  composite: <http://www.topbraid.org/2007/05/composite.owl#>
PREFIX  swaeditor: <http://topbraid.org/swaeditor#>
PREFIX  sm2wsdl: <http://topbraid.org/sparqlmotion/sm2wsdl.sms#>
PREFIX  html: <http://uispin.org/html#>
PREFIX  let:  <http://uispin.org/let#>
PREFIX  shaclify: <http://topbraid.org/shacl/shaclify#>
PREFIX  spinmapl: <http://topbraid.org/spin/spinmapl#>
PREFIX  tasks: <http://topbraid.org/tasks#>
PREFIX  skosspin: <http://topbraid.org/spin/skosspin#>
PREFIX  discoverytool: <http://www.epa.gov/discoverytool#>
PREFIX  tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#>
PREFIX  qudtspin: <http://qudt.org/spin/qudtspin#>
PREFIX  spl:  <http://spinrdf.org/spl#>
PREFIX  jfn:  <java:com.hp.hpl.jena.sparql.function.library.>
PREFIX  spr:  <http://spinrdf.org/spr#>
PREFIX  taxonomies: <http://evn.topbraidlive.org/evnprojects#>
PREFIX  tbi:  <http://tbi.topbraid.org/tbi#>
PREFIX  letrs: <http://uispin.org/letrs#>
PREFIX  connectset-templates: <http://tbi.topbraidlive.org/system/connectset-templates#>
PREFIX  fn:   <http://www.w3.org/2005/xpath-functions#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  sharepoint: <http://topbraid.org/sharepoint#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  smf:  <http://topbraid.org/sparqlmotionfunctions#>
PREFIX  swauml: <http://topbraid.org/swauml#>
PREFIX  evnconstraints: <http://topbraid.org/spin/evnconstraints#>
PREFIX  sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#>
PREFIX  backspin: <http://topbraid.org/backspin#>
PREFIX  tablesmap: <http://topbraid.org/spin/tablesmap#>
PREFIX  search: <http://topbraid.org/search#>
PREFIX  default: <http://uispin.org/default#>
PREFIX  sml:  <http://topbraid.org/sparqlmotionlib#>
PREFIX  crosswalk: <http://topbraid.org/crosswalk#>
PREFIX  dct:  <http://purl.org/dc/terms/>
PREFIX  arg:  <http://spinrdf.org/arg#>
PREFIX  json: <http://topbraid.org/json#>
PREFIX  sm:   <http://topbraid.org/sparqlmotion#>
PREFIX  spinmap: <http://spinrdf.org/spinmap#>
PREFIX  sp:   <http://spinrdf.org/sp#>
PREFIX  email: <http://topbraid.org/email#>
PREFIX  raci: <http://topbraid.org/raci#>
PREFIX  uix:  <http://topbraidlive.org/uix#>
PREFIX  afn:  <http://jena.hpl.hp.com/ARQ/function#>
PREFIX  unnamed: <http://sc.workingontologist.com/unnamed#>
PREFIX  owlnames: <http://spec.edmcouncil.org/owlnames#>
PREFIX  owlrl: <http://topbraid.org/spin/owlrl#>
PREFIX  daml: <http://www.daml.org/2001/03/daml+oil#>
PREFIX  sxml: <http://topbraid.org/sxml#>
PREFIX  teamwork: <http://topbraid.org/teamwork#>
PREFIX  swon: <http://uispin.org/swon#>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  pf:   <http://jena.hpl.hp.com/ARQ/property#>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  evnui: <http://evn.topbraidlive.org/ui#>
PREFIX  spra: <http://spinrdf.org/spra#>
PREFIX  swa:  <http://topbraid.org/swa#>

SELECT  ?result
WHERE
  { OPTIONAL
      { ?a1 rdfs:label ?l1 }
    OPTIONAL
      { ?a1 rdf:type owl:Restriction .
        ?a1 owl:onProperty ?p .
        ?p rdfs:label ?pl .
        ?a1 (owl:someValuesFrom|owl:allValuesFrom)|owl:hasValue ?rc .
        ?a1 ?op ?rc
        BIND(owlnames:rlabel(?rc) AS ?rcl)
        FILTER ( ?op IN (owl:someValuesFrom, owl:allValuesFrom, owl:hasValue) )
        ?op owlnames:ntemplate ?oplp .
        ?op owlnames:clabel ?oplc
        BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?opl)
        BIND(concat(?pl, \" \", ?opl, \" \", ?rcl) AS ?lx)
        BIND(replace(replace(?opl, \"\\\\{\\\\?1}\", ?pl), \"\\\\{\\\\?2}\", ?rcl) AS ?l2)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Class .
        ?a1 ?oc ?b
        FILTER ( ?oc IN (owl:intersectionOf, owl:unionOf) )
        ?b rdf:first ?car .
        ?b rdf:rest ?cdr .
        ?oc owlnames:ntemplate ?opl
        BIND(concat(owlnames:rlabel(?cdr), \" \", ?opl, \" \", owlnames:rlabel(?car)) AS ?l3)
      }
    OPTIONAL
      { FILTER isBlank(?a1)
        ?a1 rdf:first ?car .
        ?a1 rdf:rest ?cdr
        BIND(if(( ?cdr = rdf:nil ), owlnames:rlabel(?car), concat(owlnames:rlabel(?car), \", \", owlnames:rlabel(?cdr))) AS ?l4)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Restriction .
        ?a1 owl:onProperty ?p .
        ?p rdfs:label ?pl .
        ?a1 owl:onClass ?rc .
        ?a1 ?cop ?card
        FILTER ( ?cop IN (owl:minCardinality, owl:maxCardinality, owl:cardinality, owl:minQualifiedCardinality, owl:maxQualifiedCardinality, owl:qualifiedCardinality) )
        ?cop owlnames:ntemplate ?oplp .
        ?cop owlnames:clabel ?oplc
        BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?s)
        BIND(?pl AS ?fill1)
        BIND(?card AS ?fill2)
        BIND(?rcl AS ?fill3)
        BIND(replace(replace(replace(?s, \"\\\\{\\\\?1}\", ?fill1), \"\\\\{\\\\?2}\", ?fill2), \"\\\\{\\\\?3\", ?fill3) AS ?l5)
      }
    BIND(coalesce(?l1, ?l2, ?l3, ?l4, ?l5, concat(\"NONE\", str(?a1)), \"NO ARG\") AS ?result)
  }
"""^^xsd:string ;
  sp:where (
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object [
                  sp:varName "l1"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Restriction ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "p"^^xsd:string ;
                ] ;
              sp:predicate owl:onProperty ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "p"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:TriplePath ;
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:path [
                  rdf:type sp:AltPath ;
                  sp:path1 [
                      rdf:type sp:AltPath ;
                      sp:path1 owl:someValuesFrom ;
                      sp:path2 owl:allValuesFrom ;
                    ] ;
                  sp:path2 owl:hasValue ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "op"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type owlnames:rlabel ;
                  arg:a1 [
                      sp:varName "rc"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "op"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:someValuesFrom ;
                  sp:arg3 owl:allValuesFrom ;
                  sp:arg4 owl:hasValue ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "op"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplc"^^xsd:string ;
                ] ;
              sp:predicate owlnames:clabel ;
              sp:subject [
                  sp:varName "op"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 [
                      sp:varName "oplc"^^xsd:string ;
                    ] ;
                  sp:arg3 [
                      sp:varName "oplp"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "opl"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:concat ;
                  sp:arg1 [
                      sp:varName "pl"^^xsd:string ;
                    ] ;
                  sp:arg2 " " ;
                  sp:arg3 [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:arg4 " " ;
                  sp:arg5 [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "lx"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:replace ;
                  sp:arg1 [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          sp:varName "opl"^^xsd:string ;
                        ] ;
                      sp:arg2 "\\{\\?1}" ;
                      sp:arg3 [
                          sp:varName "pl"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 "\\{\\?2}" ;
                  sp:arg3 [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l2"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Class ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "b"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "oc"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "oc"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:intersectionOf ;
                  sp:arg3 owl:unionOf ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "car"^^xsd:string ;
                ] ;
              sp:predicate rdf:first ;
              sp:subject [
                  sp:varName "b"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "cdr"^^xsd:string ;
                ] ;
              sp:predicate rdf:rest ;
              sp:subject [
                  sp:varName "b"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "opl"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "oc"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:concat ;
                  sp:arg1 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "cdr"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 " " ;
                  sp:arg3 [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:arg4 " " ;
                  sp:arg5 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "car"^^xsd:string ;
                        ] ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l3"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:isBlank ;
                  sp:arg1 [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "car"^^xsd:string ;
                ] ;
              sp:predicate rdf:first ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "cdr"^^xsd:string ;
                ] ;
              sp:predicate rdf:rest ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:eq ;
                      sp:arg1 [
                          sp:varName "cdr"^^xsd:string ;
                        ] ;
                      sp:arg2 () ;
                    ] ;
                  sp:arg2 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "car"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg3 [
                      rdf:type sp:concat ;
                      sp:arg1 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "car"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 ", " ;
                      sp:arg3 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "cdr"^^xsd:string ;
                            ] ;
                        ] ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l4"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Restriction ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "p"^^xsd:string ;
                ] ;
              sp:predicate owl:onProperty ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "p"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:predicate owl:onClass ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "card"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "cop"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "cop"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:minCardinality ;
                  sp:arg3 owl:maxCardinality ;
                  sp:arg4 owl:cardinality ;
                  sp:arg5 owl:minQualifiedCardinality ;
                  sp:arg6 owl:maxQualifiedCardinality ;
                  sp:arg7 owl:qualifiedCardinality ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "cop"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplc"^^xsd:string ;
                ] ;
              sp:predicate owlnames:clabel ;
              sp:subject [
                  sp:varName "cop"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 [
                      sp:varName "oplc"^^xsd:string ;
                    ] ;
                  sp:arg3 [
                      sp:varName "oplp"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "s"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "card"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill2"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill3"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:replace ;
                  sp:arg1 [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          rdf:type sp:replace ;
                          sp:arg1 [
                              sp:varName "s"^^xsd:string ;
                            ] ;
                          sp:arg2 "\\{\\?1}" ;
                          sp:arg3 [
                              sp:varName "fill1"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 "\\{\\?2}" ;
                      sp:arg3 [
                          sp:varName "fill2"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 "\\{\\?3" ;
                  sp:arg3 [
                      sp:varName "fill3"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l5"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Bind ;
        sp:expression [
            rdf:type sp:coalesce ;
            sp:arg1 [
                sp:varName "l1"^^xsd:string ;
              ] ;
            sp:arg2 [
                sp:varName "l2"^^xsd:string ;
              ] ;
            sp:arg3 [
                sp:varName "l3"^^xsd:string ;
              ] ;
            sp:arg4 [
                sp:varName "l4"^^xsd:string ;
              ] ;
            sp:arg5 [
                sp:varName "l5"^^xsd:string ;
              ] ;
            sp:arg6 [
                rdf:type sp:concat ;
                sp:arg1 "NONE" ;
                sp:arg2 [
                    rdf:type sp:str ;
                    sp:arg1 [
                        sp:varName "a1"^^xsd:string ;
                      ] ;
                  ] ;
              ] ;
            sp:arg7 "NO ARG" ;
          ] ;
        sp:variable [
            sp:varName "result"^^xsd:string ;
          ] ;
      ]
    ) ;
].
[
  rdf:type sp:Select ;
  sp:resultVariables (
      [
        sp:varName "result"^^xsd:string ;
      ]
    ) ;
  sp:text """PREFIX  metadata: <http://topbraid.org/metadata#>
PREFIX  skostemplate: <http://topbraid.org/spin/skostemplates#>
PREFIX  tagger: <http://evn.topbraidlive.org/tagger#>
PREFIX  owl:  <http://www.w3.org/2002/07/owl#>
PREFIX  tops: <http://www.topbraid.org/tops#>
PREFIX  swaclasses: <http://topbraid.org/swaclasses#>
PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX  spif: <http://spinrdf.org/spif#>
PREFIX  crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#>
PREFIX  tables: <http://topbraid.org/tables#>
PREFIX  ui:   <http://uispin.org/ui#>
PREFIX  composite: <http://www.topbraid.org/2007/05/composite.owl#>
PREFIX  swaeditor: <http://topbraid.org/swaeditor#>
PREFIX  sm2wsdl: <http://topbraid.org/sparqlmotion/sm2wsdl.sms#>
PREFIX  html: <http://uispin.org/html#>
PREFIX  let:  <http://uispin.org/let#>
PREFIX  shaclify: <http://topbraid.org/shacl/shaclify#>
PREFIX  spinmapl: <http://topbraid.org/spin/spinmapl#>
PREFIX  tasks: <http://topbraid.org/tasks#>
PREFIX  skosspin: <http://topbraid.org/spin/skosspin#>
PREFIX  discoverytool: <http://www.epa.gov/discoverytool#>
PREFIX  tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#>
PREFIX  qudtspin: <http://qudt.org/spin/qudtspin#>
PREFIX  spl:  <http://spinrdf.org/spl#>
PREFIX  jfn:  <java:com.hp.hpl.jena.sparql.function.library.>
PREFIX  spr:  <http://spinrdf.org/spr#>
PREFIX  taxonomies: <http://evn.topbraidlive.org/evnprojects#>
PREFIX  tbi:  <http://tbi.topbraid.org/tbi#>
PREFIX  letrs: <http://uispin.org/letrs#>
PREFIX  connectset-templates: <http://tbi.topbraidlive.org/system/connectset-templates#>
PREFIX  fn:   <http://www.w3.org/2005/xpath-functions#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  sharepoint: <http://topbraid.org/sharepoint#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  smf:  <http://topbraid.org/sparqlmotionfunctions#>
PREFIX  swauml: <http://topbraid.org/swauml#>
PREFIX  evnconstraints: <http://topbraid.org/spin/evnconstraints#>
PREFIX  sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#>
PREFIX  backspin: <http://topbraid.org/backspin#>
PREFIX  tablesmap: <http://topbraid.org/spin/tablesmap#>
PREFIX  search: <http://topbraid.org/search#>
PREFIX  default: <http://uispin.org/default#>
PREFIX  sml:  <http://topbraid.org/sparqlmotionlib#>
PREFIX  crosswalk: <http://topbraid.org/crosswalk#>
PREFIX  dct:  <http://purl.org/dc/terms/>
PREFIX  arg:  <http://spinrdf.org/arg#>
PREFIX  json: <http://topbraid.org/json#>
PREFIX  sm:   <http://topbraid.org/sparqlmotion#>
PREFIX  spinmap: <http://spinrdf.org/spinmap#>
PREFIX  sp:   <http://spinrdf.org/sp#>
PREFIX  email: <http://topbraid.org/email#>
PREFIX  raci: <http://topbraid.org/raci#>
PREFIX  uix:  <http://topbraidlive.org/uix#>
PREFIX  afn:  <http://jena.hpl.hp.com/ARQ/function#>
PREFIX  unnamed: <http://sc.workingontologist.com/unnamed#>
PREFIX  owlnames: <http://spec.edmcouncil.org/owlnames#>
PREFIX  owlrl: <http://topbraid.org/spin/owlrl#>
PREFIX  daml: <http://www.daml.org/2001/03/daml+oil#>
PREFIX  sxml: <http://topbraid.org/sxml#>
PREFIX  teamwork: <http://topbraid.org/teamwork#>
PREFIX  swon: <http://uispin.org/swon#>
PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX  pf:   <http://jena.hpl.hp.com/ARQ/property#>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  evnui: <http://evn.topbraidlive.org/ui#>
PREFIX  spra: <http://spinrdf.org/spra#>
PREFIX  swa:  <http://topbraid.org/swa#>

SELECT  ?result
WHERE
  { OPTIONAL
      { ?a1 rdfs:label ?l1 }
    OPTIONAL
      { ?a1 rdf:type owl:Restriction .
        ?a1 owl:onProperty ?p .
        ?p rdfs:label ?pl .
        ?a1 (owl:someValuesFrom|owl:allValuesFrom)|owl:hasValue ?rc .
        ?a1 ?op ?rc
        BIND(owlnames:rlabel(?rc) AS ?rcl)
        FILTER ( ?op IN (owl:someValuesFrom, owl:allValuesFrom, owl:hasValue) )
        ?op owlnames:ntemplate ?oplp .
        ?op owlnames:clabel ?oplc
        BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?opl)
        BIND(concat(?pl, \" \", ?opl, \" \", ?rcl) AS ?lx)
        BIND(replace(replace(?opl, \"\\\\{\\\\?1}\", ?pl), \"\\\\{\\\\?2}\", ?rcl) AS ?l2)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Class .
        ?a1 ?oc ?b
        FILTER ( ?oc IN (owl:intersectionOf, owl:unionOf) )
        ?b rdf:first ?car .
        ?b rdf:rest ?cdr .
        ?oc owlnames:ntemplate ?opl
        BIND(concat(owlnames:rlabel(?cdr), \" \", ?opl, \" \", owlnames:rlabel(?car)) AS ?l3)
      }
    OPTIONAL
      { FILTER isBlank(?a1)
        ?a1 rdf:first ?car .
        ?a1 rdf:rest ?cdr
        BIND(if(( ?cdr = rdf:nil ), owlnames:rlabel(?car), concat(owlnames:rlabel(?car), \", \", owlnames:rlabel(?cdr))) AS ?l4)
      }
    OPTIONAL
      { ?a1 rdf:type owl:Restriction .
        ?a1 owl:onProperty ?p .
        ?p rdfs:label ?pl .
        ?a1 owl:onClass ?rc .
        ?a1 ?cop ?card
        FILTER ( ?cop IN (owl:minCardinality, owl:maxCardinality, owl:cardinality, owl:minQualifiedCardinality, owl:maxQualifiedCardinality, owl:qualifiedCardinality) )
        ?cop owlnames:ntemplate ?oplp .
        ?cop owlnames:clabel ?oplc
        BIND(if(isBlank(?rc), ?oplc, ?oplp) AS ?s)
        BIND(?pl AS ?fill1)
        BIND(?card AS ?fill2)
        BIND(?rcl AS ?fill3)
        BIND(replace(replace(replace(?s, \"\\\\{\\\\?1}\", ?fill1), \"\\\\{\\\\?2}\", ?fill2), \"\\\\{\\\\?3\", ?fill3) AS ?l5)
      }
    BIND(coalesce(?l1, ?l2, ?l3, ?l4, ?l5, concat(\"NONE\", str(?a1)), \"NO ARG\") AS ?result)
  }
"""^^xsd:string ;
  sp:where (
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object [
                  sp:varName "l1"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Restriction ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "p"^^xsd:string ;
                ] ;
              sp:predicate owl:onProperty ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "p"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:TriplePath ;
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:path [
                  rdf:type sp:AltPath ;
                  sp:path1 [
                      rdf:type sp:AltPath ;
                      sp:path1 owl:someValuesFrom ;
                      sp:path2 owl:allValuesFrom ;
                    ] ;
                  sp:path2 owl:hasValue ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "op"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type owlnames:rlabel ;
                  arg:a1 [
                      sp:varName "rc"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "op"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:someValuesFrom ;
                  sp:arg3 owl:allValuesFrom ;
                  sp:arg4 owl:hasValue ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "op"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplc"^^xsd:string ;
                ] ;
              sp:predicate owlnames:clabel ;
              sp:subject [
                  sp:varName "op"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 [
                      sp:varName "oplc"^^xsd:string ;
                    ] ;
                  sp:arg3 [
                      sp:varName "oplp"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "opl"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:concat ;
                  sp:arg1 [
                      sp:varName "pl"^^xsd:string ;
                    ] ;
                  sp:arg2 " " ;
                  sp:arg3 [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:arg4 " " ;
                  sp:arg5 [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "lx"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:replace ;
                  sp:arg1 [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          sp:varName "opl"^^xsd:string ;
                        ] ;
                      sp:arg2 "\\{\\?1}" ;
                      sp:arg3 [
                          sp:varName "pl"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 "\\{\\?2}" ;
                  sp:arg3 [
                      sp:varName "rcl"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l2"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Class ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "b"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "oc"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "oc"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:intersectionOf ;
                  sp:arg3 owl:unionOf ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "car"^^xsd:string ;
                ] ;
              sp:predicate rdf:first ;
              sp:subject [
                  sp:varName "b"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "cdr"^^xsd:string ;
                ] ;
              sp:predicate rdf:rest ;
              sp:subject [
                  sp:varName "b"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "opl"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "oc"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:concat ;
                  sp:arg1 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "cdr"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 " " ;
                  sp:arg3 [
                      sp:varName "opl"^^xsd:string ;
                    ] ;
                  sp:arg4 " " ;
                  sp:arg5 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "car"^^xsd:string ;
                        ] ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l3"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:isBlank ;
                  sp:arg1 [
                      sp:varName "a1"^^xsd:string ;
                    ] ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "car"^^xsd:string ;
                ] ;
              sp:predicate rdf:first ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "cdr"^^xsd:string ;
                ] ;
              sp:predicate rdf:rest ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:eq ;
                      sp:arg1 [
                          sp:varName "cdr"^^xsd:string ;
                        ] ;
                      sp:arg2 () ;
                    ] ;
                  sp:arg2 [
                      rdf:type owlnames:rlabel ;
                      arg:a1 [
                          sp:varName "car"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg3 [
                      rdf:type sp:concat ;
                      sp:arg1 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "car"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 ", " ;
                      sp:arg3 [
                          rdf:type owlnames:rlabel ;
                          arg:a1 [
                              sp:varName "cdr"^^xsd:string ;
                            ] ;
                        ] ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l4"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Optional ;
        sp:elements (
            [
              sp:object owl:Restriction ;
              sp:predicate rdf:type ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "p"^^xsd:string ;
                ] ;
              sp:predicate owl:onProperty ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:predicate rdfs:label ;
              sp:subject [
                  sp:varName "p"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "rc"^^xsd:string ;
                ] ;
              sp:predicate owl:onClass ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "card"^^xsd:string ;
                ] ;
              sp:predicate [
                  sp:varName "cop"^^xsd:string ;
                ] ;
              sp:subject [
                  sp:varName "a1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Filter ;
              sp:expression [
                  rdf:type sp:in ;
                  sp:arg1 [
                      sp:varName "cop"^^xsd:string ;
                    ] ;
                  sp:arg2 owl:minCardinality ;
                  sp:arg3 owl:maxCardinality ;
                  sp:arg4 owl:cardinality ;
                  sp:arg5 owl:minQualifiedCardinality ;
                  sp:arg6 owl:maxQualifiedCardinality ;
                  sp:arg7 owl:qualifiedCardinality ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplp"^^xsd:string ;
                ] ;
              sp:predicate owlnames:ntemplate ;
              sp:subject [
                  sp:varName "cop"^^xsd:string ;
                ] ;
            ]
            [
              sp:object [
                  sp:varName "oplc"^^xsd:string ;
                ] ;
              sp:predicate owlnames:clabel ;
              sp:subject [
                  sp:varName "cop"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:if ;
                  sp:arg1 [
                      rdf:type sp:isBlank ;
                      sp:arg1 [
                          sp:varName "rc"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 [
                      sp:varName "oplc"^^xsd:string ;
                    ] ;
                  sp:arg3 [
                      sp:varName "oplp"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "s"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "pl"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill1"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "card"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill2"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  sp:varName "rcl"^^xsd:string ;
                ] ;
              sp:variable [
                  sp:varName "fill3"^^xsd:string ;
                ] ;
            ]
            [
              rdf:type sp:Bind ;
              sp:expression [
                  rdf:type sp:replace ;
                  sp:arg1 [
                      rdf:type sp:replace ;
                      sp:arg1 [
                          rdf:type sp:replace ;
                          sp:arg1 [
                              sp:varName "s"^^xsd:string ;
                            ] ;
                          sp:arg2 "\\{\\?1}" ;
                          sp:arg3 [
                              sp:varName "fill1"^^xsd:string ;
                            ] ;
                        ] ;
                      sp:arg2 "\\{\\?2}" ;
                      sp:arg3 [
                          sp:varName "fill2"^^xsd:string ;
                        ] ;
                    ] ;
                  sp:arg2 "\\{\\?3" ;
                  sp:arg3 [
                      sp:varName "fill3"^^xsd:string ;
                    ] ;
                ] ;
              sp:variable [
                  sp:varName "l5"^^xsd:string ;
                ] ;
            ]
          ) ;
      ]
      [
        rdf:type sp:Bind ;
        sp:expression [
            rdf:type sp:coalesce ;
            sp:arg1 [
                sp:varName "l1"^^xsd:string ;
              ] ;
            sp:arg2 [
                sp:varName "l2"^^xsd:string ;
              ] ;
            sp:arg3 [
                sp:varName "l3"^^xsd:string ;
              ] ;
            sp:arg4 [
                sp:varName "l4"^^xsd:string ;
              ] ;
            sp:arg5 [
                sp:varName "l5"^^xsd:string ;
              ] ;
            sp:arg6 [
                rdf:type sp:concat ;
                sp:arg1 "NONE" ;
                sp:arg2 [
                    rdf:type sp:str ;
                    sp:arg1 [
                        sp:varName "a1"^^xsd:string ;
                      ] ;
                  ] ;
              ] ;
            sp:arg7 "NO ARG" ;
          ] ;
        sp:variable [
            sp:varName "result"^^xsd:string ;
          ] ;
      ]
    ) ;
].
