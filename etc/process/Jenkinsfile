//
// The main Jenkinsfile for FIBO, defining the Build/Publish/Test/Deploy process that is
// executed for each push into the repository.
//
// Note that this file is in the so called "Scripted Pipeline" syntax which gives
// us more options than the "Declarative Pipeline" syntax.
//
// See https://jenkins.io/doc/book/pipeline/jenkinsfile/
//

properties([
    buildDiscarder(
        logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '5')
    ),
    pipelineTriggers([])
])

GIT_BRANCH = ""
GIT_TAG_NAME = ""

stage('Prepare') {
    //
    // Run the prepare stage on the stardog node, check out all the repos there
    //
    // NOTE: For now it' the stardog node since we have more processing power there and there are things
    // installed there that we don't have on the jenkins master (such as "nix.sh")
    //
    node('stardog') {
        //
        // First check out the fibo repo' content into the ./fibo directory
        //
        dir('fibo') {
            checkout scm
            echo 'Checked out fibo repo'
            sh 'ls -al'
            dir('etc/process') {
                stash includes: 'fibo-copy-to-site.sh', name: 'fibo-copy-to-site-script'
            }
        }
        //
        // Then check out the fibo-infra repo content into the ./fibo-infra directory
        //
        dir('fibo-infra') {
            //
            // If you want to check out a specific version of fibo-infra add the "branch:" parameter
            //
            //git branch: 'INFRA-161', credentialsId: 'edmcjenkins_at_edmcouncil.org', url: 'git@github.com:edmcouncil/fibo-infra.git'
            //
            git credentialsId: 'edmcjenkins_at_edmcouncil.org', url: 'git@github.com:edmcouncil/fibo-infra.git'
            echo 'Checked out fibo-infra repo'
            //
            // Stash the nomagic templates so that they can be unstashed on the nomagix box
            //
            stash includes: 'magicdraw/Concept Modeler/**', name: 'nomagic-templates'
        }
        //
        // Then check out the LCC repo into the ./LCC directory
        //
        dir('LCC') {
            git url: 'https://github.com/edmcouncil/LCC.git', credentialsId: 'edmcjenkins'
            echo 'Checked out the LCC repo'
        }
        echo 'Checked it all out'
        //
        // Then copy the rdf-toolkit.jar file artifact from the rdf-toolkit-build job
        //
        step([$class: 'CopyArtifact', filter: '**/rdf-toolkit.jar', fingerprintArtifacts: true, flatten: true, projectName: 'rdf-toolkit-build'])
        //
        // Then copy the pellet jar from the build-pellet job
        //
        step([$class: 'CopyArtifact', filter: '**/pellet-cli-*.jar', fingerprintArtifacts: true, flatten: true, projectName: 'build-pellet', target: 'pellet'])
    }
}

stage('Build') {
    //
    // Run on the stardog node
    //
    // NOTE: For now it' the stardog node since we have more processing power there and there are things
    // installed there that we don't have on the jenkins master (such as "nix.sh")
    //
    parallel "publish-script" : {
        node('stardog') {

            dir('fibo') {
                GIT_BRANCH = sh returnStdout: true, script: 'git rev-parse --abbrev-ref HEAD'
                //
                // Replace all slashes in a branch name with dashes so that we don't mess up the URLs for the ontologies
                //
                GIT_BRANCH = GIT_BRANCH.trim().toLowerCase()
                echo "GIT_BRANCH=${GIT_BRANCH}"

                GIT_BRANCH = GIT_BRANCH.replaceAll('\\\\', '-')
                echo "GIT_BRANCH=${GIT_BRANCH}"
                //
                // Get the git tag name if the current commit points is pointed to by a tag
                //
                GIT_TAG_NAME = sh returnStdout: true, script: 'set +e ; git describe --contains 2>/dev/null | exit 0'
                GIT_TAG_NAME = GIT_TAG_NAME.trim()
                if (GIT_TAG_NAME?.trim()) {
                    GIT_TAG_NAME = "latest"
                }
                echo "GIT_TAG_NAME=${GIT_TAG_NAME}"
            }
            //
            // Execute the publish script
            //
            // TODO: Split this script up in separate "stages" in this repository
            //
            dir('fibo-infra') {
                echo "Execute the publish-fibo.sh script:"
                sh "set -x ; export GIT_BRANCH=${GIT_BRANCH} ; export GIT_TAG_NAME=${GIT_TAG_NAME} ; ./jenkins/bin/publish-fibo.sh"
            }
            //
            // Archive the artifacts
            //
            //archiveArtifacts artifacts: 'target/**', fingerprint: true, onlyIfSuccessful: true
            //
            // Also via stash. If this works, the archiveArtifacts line abpve is not needed
            //
            stash includes: 'target/**', name: 'fibo-publish-script'
        }
    },
    //
    // Build the artifacts that that need the nomagic installation
    //
    "nomagic" : {
        node('nomagic') {
            unstash 'nomagic-templates'
            echo "Executing generate script on the nomagic box"
            //
            // Copy the nomagic templates (as they are stored in the fibo-infra repo)
            // to the right location
            //
            dir('magicdraw/Concept Modeler') {
                sh 'pwd'
                sh 'find .'
                sh 'cp -vr . /home/ec2-user/MagicDraw/data/defaults/data/reports/Concept\\ Modeler/'
            }

            script = """
                |#!/bin/bash -x
                |
                |export DISPLAY=localhost:10.0
                |whoami
                |pwd
                |
                |#/home/ec2-user/dev.sh
                |/home/ec2-user/MagicDraw/plugins/com.nomagic.magicdraw.reportwizard/generate.sh \\
                |    -login "EDMCJenkins" \\
                |    -server "twc184.nomagic.com:3579" \\
                |    -password "hZ7LQF_kmFV-6N2E" \\
                |    -project "FIBO-Master" \\
                |    -template "Natural Language Glossary" \\
                |    -package "Release;Provisional;Informative" \\
                |    -output "DEVELOPMENT.html" \\
                |    -servertype "twcloud" \\
                |    -report "Default Development FIBO"
                |rc=\$?
                |echo rc=\${rc}
                |
                |#/home/ec2-user/prod.sh
                |/home/ec2-user/MagicDraw/plugins/com.nomagic.magicdraw.reportwizard/generate.sh \\
                |    -login "EDMCJenkins" \\
                |    -server "twc184.nomagic.com:3579" \\
                |    -password "hZ7LQF_kmFV-6N2E" \\
                |    -project "FIBO-Master" \\
                |    -template "Natural Language Glossary" \\
                |    -package "Release" \\
                |    -output "PRODUCTION.html" \\
                |    -servertype "twcloud" \\
                |    -report "Default Production FIBO"
                |rc=\$?
                |echo rc=\${rc}
                |
                |cp /home/ec2-user/MagicDraw/plugins/com.nomagic.magicdraw.reportwizard/*.html .
                |
                |cp -r /home/ec2-user/MagicDraw/plugins/com.nomagic.magicdraw.reportwizard/resources .
                |
                |sed -i DEVELOPMENT.html -e 's!<br>!<br/>!g'
                |sed -i PRODUCTION.html -e 's!<br>!<br/>!g'
                |
                |sed -e '/<script /,/<\\/script>/d' DEVELOPMENT.html > DEVIN.html
                |sed -e '/<script /,/<\\/script>/d' PRODUCTION.html > PRODIN.html
                |
                |chmod a+x  ~/workspace/NoMagic/fibo-publish-nomagic/bin/SaxonHE9-8-0-4J/*.jar
                |
                |java \\
                |    -cp ~/workspace/NoMagic/fibo-publish-nomagic/bin/SaxonHE9-8-0-4J/saxon9he.jar \\
                |    net.sf.saxon.Transform \\
                |    -o:datadictionaryDEV.csv \\
                |    -xsl:./jenkins/bin/glossary-to-csv.xsl \\
                |    DEVIN.html
                |java \\
                |    -cp ~/workspace/NoMagic/fibo-publish-nomagic/bin/SaxonHE9-8-0-4J/saxon9he.jar \\
                |    net.sf.saxon.Transform \\
                |    -o:datadictionaryPROD.csv \\
                |    -xsl:./jenkins/bin/glossary-to-csv.xsl \\
                |    PRODIN.html
                |
                |#cat /home/ec2-user/dev.sh
                |#cat /home/ec2-user/prod.sh
                |cat /home/ec2-user/MagicDraw/plugins/com.nomagic.magicdraw.reportwizard/generate.sh
                |
                |#exit 0
                |## Below this line is the code that JG put there as an alternative to the above (newer) code
                |
                |#unset DISPLAY
                |
                |#if ! cd /home/ec2-user/MagicDraw ; then
                |#    echo "Could not find MagicDraw directory"
                |#    exit 1
                |#fi
                |#if ! cd ./plugins/com.nomagic.magicdraw.reportwizard ; then
                |#    echo "Could not find MagicDraw report wizard"
                |#    exit 1
                |#fi
                |
                |#./generate.sh \\
                |#    -login "EDMCJenkins" \\
                |#    -server "twc184.nomagic.com:3579" \\
                |#    -password "hZ7LQF_kmFV-6N2E" \\
                |#    -project "FIBO-Master" \\
                |#    -template "Natural Language Glossary for FIBO versions" \\
                |#    -package "Release;Provisional;Informative" \\
                |#    -output "${WORKSPACE}/development.html" \\
                |#    -servertype "twcloud" \\
                |#    -report "Development"
                |
                |#./generate.sh \\
                |#    -login "EDMCJenkins" \\
                |#    -server "twc184.nomagic.com:3579" \\
                |#    -password "hZ7LQF_kmFV-6N2E" \\
                |#    -project "FIBO-Master" \\
                |#    -template "Natural Language Glossary for FIBO versions" \\
                |#    -package "Release" \\
                |#    -output "${WORKSPACE}/production.html" \\
                |#    -servertype "twcloud" \\
                |#    -report "Production"
            """.stripMargin('|')

            echo "script=${script}-end-of-script"

            echo "Executing script:"
            sh ${script}

            stash includes: '*.html', name: 'nomagic-output'
        }
    }
}

stage('Publish') {
    //
    // Run the publish on master by just copying all the generated artifacts right into the workspace
    // on master and let NGINX just serve it from there.
    //
    // This workspace will never be "wiped" so it contains all the older versions as well, wiping this workspace
    // will be bad because we would lose all previously published versions
    //
    //
    node('stardog') {

        dir('target') {

            echo 'Unstashing nomagic output:'
            unstash 'nomagic-output'
            sh 'ls -al'

            unstash 'fibo-copy-to-site-script'
            sh './fibo-copy-to-site.sh'

            sh 'ls -al /mnt/jenkins-disk/spec.edmcouncil.org/'
            sh 'cp -vr . /mnt/jenkins-disk/spec.edmcouncil.org/'
        }
    }
}

