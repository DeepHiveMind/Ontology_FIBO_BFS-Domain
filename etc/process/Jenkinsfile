//
// The main Jenkinsfile for FIBO, defining the Build/Publish/Test/Deploy process that is
// executed for each push into the repository.
//
// Note that this file is in the so called "Scripted Pipeline" syntax which gives
// us more options than the "Declarative Pipeline" syntax.
//
// See https://jenkins.io/doc/book/pipeline/jenkinsfile/
//
stage('Prepare') {

    properties([
        buildDiscarder(
            logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '5')
        ),
        pipelineTriggers([])
    ])

    //
    // Run on the stardog node
    //
    // NOTE: For now it' the stardog node since we have more processing power there and there are things
    // installed there that we don't have on the jenkins master (such as "nix.sh")
    //
    node('stardog') {
        //
        // First check out the fibo repo' content into the ./fibo directory
        //
        dir('fibo') {
            checkout scm
            echo 'Checked out fibo repo'
            sh 'ls -al'
        }
        //
        // Then check out the fibo-infra repo content into the ./fibo-infra directory
        //
        dir('fibo-infra') {
            //
            // If you want to check out a specific version of fibo-infra add the "branch:" parameter
            //
            //git branch: 'INFRA-161', credentialsId: 'edmcjenkins_at_edmcouncil.org', url: 'git@github.com:edmcouncil/fibo-infra.git'
            //
            git credentialsId: 'edmcjenkins_at_edmcouncil.org', url: 'git@github.com:edmcouncil/fibo-infra.git'
            echo 'Checked out fibo-infra repo'
        }
        //
        // Then check out the LCC repo into the ./LCC directory
        //
        dir('LCC') {
            git url: 'https://github.com/edmcouncil/LCC.git', credentialsId: 'edmcjenkins'
            echo 'Checked out the LCC repo'
        }
        echo 'Checked it all out'
        //
        // Then copy the rdf-toolkit.jar file artifact from the rdf-toolkit-build job
        //
        step([$class: 'CopyArtifact', filter: '**/rdf-toolkit.jar', fingerprintArtifacts: true, flatten: true, projectName: 'rdf-toolkit-build'])
        //
        // Then copy the pellet jar from the build-pellet job
        //
        step([$class: 'CopyArtifact', filter: '**/pellet-cli-*.jar', fingerprintArtifacts: true, flatten: true, projectName: 'build-pellet', target: 'pellet'])
    }
}

stage('Build') {
    //
    // Run on the stardog node
    //
    // NOTE: For now it' the stardog node since we have more processing power there and there are things
    // installed there that we don't have on the jenkins master (such as "nix.sh")
    //
    node('stardog') {
        //
        // Execute the publish script
        //
        // TODO: Split this script up in separate "stages" in this repository
        //
        dir('fibo-infra') {
            sh './jenkins/bin/publish-fibo.sh'
        }
        //
        // Archive the artifacts
        //
        //archiveArtifacts artifacts: 'target/**', fingerprint: true, onlyIfSuccessful: true
        //
        // Also via stash. If this works, the archiveArtifacts line abpve is not needed
        //
        stash includes: 'target/**', name: 'fibo-publish-script'

    }
    //
    // Build the artifacts that that need the nomagic installation
    //
    node('nomagic') {
        withEnv(['DISPLAY=localhost:10.0']) {
            sh """#!/bin/bash -x
              ./home/ec2-user/dev.sh
              ./home/ec2-user/prod.sh
            """
        }
        sh 'cp /home/ec2-user/MagicDraw/plugins/com.nomagic.magicdraw.reportwizard/*.html .'
        stash includes: '*.html', name: 'nomagic-output'
    }
}

stage('Publish') {
    //
    // Run the publish on master by just copying all the generated artifacts right into the workspace
    // on master and let NGINX just serve it from there.
    //
    // This workspace will never be "wiped" so it contains all the older versions as well, wiping this workspace
    // will be bad because we would lose all previously published versions
    //
    //
    node('stardog') {

        echo 'Unstashing fibo-publish-script artifacts:'
        sh 'ls -al'
        unstash 'fibo-publish-script'
        sh 'ls -al'

        echo 'Unstashing nomagic output:'
        unstash 'nomagic-output'
        sh 'ls -al'

        dir('target') {
            sh 'ls -al'
            sh 'find .'
            sh 'cp -r generated fibo'
            sh 'cp *.html fibo/generated/glossary'
            sh 'ls -al /mnt/jenkins-disk/spec.edmcouncil.org/'
            sh 'cp -vr . /mnt/jenkins-disk/spec.edmcouncil.org/'
        }
    }
}

